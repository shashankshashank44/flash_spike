!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACT	memdelay.h	/^        NOP, ACT, PRE,$/;"	m	class:memdelay_t::Command
ACTION_DEBUG_EXCEPTION	processor.h	/^  ACTION_DEBUG_EXCEPTION = MCONTROL_ACTION_DEBUG_EXCEPTION,$/;"	e	enum:__anon17
ACTION_DEBUG_MODE	processor.h	/^  ACTION_DEBUG_MODE = MCONTROL_ACTION_DEBUG_MODE,$/;"	e	enum:__anon17
ACTION_TRACE_EMIT	processor.h	/^  ACTION_TRACE_EMIT = MCONTROL_ACTION_TRACE_EMIT$/;"	e	enum:__anon17
ACTION_TRACE_START	processor.h	/^  ACTION_TRACE_START = MCONTROL_ACTION_TRACE_START,$/;"	e	enum:__anon17
ACTION_TRACE_STOP	processor.h	/^  ACTION_TRACE_STOP = MCONTROL_ACTION_TRACE_STOP,$/;"	e	enum:__anon17
AC_ACCESS_MEMORY	debug_defines.h	1666;"	d
AC_ACCESS_MEMORY_AAMPOSTINCREMENT	debug_defines.h	1707;"	d
AC_ACCESS_MEMORY_AAMPOSTINCREMENT_LENGTH	debug_defines.h	1706;"	d
AC_ACCESS_MEMORY_AAMPOSTINCREMENT_OFFSET	debug_defines.h	1705;"	d
AC_ACCESS_MEMORY_AAMSIZE	debug_defines.h	1699;"	d
AC_ACCESS_MEMORY_AAMSIZE_LENGTH	debug_defines.h	1698;"	d
AC_ACCESS_MEMORY_AAMSIZE_OFFSET	debug_defines.h	1697;"	d
AC_ACCESS_MEMORY_AAMVIRTUAL	debug_defines.h	1685;"	d
AC_ACCESS_MEMORY_AAMVIRTUAL_LENGTH	debug_defines.h	1684;"	d
AC_ACCESS_MEMORY_AAMVIRTUAL_OFFSET	debug_defines.h	1683;"	d
AC_ACCESS_MEMORY_CMDTYPE	debug_defines.h	1672;"	d
AC_ACCESS_MEMORY_CMDTYPE_LENGTH	debug_defines.h	1671;"	d
AC_ACCESS_MEMORY_CMDTYPE_OFFSET	debug_defines.h	1670;"	d
AC_ACCESS_MEMORY_TARGET_SPECIFIC	debug_defines.h	1724;"	d
AC_ACCESS_MEMORY_TARGET_SPECIFIC_LENGTH	debug_defines.h	1723;"	d
AC_ACCESS_MEMORY_TARGET_SPECIFIC_OFFSET	debug_defines.h	1722;"	d
AC_ACCESS_MEMORY_WRITE	debug_defines.h	1718;"	d
AC_ACCESS_MEMORY_WRITE_LENGTH	debug_defines.h	1717;"	d
AC_ACCESS_MEMORY_WRITE_OFFSET	debug_defines.h	1716;"	d
AC_ACCESS_REGISTER	debug_defines.h	1584;"	d
AC_ACCESS_REGISTER_AARPOSTINCREMENT	debug_defines.h	1616;"	d
AC_ACCESS_REGISTER_AARPOSTINCREMENT_LENGTH	debug_defines.h	1615;"	d
AC_ACCESS_REGISTER_AARPOSTINCREMENT_OFFSET	debug_defines.h	1614;"	d
AC_ACCESS_REGISTER_AARSIZE	debug_defines.h	1607;"	d
AC_ACCESS_REGISTER_AARSIZE_LENGTH	debug_defines.h	1606;"	d
AC_ACCESS_REGISTER_AARSIZE_OFFSET	debug_defines.h	1605;"	d
AC_ACCESS_REGISTER_CMDTYPE	debug_defines.h	1590;"	d
AC_ACCESS_REGISTER_CMDTYPE_LENGTH	debug_defines.h	1589;"	d
AC_ACCESS_REGISTER_CMDTYPE_OFFSET	debug_defines.h	1588;"	d
AC_ACCESS_REGISTER_POSTEXEC	debug_defines.h	1627;"	d
AC_ACCESS_REGISTER_POSTEXEC_LENGTH	debug_defines.h	1626;"	d
AC_ACCESS_REGISTER_POSTEXEC_OFFSET	debug_defines.h	1625;"	d
AC_ACCESS_REGISTER_REGNO	debug_defines.h	1658;"	d
AC_ACCESS_REGISTER_REGNO_LENGTH	debug_defines.h	1657;"	d
AC_ACCESS_REGISTER_REGNO_OFFSET	debug_defines.h	1656;"	d
AC_ACCESS_REGISTER_TRANSFER	debug_defines.h	1638;"	d
AC_ACCESS_REGISTER_TRANSFER_LENGTH	debug_defines.h	1637;"	d
AC_ACCESS_REGISTER_TRANSFER_OFFSET	debug_defines.h	1636;"	d
AC_ACCESS_REGISTER_WRITE	debug_defines.h	1649;"	d
AC_ACCESS_REGISTER_WRITE_LENGTH	debug_defines.h	1648;"	d
AC_ACCESS_REGISTER_WRITE_OFFSET	debug_defines.h	1647;"	d
AC_QUICK_ACCESS	debug_defines.h	1659;"	d
AC_QUICK_ACCESS_CMDTYPE	debug_defines.h	1665;"	d
AC_QUICK_ACCESS_CMDTYPE_LENGTH	debug_defines.h	1664;"	d
AC_QUICK_ACCESS_CMDTYPE_OFFSET	debug_defines.h	1663;"	d
BITS	processor.h	/^inline reg_t BITS(reg_t v, int hi, int lo){$/;"	f
BRANCH_TARGET	decode.h	191;"	d
BRANCH_TARGET	insns/beq.h	/^  set_pc(BRANCH_TARGET);$/;"	v
BRANCH_TARGET	insns/bge.h	/^  set_pc(BRANCH_TARGET);$/;"	v
BRANCH_TARGET	insns/bgeu.h	/^  set_pc(BRANCH_TARGET);$/;"	v
BRANCH_TARGET	insns/blt.h	/^  set_pc(BRANCH_TARGET);$/;"	v
BRANCH_TARGET	insns/bltu.h	/^  set_pc(BRANCH_TARGET);$/;"	v
BRANCH_TARGET	insns/bne.h	/^  set_pc(BRANCH_TARGET);$/;"	v
BUFFER_BASE	processor.h	/^  unsigned long BUFFER_BASE;$/;"	m	class:processor_t
BUFFER_RANGE	processor.h	/^  unsigned long BUFFER_RANGE;$/;"	m	class:processor_t
Bank	memdelay.h	/^	struct Bank$/;"	s	class:memdelay_t
Buffer_t	buffer_controller.h	/^	struct Buffer_t{$/;"	s	class:buffer_controller_t
CAPTURE_DR	jtag_dtm.h	/^  CAPTURE_DR,$/;"	e	enum:__anon13
CAPTURE_IR	jtag_dtm.h	/^  CAPTURE_IR,$/;"	e	enum:__anon13
CAUSE_BREAKPOINT	encoding.h	1767;"	d
CAUSE_FETCH_ACCESS	encoding.h	1765;"	d
CAUSE_FETCH_PAGE_FAULT	encoding.h	1776;"	d
CAUSE_HYPERVISOR_ECALL	encoding.h	1774;"	d
CAUSE_ILLEGAL_INSTRUCTION	encoding.h	1766;"	d
CAUSE_LOAD_ACCESS	encoding.h	1769;"	d
CAUSE_LOAD_PAGE_FAULT	encoding.h	1777;"	d
CAUSE_MACHINE_ECALL	encoding.h	1775;"	d
CAUSE_MISALIGNED_FETCH	encoding.h	1764;"	d
CAUSE_MISALIGNED_LOAD	encoding.h	1768;"	d
CAUSE_MISALIGNED_STORE	encoding.h	1770;"	d
CAUSE_STORE_ACCESS	encoding.h	1771;"	d
CAUSE_STORE_PAGE_FAULT	encoding.h	1778;"	d
CAUSE_SUPERVISOR_ECALL	encoding.h	1773;"	d
CAUSE_USER_ECALL	encoding.h	1772;"	d
CLINT_BASE	encoding.h	154;"	d
CLINT_SIZE	encoding.h	155;"	d
CMDERR_BUSY	debug_module.h	/^    CMDERR_BUSY = 1,$/;"	e	enum:cmderr
CMDERR_EXCEPTION	debug_module.h	/^    CMDERR_EXCEPTION = 3,$/;"	e	enum:cmderr
CMDERR_HALTRESUME	debug_module.h	/^    CMDERR_HALTRESUME = 4,$/;"	e	enum:cmderr
CMDERR_NONE	debug_module.h	/^    CMDERR_NONE = 0,$/;"	e	enum:cmderr
CMDERR_NOTSUP	debug_module.h	/^    CMDERR_NOTSUP = 2,$/;"	e	enum:cmderr
CMDERR_OTHER	debug_module.h	/^    CMDERR_OTHER = 7  $/;"	e	enum:cmderr
CONFIG_RANGE	buffer_controller.h	/^    const unsigned int CONFIG_RANGE = 1024;$/;"	m	class:buffer_controller_t
CPU_HZ	sim.h	/^  static const size_t CPU_HZ = 1000000000; \/\/ 1GHz CPU$/;"	m	class:sim_t
CSR_CYCLE	encoding.h	1525;"	d
CSR_CYCLEH	encoding.h	1701;"	d
CSR_DCSR	debug_defines.h	151;"	d
CSR_DCSR	encoding.h	1634;"	d
CSR_DCSR_CAUSE	debug_defines.h	254;"	d
CSR_DCSR_CAUSE_LENGTH	debug_defines.h	253;"	d
CSR_DCSR_CAUSE_OFFSET	debug_defines.h	252;"	d
CSR_DCSR_EBREAKM	debug_defines.h	171;"	d
CSR_DCSR_EBREAKM_LENGTH	debug_defines.h	170;"	d
CSR_DCSR_EBREAKM_OFFSET	debug_defines.h	169;"	d
CSR_DCSR_EBREAKS	debug_defines.h	180;"	d
CSR_DCSR_EBREAKS_LENGTH	debug_defines.h	179;"	d
CSR_DCSR_EBREAKS_OFFSET	debug_defines.h	178;"	d
CSR_DCSR_EBREAKU	debug_defines.h	189;"	d
CSR_DCSR_EBREAKU_LENGTH	debug_defines.h	188;"	d
CSR_DCSR_EBREAKU_OFFSET	debug_defines.h	187;"	d
CSR_DCSR_MPRVEN	debug_defines.h	264;"	d
CSR_DCSR_MPRVEN_LENGTH	debug_defines.h	263;"	d
CSR_DCSR_MPRVEN_OFFSET	debug_defines.h	262;"	d
CSR_DCSR_NMIP	debug_defines.h	274;"	d
CSR_DCSR_NMIP_LENGTH	debug_defines.h	273;"	d
CSR_DCSR_NMIP_OFFSET	debug_defines.h	272;"	d
CSR_DCSR_PRV	debug_defines.h	300;"	d
CSR_DCSR_PRV_LENGTH	debug_defines.h	299;"	d
CSR_DCSR_PRV_OFFSET	debug_defines.h	298;"	d
CSR_DCSR_STEP	debug_defines.h	287;"	d
CSR_DCSR_STEPIE	debug_defines.h	203;"	d
CSR_DCSR_STEPIE_LENGTH	debug_defines.h	202;"	d
CSR_DCSR_STEPIE_OFFSET	debug_defines.h	201;"	d
CSR_DCSR_STEP_LENGTH	debug_defines.h	286;"	d
CSR_DCSR_STEP_OFFSET	debug_defines.h	285;"	d
CSR_DCSR_STOPCOUNT	debug_defines.h	217;"	d
CSR_DCSR_STOPCOUNT_LENGTH	debug_defines.h	216;"	d
CSR_DCSR_STOPCOUNT_OFFSET	debug_defines.h	215;"	d
CSR_DCSR_STOPTIME	debug_defines.h	227;"	d
CSR_DCSR_STOPTIME_LENGTH	debug_defines.h	226;"	d
CSR_DCSR_STOPTIME_OFFSET	debug_defines.h	225;"	d
CSR_DCSR_XDEBUGVER	debug_defines.h	162;"	d
CSR_DCSR_XDEBUGVER_LENGTH	debug_defines.h	161;"	d
CSR_DCSR_XDEBUGVER_OFFSET	debug_defines.h	160;"	d
CSR_DPC	debug_defines.h	301;"	d
CSR_DPC	encoding.h	1635;"	d
CSR_DPC_DPC	debug_defines.h	304;"	d
CSR_DPC_DPC_LENGTH	debug_defines.h	303;"	d
CSR_DPC_DPC_OFFSET	debug_defines.h	302;"	d
CSR_DSCRATCH	encoding.h	1636;"	d
CSR_DSCRATCH0	debug_defines.h	305;"	d
CSR_DSCRATCH1	debug_defines.h	306;"	d
CSR_ETRIGGER	debug_defines.h	745;"	d
CSR_ETRIGGER_ACTION	debug_defines.h	796;"	d
CSR_ETRIGGER_ACTION_LENGTH	debug_defines.h	795;"	d
CSR_ETRIGGER_ACTION_OFFSET	debug_defines.h	794;"	d
CSR_ETRIGGER_DMODE	debug_defines.h	751;"	d
CSR_ETRIGGER_DMODE_LENGTH	debug_defines.h	750;"	d
CSR_ETRIGGER_DMODE_OFFSET	debug_defines.h	749;"	d
CSR_ETRIGGER_HIT	debug_defines.h	761;"	d
CSR_ETRIGGER_HIT_LENGTH	debug_defines.h	760;"	d
CSR_ETRIGGER_HIT_OFFSET	debug_defines.h	759;"	d
CSR_ETRIGGER_M	debug_defines.h	775;"	d
CSR_ETRIGGER_M_LENGTH	debug_defines.h	774;"	d
CSR_ETRIGGER_M_OFFSET	debug_defines.h	773;"	d
CSR_ETRIGGER_NMI	debug_defines.h	768;"	d
CSR_ETRIGGER_NMI_LENGTH	debug_defines.h	767;"	d
CSR_ETRIGGER_NMI_OFFSET	debug_defines.h	766;"	d
CSR_ETRIGGER_S	debug_defines.h	782;"	d
CSR_ETRIGGER_S_LENGTH	debug_defines.h	781;"	d
CSR_ETRIGGER_S_OFFSET	debug_defines.h	780;"	d
CSR_ETRIGGER_TYPE	debug_defines.h	748;"	d
CSR_ETRIGGER_TYPE_LENGTH	debug_defines.h	747;"	d
CSR_ETRIGGER_TYPE_OFFSET	debug_defines.h	746;"	d
CSR_ETRIGGER_U	debug_defines.h	789;"	d
CSR_ETRIGGER_U_LENGTH	debug_defines.h	788;"	d
CSR_ETRIGGER_U_OFFSET	debug_defines.h	787;"	d
CSR_FCSR	encoding.h	1513;"	d
CSR_FFLAGS	encoding.h	1511;"	d
CSR_FRM	encoding.h	1512;"	d
CSR_HCOUNTEREN	encoding.h	1581;"	d
CSR_HEDELEG	encoding.h	1579;"	d
CSR_HGATP	encoding.h	1582;"	d
CSR_HIDELEG	encoding.h	1580;"	d
CSR_HPMCOUNTER10	encoding.h	1535;"	d
CSR_HPMCOUNTER10H	encoding.h	1711;"	d
CSR_HPMCOUNTER11	encoding.h	1536;"	d
CSR_HPMCOUNTER11H	encoding.h	1712;"	d
CSR_HPMCOUNTER12	encoding.h	1537;"	d
CSR_HPMCOUNTER12H	encoding.h	1713;"	d
CSR_HPMCOUNTER13	encoding.h	1538;"	d
CSR_HPMCOUNTER13H	encoding.h	1714;"	d
CSR_HPMCOUNTER14	encoding.h	1539;"	d
CSR_HPMCOUNTER14H	encoding.h	1715;"	d
CSR_HPMCOUNTER15	encoding.h	1540;"	d
CSR_HPMCOUNTER15H	encoding.h	1716;"	d
CSR_HPMCOUNTER16	encoding.h	1541;"	d
CSR_HPMCOUNTER16H	encoding.h	1717;"	d
CSR_HPMCOUNTER17	encoding.h	1542;"	d
CSR_HPMCOUNTER17H	encoding.h	1718;"	d
CSR_HPMCOUNTER18	encoding.h	1543;"	d
CSR_HPMCOUNTER18H	encoding.h	1719;"	d
CSR_HPMCOUNTER19	encoding.h	1544;"	d
CSR_HPMCOUNTER19H	encoding.h	1720;"	d
CSR_HPMCOUNTER20	encoding.h	1545;"	d
CSR_HPMCOUNTER20H	encoding.h	1721;"	d
CSR_HPMCOUNTER21	encoding.h	1546;"	d
CSR_HPMCOUNTER21H	encoding.h	1722;"	d
CSR_HPMCOUNTER22	encoding.h	1547;"	d
CSR_HPMCOUNTER22H	encoding.h	1723;"	d
CSR_HPMCOUNTER23	encoding.h	1548;"	d
CSR_HPMCOUNTER23H	encoding.h	1724;"	d
CSR_HPMCOUNTER24	encoding.h	1549;"	d
CSR_HPMCOUNTER24H	encoding.h	1725;"	d
CSR_HPMCOUNTER25	encoding.h	1550;"	d
CSR_HPMCOUNTER25H	encoding.h	1726;"	d
CSR_HPMCOUNTER26	encoding.h	1551;"	d
CSR_HPMCOUNTER26H	encoding.h	1727;"	d
CSR_HPMCOUNTER27	encoding.h	1552;"	d
CSR_HPMCOUNTER27H	encoding.h	1728;"	d
CSR_HPMCOUNTER28	encoding.h	1553;"	d
CSR_HPMCOUNTER28H	encoding.h	1729;"	d
CSR_HPMCOUNTER29	encoding.h	1554;"	d
CSR_HPMCOUNTER29H	encoding.h	1730;"	d
CSR_HPMCOUNTER3	encoding.h	1528;"	d
CSR_HPMCOUNTER30	encoding.h	1555;"	d
CSR_HPMCOUNTER30H	encoding.h	1731;"	d
CSR_HPMCOUNTER31	encoding.h	1556;"	d
CSR_HPMCOUNTER31H	encoding.h	1732;"	d
CSR_HPMCOUNTER3H	encoding.h	1704;"	d
CSR_HPMCOUNTER4	encoding.h	1529;"	d
CSR_HPMCOUNTER4H	encoding.h	1705;"	d
CSR_HPMCOUNTER5	encoding.h	1530;"	d
CSR_HPMCOUNTER5H	encoding.h	1706;"	d
CSR_HPMCOUNTER6	encoding.h	1531;"	d
CSR_HPMCOUNTER6H	encoding.h	1707;"	d
CSR_HPMCOUNTER7	encoding.h	1532;"	d
CSR_HPMCOUNTER7H	encoding.h	1708;"	d
CSR_HPMCOUNTER8	encoding.h	1533;"	d
CSR_HPMCOUNTER8H	encoding.h	1709;"	d
CSR_HPMCOUNTER9	encoding.h	1534;"	d
CSR_HPMCOUNTER9H	encoding.h	1710;"	d
CSR_HSTATUS	encoding.h	1578;"	d
CSR_ICOUNT	debug_defines.h	646;"	d
CSR_ICOUNT_ACTION	debug_defines.h	699;"	d
CSR_ICOUNT_ACTION_LENGTH	debug_defines.h	698;"	d
CSR_ICOUNT_ACTION_OFFSET	debug_defines.h	697;"	d
CSR_ICOUNT_COUNT	debug_defines.h	671;"	d
CSR_ICOUNT_COUNT_LENGTH	debug_defines.h	670;"	d
CSR_ICOUNT_COUNT_OFFSET	debug_defines.h	669;"	d
CSR_ICOUNT_DMODE	debug_defines.h	652;"	d
CSR_ICOUNT_DMODE_LENGTH	debug_defines.h	651;"	d
CSR_ICOUNT_DMODE_OFFSET	debug_defines.h	650;"	d
CSR_ICOUNT_HIT	debug_defines.h	662;"	d
CSR_ICOUNT_HIT_LENGTH	debug_defines.h	661;"	d
CSR_ICOUNT_HIT_OFFSET	debug_defines.h	660;"	d
CSR_ICOUNT_M	debug_defines.h	678;"	d
CSR_ICOUNT_M_LENGTH	debug_defines.h	677;"	d
CSR_ICOUNT_M_OFFSET	debug_defines.h	676;"	d
CSR_ICOUNT_S	debug_defines.h	685;"	d
CSR_ICOUNT_S_LENGTH	debug_defines.h	684;"	d
CSR_ICOUNT_S_OFFSET	debug_defines.h	683;"	d
CSR_ICOUNT_TYPE	debug_defines.h	649;"	d
CSR_ICOUNT_TYPE_LENGTH	debug_defines.h	648;"	d
CSR_ICOUNT_TYPE_OFFSET	debug_defines.h	647;"	d
CSR_ICOUNT_U	debug_defines.h	692;"	d
CSR_ICOUNT_U_LENGTH	debug_defines.h	691;"	d
CSR_ICOUNT_U_OFFSET	debug_defines.h	690;"	d
CSR_INSTRET	encoding.h	1527;"	d
CSR_INSTRETH	encoding.h	1703;"	d
CSR_ITRIGGER	debug_defines.h	700;"	d
CSR_ITRIGGER_ACTION	debug_defines.h	744;"	d
CSR_ITRIGGER_ACTION_LENGTH	debug_defines.h	743;"	d
CSR_ITRIGGER_ACTION_OFFSET	debug_defines.h	742;"	d
CSR_ITRIGGER_DMODE	debug_defines.h	706;"	d
CSR_ITRIGGER_DMODE_LENGTH	debug_defines.h	705;"	d
CSR_ITRIGGER_DMODE_OFFSET	debug_defines.h	704;"	d
CSR_ITRIGGER_HIT	debug_defines.h	716;"	d
CSR_ITRIGGER_HIT_LENGTH	debug_defines.h	715;"	d
CSR_ITRIGGER_HIT_OFFSET	debug_defines.h	714;"	d
CSR_ITRIGGER_M	debug_defines.h	723;"	d
CSR_ITRIGGER_M_LENGTH	debug_defines.h	722;"	d
CSR_ITRIGGER_M_OFFSET	debug_defines.h	721;"	d
CSR_ITRIGGER_S	debug_defines.h	730;"	d
CSR_ITRIGGER_S_LENGTH	debug_defines.h	729;"	d
CSR_ITRIGGER_S_OFFSET	debug_defines.h	728;"	d
CSR_ITRIGGER_TYPE	debug_defines.h	703;"	d
CSR_ITRIGGER_TYPE_LENGTH	debug_defines.h	702;"	d
CSR_ITRIGGER_TYPE_OFFSET	debug_defines.h	701;"	d
CSR_ITRIGGER_U	debug_defines.h	737;"	d
CSR_ITRIGGER_U_LENGTH	debug_defines.h	736;"	d
CSR_ITRIGGER_U_OFFSET	debug_defines.h	735;"	d
CSR_MARCHID	encoding.h	1698;"	d
CSR_MCAUSE	encoding.h	1607;"	d
CSR_MCONTEXT	debug_defines.h	406;"	d
CSR_MCONTEXT_MCONTEXT	debug_defines.h	418;"	d
CSR_MCONTEXT_MCONTEXT_LENGTH	debug_defines.h	417;"	d
CSR_MCONTEXT_MCONTEXT_OFFSET	debug_defines.h	416;"	d
CSR_MCONTROL	debug_defines.h	432;"	d
CSR_MCONTROL_ACTION	debug_defines.h	550;"	d
CSR_MCONTROL_ACTION_LENGTH	debug_defines.h	549;"	d
CSR_MCONTROL_ACTION_OFFSET	debug_defines.h	548;"	d
CSR_MCONTROL_CHAIN	debug_defines.h	579;"	d
CSR_MCONTROL_CHAIN_LENGTH	debug_defines.h	578;"	d
CSR_MCONTROL_CHAIN_OFFSET	debug_defines.h	577;"	d
CSR_MCONTROL_DMODE	debug_defines.h	438;"	d
CSR_MCONTROL_DMODE_LENGTH	debug_defines.h	437;"	d
CSR_MCONTROL_DMODE_OFFSET	debug_defines.h	436;"	d
CSR_MCONTROL_EXECUTE	debug_defines.h	633;"	d
CSR_MCONTROL_EXECUTE_LENGTH	debug_defines.h	632;"	d
CSR_MCONTROL_EXECUTE_OFFSET	debug_defines.h	631;"	d
CSR_MCONTROL_HIT	debug_defines.h	468;"	d
CSR_MCONTROL_HIT_LENGTH	debug_defines.h	467;"	d
CSR_MCONTROL_HIT_OFFSET	debug_defines.h	466;"	d
CSR_MCONTROL_LOAD	debug_defines.h	645;"	d
CSR_MCONTROL_LOAD_LENGTH	debug_defines.h	644;"	d
CSR_MCONTROL_LOAD_OFFSET	debug_defines.h	643;"	d
CSR_MCONTROL_M	debug_defines.h	614;"	d
CSR_MCONTROL_MASKMAX	debug_defines.h	450;"	d
CSR_MCONTROL_MASKMAX_LENGTH	debug_defines.h	449;"	d
CSR_MCONTROL_MASKMAX_OFFSET	debug_defines.h	448;"	d
CSR_MCONTROL_MATCH	debug_defines.h	608;"	d
CSR_MCONTROL_MATCH_LENGTH	debug_defines.h	607;"	d
CSR_MCONTROL_MATCH_OFFSET	debug_defines.h	606;"	d
CSR_MCONTROL_M_LENGTH	debug_defines.h	613;"	d
CSR_MCONTROL_M_OFFSET	debug_defines.h	612;"	d
CSR_MCONTROL_S	debug_defines.h	620;"	d
CSR_MCONTROL_SELECT	debug_defines.h	478;"	d
CSR_MCONTROL_SELECT_LENGTH	debug_defines.h	477;"	d
CSR_MCONTROL_SELECT_OFFSET	debug_defines.h	476;"	d
CSR_MCONTROL_SIZEHI	debug_defines.h	458;"	d
CSR_MCONTROL_SIZEHI_LENGTH	debug_defines.h	457;"	d
CSR_MCONTROL_SIZEHI_OFFSET	debug_defines.h	456;"	d
CSR_MCONTROL_SIZELO	debug_defines.h	543;"	d
CSR_MCONTROL_SIZELO_LENGTH	debug_defines.h	542;"	d
CSR_MCONTROL_SIZELO_OFFSET	debug_defines.h	541;"	d
CSR_MCONTROL_STORE	debug_defines.h	639;"	d
CSR_MCONTROL_STORE_LENGTH	debug_defines.h	638;"	d
CSR_MCONTROL_STORE_OFFSET	debug_defines.h	637;"	d
CSR_MCONTROL_S_LENGTH	debug_defines.h	619;"	d
CSR_MCONTROL_S_OFFSET	debug_defines.h	618;"	d
CSR_MCONTROL_TIMING	debug_defines.h	510;"	d
CSR_MCONTROL_TIMING_LENGTH	debug_defines.h	509;"	d
CSR_MCONTROL_TIMING_OFFSET	debug_defines.h	508;"	d
CSR_MCONTROL_TYPE	debug_defines.h	435;"	d
CSR_MCONTROL_TYPE_LENGTH	debug_defines.h	434;"	d
CSR_MCONTROL_TYPE_OFFSET	debug_defines.h	433;"	d
CSR_MCONTROL_U	debug_defines.h	626;"	d
CSR_MCONTROL_U_LENGTH	debug_defines.h	625;"	d
CSR_MCONTROL_U_OFFSET	debug_defines.h	624;"	d
CSR_MCOUNTEREN	encoding.h	1604;"	d
CSR_MCYCLE	encoding.h	1637;"	d
CSR_MCYCLEH	encoding.h	1733;"	d
CSR_MEDELEG	encoding.h	1600;"	d
CSR_MEPC	encoding.h	1606;"	d
CSR_MHARTID	encoding.h	1700;"	d
CSR_MHPMCOUNTER10	encoding.h	1646;"	d
CSR_MHPMCOUNTER10H	encoding.h	1742;"	d
CSR_MHPMCOUNTER11	encoding.h	1647;"	d
CSR_MHPMCOUNTER11H	encoding.h	1743;"	d
CSR_MHPMCOUNTER12	encoding.h	1648;"	d
CSR_MHPMCOUNTER12H	encoding.h	1744;"	d
CSR_MHPMCOUNTER13	encoding.h	1649;"	d
CSR_MHPMCOUNTER13H	encoding.h	1745;"	d
CSR_MHPMCOUNTER14	encoding.h	1650;"	d
CSR_MHPMCOUNTER14H	encoding.h	1746;"	d
CSR_MHPMCOUNTER15	encoding.h	1651;"	d
CSR_MHPMCOUNTER15H	encoding.h	1747;"	d
CSR_MHPMCOUNTER16	encoding.h	1652;"	d
CSR_MHPMCOUNTER16H	encoding.h	1748;"	d
CSR_MHPMCOUNTER17	encoding.h	1653;"	d
CSR_MHPMCOUNTER17H	encoding.h	1749;"	d
CSR_MHPMCOUNTER18	encoding.h	1654;"	d
CSR_MHPMCOUNTER18H	encoding.h	1750;"	d
CSR_MHPMCOUNTER19	encoding.h	1655;"	d
CSR_MHPMCOUNTER19H	encoding.h	1751;"	d
CSR_MHPMCOUNTER20	encoding.h	1656;"	d
CSR_MHPMCOUNTER20H	encoding.h	1752;"	d
CSR_MHPMCOUNTER21	encoding.h	1657;"	d
CSR_MHPMCOUNTER21H	encoding.h	1753;"	d
CSR_MHPMCOUNTER22	encoding.h	1658;"	d
CSR_MHPMCOUNTER22H	encoding.h	1754;"	d
CSR_MHPMCOUNTER23	encoding.h	1659;"	d
CSR_MHPMCOUNTER23H	encoding.h	1755;"	d
CSR_MHPMCOUNTER24	encoding.h	1660;"	d
CSR_MHPMCOUNTER24H	encoding.h	1756;"	d
CSR_MHPMCOUNTER25	encoding.h	1661;"	d
CSR_MHPMCOUNTER25H	encoding.h	1757;"	d
CSR_MHPMCOUNTER26	encoding.h	1662;"	d
CSR_MHPMCOUNTER26H	encoding.h	1758;"	d
CSR_MHPMCOUNTER27	encoding.h	1663;"	d
CSR_MHPMCOUNTER27H	encoding.h	1759;"	d
CSR_MHPMCOUNTER28	encoding.h	1664;"	d
CSR_MHPMCOUNTER28H	encoding.h	1760;"	d
CSR_MHPMCOUNTER29	encoding.h	1665;"	d
CSR_MHPMCOUNTER29H	encoding.h	1761;"	d
CSR_MHPMCOUNTER3	encoding.h	1639;"	d
CSR_MHPMCOUNTER30	encoding.h	1666;"	d
CSR_MHPMCOUNTER30H	encoding.h	1762;"	d
CSR_MHPMCOUNTER31	encoding.h	1667;"	d
CSR_MHPMCOUNTER31H	encoding.h	1763;"	d
CSR_MHPMCOUNTER3H	encoding.h	1735;"	d
CSR_MHPMCOUNTER4	encoding.h	1640;"	d
CSR_MHPMCOUNTER4H	encoding.h	1736;"	d
CSR_MHPMCOUNTER5	encoding.h	1641;"	d
CSR_MHPMCOUNTER5H	encoding.h	1737;"	d
CSR_MHPMCOUNTER6	encoding.h	1642;"	d
CSR_MHPMCOUNTER6H	encoding.h	1738;"	d
CSR_MHPMCOUNTER7	encoding.h	1643;"	d
CSR_MHPMCOUNTER7H	encoding.h	1739;"	d
CSR_MHPMCOUNTER8	encoding.h	1644;"	d
CSR_MHPMCOUNTER8H	encoding.h	1740;"	d
CSR_MHPMCOUNTER9	encoding.h	1645;"	d
CSR_MHPMCOUNTER9H	encoding.h	1741;"	d
CSR_MHPMEVENT10	encoding.h	1675;"	d
CSR_MHPMEVENT11	encoding.h	1676;"	d
CSR_MHPMEVENT12	encoding.h	1677;"	d
CSR_MHPMEVENT13	encoding.h	1678;"	d
CSR_MHPMEVENT14	encoding.h	1679;"	d
CSR_MHPMEVENT15	encoding.h	1680;"	d
CSR_MHPMEVENT16	encoding.h	1681;"	d
CSR_MHPMEVENT17	encoding.h	1682;"	d
CSR_MHPMEVENT18	encoding.h	1683;"	d
CSR_MHPMEVENT19	encoding.h	1684;"	d
CSR_MHPMEVENT20	encoding.h	1685;"	d
CSR_MHPMEVENT21	encoding.h	1686;"	d
CSR_MHPMEVENT22	encoding.h	1687;"	d
CSR_MHPMEVENT23	encoding.h	1688;"	d
CSR_MHPMEVENT24	encoding.h	1689;"	d
CSR_MHPMEVENT25	encoding.h	1690;"	d
CSR_MHPMEVENT26	encoding.h	1691;"	d
CSR_MHPMEVENT27	encoding.h	1692;"	d
CSR_MHPMEVENT28	encoding.h	1693;"	d
CSR_MHPMEVENT29	encoding.h	1694;"	d
CSR_MHPMEVENT3	encoding.h	1668;"	d
CSR_MHPMEVENT30	encoding.h	1695;"	d
CSR_MHPMEVENT31	encoding.h	1696;"	d
CSR_MHPMEVENT4	encoding.h	1669;"	d
CSR_MHPMEVENT5	encoding.h	1670;"	d
CSR_MHPMEVENT6	encoding.h	1671;"	d
CSR_MHPMEVENT7	encoding.h	1672;"	d
CSR_MHPMEVENT8	encoding.h	1673;"	d
CSR_MHPMEVENT9	encoding.h	1674;"	d
CSR_MIDELEG	encoding.h	1601;"	d
CSR_MIE	encoding.h	1602;"	d
CSR_MIMPID	encoding.h	1699;"	d
CSR_MINSTRET	encoding.h	1638;"	d
CSR_MINSTRETH	encoding.h	1734;"	d
CSR_MINTSTATUS	encoding.h	1595;"	d
CSR_MIP	encoding.h	1609;"	d
CSR_MISA	encoding.h	1599;"	d
CSR_MNXTI	encoding.h	1594;"	d
CSR_MSCRATCH	encoding.h	1605;"	d
CSR_MSCRATCHCSW	encoding.h	1596;"	d
CSR_MSCRATCHCSWL	encoding.h	1597;"	d
CSR_MSTATUS	encoding.h	1598;"	d
CSR_MTVAL	encoding.h	1608;"	d
CSR_MTVEC	encoding.h	1603;"	d
CSR_MTVT	encoding.h	1593;"	d
CSR_MVENDORID	encoding.h	1697;"	d
CSR_PMPADDR0	encoding.h	1614;"	d
CSR_PMPADDR1	encoding.h	1615;"	d
CSR_PMPADDR10	encoding.h	1624;"	d
CSR_PMPADDR11	encoding.h	1625;"	d
CSR_PMPADDR12	encoding.h	1626;"	d
CSR_PMPADDR13	encoding.h	1627;"	d
CSR_PMPADDR14	encoding.h	1628;"	d
CSR_PMPADDR15	encoding.h	1629;"	d
CSR_PMPADDR2	encoding.h	1616;"	d
CSR_PMPADDR3	encoding.h	1617;"	d
CSR_PMPADDR4	encoding.h	1618;"	d
CSR_PMPADDR5	encoding.h	1619;"	d
CSR_PMPADDR6	encoding.h	1620;"	d
CSR_PMPADDR7	encoding.h	1621;"	d
CSR_PMPADDR8	encoding.h	1622;"	d
CSR_PMPADDR9	encoding.h	1623;"	d
CSR_PMPCFG0	encoding.h	1610;"	d
CSR_PMPCFG1	encoding.h	1611;"	d
CSR_PMPCFG2	encoding.h	1612;"	d
CSR_PMPCFG3	encoding.h	1613;"	d
CSR_SATP	encoding.h	1568;"	d
CSR_SCAUSE	encoding.h	1565;"	d
CSR_SCONTEXT	debug_defines.h	419;"	d
CSR_SCONTEXT_DATA	debug_defines.h	431;"	d
CSR_SCONTEXT_DATA_LENGTH	debug_defines.h	430;"	d
CSR_SCONTEXT_DATA_OFFSET	debug_defines.h	429;"	d
CSR_SCOUNTEREN	encoding.h	1562;"	d
CSR_SEPC	encoding.h	1564;"	d
CSR_SIE	encoding.h	1560;"	d
CSR_SINTSTATUS	encoding.h	1590;"	d
CSR_SIP	encoding.h	1567;"	d
CSR_SNXTI	encoding.h	1589;"	d
CSR_SSCRATCH	encoding.h	1563;"	d
CSR_SSCRATCHCSW	encoding.h	1591;"	d
CSR_SSCRATCHCSWL	encoding.h	1592;"	d
CSR_SSTATUS	encoding.h	1559;"	d
CSR_STVAL	encoding.h	1566;"	d
CSR_STVEC	encoding.h	1561;"	d
CSR_STVT	encoding.h	1588;"	d
CSR_TCONTROL	debug_defines.h	383;"	d
CSR_TCONTROL_MPTE	debug_defines.h	392;"	d
CSR_TCONTROL_MPTE_LENGTH	debug_defines.h	391;"	d
CSR_TCONTROL_MPTE_OFFSET	debug_defines.h	390;"	d
CSR_TCONTROL_MTE	debug_defines.h	405;"	d
CSR_TCONTROL_MTE_LENGTH	debug_defines.h	404;"	d
CSR_TCONTROL_MTE_OFFSET	debug_defines.h	403;"	d
CSR_TDATA1	debug_defines.h	311;"	d
CSR_TDATA1	encoding.h	1631;"	d
CSR_TDATA1_DATA	debug_defines.h	357;"	d
CSR_TDATA1_DATA_LENGTH	debug_defines.h	356;"	d
CSR_TDATA1_DATA_OFFSET	debug_defines.h	355;"	d
CSR_TDATA1_DMODE	debug_defines.h	351;"	d
CSR_TDATA1_DMODE_LENGTH	debug_defines.h	350;"	d
CSR_TDATA1_DMODE_OFFSET	debug_defines.h	349;"	d
CSR_TDATA1_TYPE	debug_defines.h	339;"	d
CSR_TDATA1_TYPE_LENGTH	debug_defines.h	338;"	d
CSR_TDATA1_TYPE_OFFSET	debug_defines.h	337;"	d
CSR_TDATA2	debug_defines.h	358;"	d
CSR_TDATA2	encoding.h	1632;"	d
CSR_TDATA2_DATA	debug_defines.h	361;"	d
CSR_TDATA2_DATA_LENGTH	debug_defines.h	360;"	d
CSR_TDATA2_DATA_OFFSET	debug_defines.h	359;"	d
CSR_TDATA3	debug_defines.h	362;"	d
CSR_TDATA3	encoding.h	1633;"	d
CSR_TDATA3_DATA	debug_defines.h	365;"	d
CSR_TDATA3_DATA_LENGTH	debug_defines.h	364;"	d
CSR_TDATA3_DATA_OFFSET	debug_defines.h	363;"	d
CSR_TEXTRA32	debug_defines.h	797;"	d
CSR_TEXTRA32_MSELECT	debug_defines.h	812;"	d
CSR_TEXTRA32_MSELECT_LENGTH	debug_defines.h	811;"	d
CSR_TEXTRA32_MSELECT_OFFSET	debug_defines.h	810;"	d
CSR_TEXTRA32_MVALUE	debug_defines.h	803;"	d
CSR_TEXTRA32_MVALUE_LENGTH	debug_defines.h	802;"	d
CSR_TEXTRA32_MVALUE_OFFSET	debug_defines.h	801;"	d
CSR_TEXTRA32_SSELECT	debug_defines.h	831;"	d
CSR_TEXTRA32_SSELECT_LENGTH	debug_defines.h	830;"	d
CSR_TEXTRA32_SSELECT_OFFSET	debug_defines.h	829;"	d
CSR_TEXTRA32_SVALUE	debug_defines.h	818;"	d
CSR_TEXTRA32_SVALUE_LENGTH	debug_defines.h	817;"	d
CSR_TEXTRA32_SVALUE_OFFSET	debug_defines.h	816;"	d
CSR_TEXTRA64	debug_defines.h	832;"	d
CSR_TEXTRA64_MSELECT	debug_defines.h	838;"	d
CSR_TEXTRA64_MSELECT_LENGTH	debug_defines.h	837;"	d
CSR_TEXTRA64_MSELECT_OFFSET	debug_defines.h	836;"	d
CSR_TEXTRA64_MVALUE	debug_defines.h	835;"	d
CSR_TEXTRA64_MVALUE_LENGTH	debug_defines.h	834;"	d
CSR_TEXTRA64_MVALUE_OFFSET	debug_defines.h	833;"	d
CSR_TEXTRA64_SSELECT	debug_defines.h	844;"	d
CSR_TEXTRA64_SSELECT_LENGTH	debug_defines.h	843;"	d
CSR_TEXTRA64_SSELECT_OFFSET	debug_defines.h	842;"	d
CSR_TEXTRA64_SVALUE	debug_defines.h	841;"	d
CSR_TEXTRA64_SVALUE_LENGTH	debug_defines.h	840;"	d
CSR_TEXTRA64_SVALUE_OFFSET	debug_defines.h	839;"	d
CSR_TIME	encoding.h	1526;"	d
CSR_TIMEH	encoding.h	1702;"	d
CSR_TINFO	debug_defines.h	366;"	d
CSR_TINFO_INFO	debug_defines.h	382;"	d
CSR_TINFO_INFO_LENGTH	debug_defines.h	381;"	d
CSR_TINFO_INFO_OFFSET	debug_defines.h	380;"	d
CSR_TSELECT	debug_defines.h	307;"	d
CSR_TSELECT	encoding.h	1630;"	d
CSR_TSELECT_INDEX	debug_defines.h	310;"	d
CSR_TSELECT_INDEX_LENGTH	debug_defines.h	309;"	d
CSR_TSELECT_INDEX_OFFSET	debug_defines.h	308;"	d
CSR_UCAUSE	encoding.h	1522;"	d
CSR_UEPC	encoding.h	1521;"	d
CSR_UIE	encoding.h	1515;"	d
CSR_UINTSTATUS	encoding.h	1585;"	d
CSR_UIP	encoding.h	1524;"	d
CSR_UNXTI	encoding.h	1584;"	d
CSR_USCRATCH	encoding.h	1520;"	d
CSR_USCRATCHCSW	encoding.h	1586;"	d
CSR_USCRATCHCSWL	encoding.h	1587;"	d
CSR_USTATUS	encoding.h	1514;"	d
CSR_UTVAL	encoding.h	1523;"	d
CSR_UTVEC	encoding.h	1516;"	d
CSR_UTVT	encoding.h	1583;"	d
CSR_VL	encoding.h	1557;"	d
CSR_VSATP	encoding.h	1577;"	d
CSR_VSCAUSE	encoding.h	1574;"	d
CSR_VSEPC	encoding.h	1573;"	d
CSR_VSIE	encoding.h	1570;"	d
CSR_VSIP	encoding.h	1576;"	d
CSR_VSSCRATCH	encoding.h	1572;"	d
CSR_VSSTATUS	encoding.h	1569;"	d
CSR_VSTART	encoding.h	1517;"	d
CSR_VSTVAL	encoding.h	1575;"	d
CSR_VSTVEC	encoding.h	1571;"	d
CSR_VTYPE	encoding.h	1558;"	d
CSR_VXRM	encoding.h	1519;"	d
CSR_VXSAT	encoding.h	1518;"	d
CSR_flag	memdelay.h	/^	bool CSR_flag = 0;$/;"	m	class:memdelay_t
CSR_flag	processor.h	/^  bool CSR_flag = 0;$/;"	m	class:processor_t
Channel	memdelay.h	/^    struct Channel$/;"	s	class:memdelay_t
Command	memdelay.h	/^    enum class Command : int$/;"	c	class:memdelay_t
Controller	flashmodel.h	/^	struct Controller{$/;"	s	class:flashmodel_t
Controller	memdelay.h	/^		struct Controller{$/;"	s	struct:memdelay_t::Channel
D	debug_module.cc	15;"	d	file:
D	jtag_dtm.cc	11;"	d	file:
D	remote_bitbang.cc	22;"	d	file:
D	remote_bitbang.cc	24;"	d	file:
DCSR_CAUSE	encoding.h	52;"	d
DCSR_CAUSE_DEBUGINT	encoding.h	61;"	d
DCSR_CAUSE_HALT	encoding.h	63;"	d
DCSR_CAUSE_HWBP	encoding.h	60;"	d
DCSR_CAUSE_NONE	encoding.h	58;"	d
DCSR_CAUSE_STEP	encoding.h	62;"	d
DCSR_CAUSE_SWBP	encoding.h	59;"	d
DCSR_DEBUGINT	encoding.h	53;"	d
DCSR_EBREAKH	encoding.h	47;"	d
DCSR_EBREAKM	encoding.h	46;"	d
DCSR_EBREAKS	encoding.h	48;"	d
DCSR_EBREAKU	encoding.h	49;"	d
DCSR_FULLRESET	encoding.h	45;"	d
DCSR_HALT	encoding.h	54;"	d
DCSR_NDRESET	encoding.h	44;"	d
DCSR_PRV	encoding.h	56;"	d
DCSR_STEP	encoding.h	55;"	d
DCSR_STOPCYCLE	encoding.h	50;"	d
DCSR_STOPTIME	encoding.h	51;"	d
DCSR_XDEBUGVER	encoding.h	43;"	d
DEBUG_END	decode.h	1736;"	d
DEBUG_ROM_DEFINES_H	debug_rom_defines.h	4;"	d
DEBUG_ROM_ENTRY	debug_rom_defines.h	20;"	d
DEBUG_ROM_EXCEPTION	debug_rom_defines.h	10;"	d
DEBUG_ROM_FLAGS	debug_rom_defines.h	14;"	d
DEBUG_ROM_FLAG_GO	debug_rom_defines.h	15;"	d
DEBUG_ROM_FLAG_RESUME	debug_rom_defines.h	16;"	d
DEBUG_ROM_GOING	debug_rom_defines.h	8;"	d
DEBUG_ROM_HALTED	debug_rom_defines.h	7;"	d
DEBUG_ROM_RESUMING	debug_rom_defines.h	9;"	d
DEBUG_ROM_TVEC	debug_rom_defines.h	21;"	d
DEBUG_ROM_WHERETO	debug_rom_defines.h	19;"	d
DEBUG_RVV	decode.h	316;"	d
DEBUG_RVV_FMA_VF	decode.h	325;"	d
DEBUG_RVV_FMA_VF	decode.h	331;"	d
DEBUG_RVV_FMA_VV	decode.h	323;"	d
DEBUG_RVV_FMA_VV	decode.h	330;"	d
DEBUG_RVV_FP_VF	decode.h	321;"	d
DEBUG_RVV_FP_VF	decode.h	329;"	d
DEBUG_RVV_FP_VV	decode.h	319;"	d
DEBUG_RVV_FP_VV	decode.h	328;"	d
DEBUG_START	decode.h	1735;"	d
DECLARE_CSR	interactive.cc	195;"	d	file:
DECLARE_CSR	interactive.cc	198;"	d	file:
DECLARE_CSR	regnames.cc	28;"	d	file:
DECLARE_CSR	regnames.cc	30;"	d	file:
DECLARE_INSN	processor.cc	1113;"	d	file:
DECLARE_INSN	processor.cc	1116;"	d	file:
DECLARE_MEM_TRAP	trap.h	41;"	d
DECLARE_TRAP	trap.h	35;"	d
DEFAULT_RSTVEC	encoding.h	153;"	d
DEFINE_INSN	processor.cc	1118;"	d	file:
DEFINE_INSN	processor.cc	1121;"	d	file:
DIRTY	cachesim.h	/^  static const uint64_t DIRTY = 1ULL << 62;$/;"	m	class:cache_sim_t
DMI_ABSTRACTAUTO	debug_defines.h	1267;"	d
DMI_ABSTRACTAUTO_AUTOEXECDATA	debug_defines.h	1283;"	d
DMI_ABSTRACTAUTO_AUTOEXECDATA_LENGTH	debug_defines.h	1282;"	d
DMI_ABSTRACTAUTO_AUTOEXECDATA_OFFSET	debug_defines.h	1281;"	d
DMI_ABSTRACTAUTO_AUTOEXECPROGBUF	debug_defines.h	1275;"	d
DMI_ABSTRACTAUTO_AUTOEXECPROGBUF_LENGTH	debug_defines.h	1274;"	d
DMI_ABSTRACTAUTO_AUTOEXECPROGBUF_OFFSET	debug_defines.h	1273;"	d
DMI_ABSTRACTCS	debug_defines.h	1198;"	d
DMI_ABSTRACTCS_BUSY	debug_defines.h	1213;"	d
DMI_ABSTRACTCS_BUSY_LENGTH	debug_defines.h	1212;"	d
DMI_ABSTRACTCS_BUSY_OFFSET	debug_defines.h	1211;"	d
DMI_ABSTRACTCS_CMDERR	debug_defines.h	1244;"	d
DMI_ABSTRACTCS_CMDERR_LENGTH	debug_defines.h	1243;"	d
DMI_ABSTRACTCS_CMDERR_OFFSET	debug_defines.h	1242;"	d
DMI_ABSTRACTCS_DATACOUNT	debug_defines.h	1251;"	d
DMI_ABSTRACTCS_DATACOUNT_LENGTH	debug_defines.h	1250;"	d
DMI_ABSTRACTCS_DATACOUNT_OFFSET	debug_defines.h	1249;"	d
DMI_ABSTRACTCS_PROGBUFSIZE	debug_defines.h	1204;"	d
DMI_ABSTRACTCS_PROGBUFSIZE_LENGTH	debug_defines.h	1203;"	d
DMI_ABSTRACTCS_PROGBUFSIZE_OFFSET	debug_defines.h	1202;"	d
DMI_ADDRESS	jtag_dtm.cc	29;"	d	file:
DMI_AUTHDATA	debug_defines.h	1305;"	d
DMI_AUTHDATA_DATA	debug_defines.h	1308;"	d
DMI_AUTHDATA_DATA_LENGTH	debug_defines.h	1307;"	d
DMI_AUTHDATA_DATA_OFFSET	debug_defines.h	1306;"	d
DMI_COMMAND	debug_defines.h	1252;"	d
DMI_COMMAND_CMDTYPE	debug_defines.h	1259;"	d
DMI_COMMAND_CMDTYPE_LENGTH	debug_defines.h	1258;"	d
DMI_COMMAND_CMDTYPE_OFFSET	debug_defines.h	1257;"	d
DMI_COMMAND_CONTROL	debug_defines.h	1266;"	d
DMI_COMMAND_CONTROL_LENGTH	debug_defines.h	1265;"	d
DMI_COMMAND_CONTROL_OFFSET	debug_defines.h	1264;"	d
DMI_CONFSTRPTR0	debug_defines.h	1284;"	d
DMI_CONFSTRPTR0_ADDR	debug_defines.h	1287;"	d
DMI_CONFSTRPTR0_ADDR_LENGTH	debug_defines.h	1286;"	d
DMI_CONFSTRPTR0_ADDR_OFFSET	debug_defines.h	1285;"	d
DMI_CONFSTRPTR1	debug_defines.h	1288;"	d
DMI_CONFSTRPTR2	debug_defines.h	1289;"	d
DMI_CONFSTRPTR3	debug_defines.h	1290;"	d
DMI_CUSTOM	debug_defines.h	1574;"	d
DMI_CUSTOM0	debug_defines.h	1575;"	d
DMI_CUSTOM15	debug_defines.h	1576;"	d
DMI_DATA	jtag_dtm.cc	28;"	d	file:
DMI_DATA0	debug_defines.h	1295;"	d
DMI_DATA0_DATA	debug_defines.h	1298;"	d
DMI_DATA0_DATA_LENGTH	debug_defines.h	1297;"	d
DMI_DATA0_DATA_OFFSET	debug_defines.h	1296;"	d
DMI_DATA11	debug_defines.h	1299;"	d
DMI_DMCONTROL	debug_defines.h	992;"	d
DMI_DMCONTROL_ACKHAVERESET	debug_defines.h	1044;"	d
DMI_DMCONTROL_ACKHAVERESET_LENGTH	debug_defines.h	1043;"	d
DMI_DMCONTROL_ACKHAVERESET_OFFSET	debug_defines.h	1042;"	d
DMI_DMCONTROL_CLRRESETHALTREQ	debug_defines.h	1099;"	d
DMI_DMCONTROL_CLRRESETHALTREQ_LENGTH	debug_defines.h	1098;"	d
DMI_DMCONTROL_CLRRESETHALTREQ_OFFSET	debug_defines.h	1097;"	d
DMI_DMCONTROL_DMACTIVE	debug_defines.h	1140;"	d
DMI_DMCONTROL_DMACTIVE_LENGTH	debug_defines.h	1139;"	d
DMI_DMCONTROL_DMACTIVE_OFFSET	debug_defines.h	1138;"	d
DMI_DMCONTROL_HALTREQ	debug_defines.h	1005;"	d
DMI_DMCONTROL_HALTREQ_LENGTH	debug_defines.h	1004;"	d
DMI_DMCONTROL_HALTREQ_OFFSET	debug_defines.h	1003;"	d
DMI_DMCONTROL_HARTRESET	debug_defines.h	1034;"	d
DMI_DMCONTROL_HARTRESET_LENGTH	debug_defines.h	1033;"	d
DMI_DMCONTROL_HARTRESET_OFFSET	debug_defines.h	1032;"	d
DMI_DMCONTROL_HARTSELHI	debug_defines.h	1075;"	d
DMI_DMCONTROL_HARTSELHI_LENGTH	debug_defines.h	1074;"	d
DMI_DMCONTROL_HARTSELHI_OFFSET	debug_defines.h	1073;"	d
DMI_DMCONTROL_HARTSELLO	debug_defines.h	1068;"	d
DMI_DMCONTROL_HARTSELLO_LENGTH	debug_defines.h	1067;"	d
DMI_DMCONTROL_HARTSELLO_OFFSET	debug_defines.h	1066;"	d
DMI_DMCONTROL_HASEL	debug_defines.h	1061;"	d
DMI_DMCONTROL_HASEL_LENGTH	debug_defines.h	1060;"	d
DMI_DMCONTROL_HASEL_OFFSET	debug_defines.h	1059;"	d
DMI_DMCONTROL_NDMRESET	debug_defines.h	1111;"	d
DMI_DMCONTROL_NDMRESET_LENGTH	debug_defines.h	1110;"	d
DMI_DMCONTROL_NDMRESET_OFFSET	debug_defines.h	1109;"	d
DMI_DMCONTROL_RESUMEREQ	debug_defines.h	1017;"	d
DMI_DMCONTROL_RESUMEREQ_LENGTH	debug_defines.h	1016;"	d
DMI_DMCONTROL_RESUMEREQ_OFFSET	debug_defines.h	1015;"	d
DMI_DMCONTROL_SETRESETHALTREQ	debug_defines.h	1090;"	d
DMI_DMCONTROL_SETRESETHALTREQ_LENGTH	debug_defines.h	1089;"	d
DMI_DMCONTROL_SETRESETHALTREQ_OFFSET	debug_defines.h	1088;"	d
DMI_DMCS2	debug_defines.h	1309;"	d
DMI_DMCS2_EXTTRIGGER	debug_defines.h	1318;"	d
DMI_DMCS2_EXTTRIGGER_LENGTH	debug_defines.h	1317;"	d
DMI_DMCS2_EXTTRIGGER_OFFSET	debug_defines.h	1316;"	d
DMI_DMCS2_HALTGROUP	debug_defines.h	1334;"	d
DMI_DMCS2_HALTGROUP_LENGTH	debug_defines.h	1333;"	d
DMI_DMCS2_HALTGROUP_OFFSET	debug_defines.h	1332;"	d
DMI_DMCS2_HGSELECT	debug_defines.h	1357;"	d
DMI_DMCS2_HGSELECT_LENGTH	debug_defines.h	1356;"	d
DMI_DMCS2_HGSELECT_OFFSET	debug_defines.h	1355;"	d
DMI_DMCS2_HGWRITE	debug_defines.h	1347;"	d
DMI_DMCS2_HGWRITE_LENGTH	debug_defines.h	1346;"	d
DMI_DMCS2_HGWRITE_OFFSET	debug_defines.h	1345;"	d
DMI_DMSTATUS	debug_defines.h	845;"	d
DMI_DMSTATUS_ALLHALTED	debug_defines.h	928;"	d
DMI_DMSTATUS_ALLHALTED_LENGTH	debug_defines.h	927;"	d
DMI_DMSTATUS_ALLHALTED_OFFSET	debug_defines.h	926;"	d
DMI_DMSTATUS_ALLHAVERESET	debug_defines.h	863;"	d
DMI_DMSTATUS_ALLHAVERESET_LENGTH	debug_defines.h	862;"	d
DMI_DMSTATUS_ALLHAVERESET_OFFSET	debug_defines.h	861;"	d
DMI_DMSTATUS_ALLNONEXISTENT	debug_defines.h	891;"	d
DMI_DMSTATUS_ALLNONEXISTENT_LENGTH	debug_defines.h	890;"	d
DMI_DMSTATUS_ALLNONEXISTENT_OFFSET	debug_defines.h	889;"	d
DMI_DMSTATUS_ALLRESUMEACK	debug_defines.h	877;"	d
DMI_DMSTATUS_ALLRESUMEACK_LENGTH	debug_defines.h	876;"	d
DMI_DMSTATUS_ALLRESUMEACK_OFFSET	debug_defines.h	875;"	d
DMI_DMSTATUS_ALLRUNNING	debug_defines.h	916;"	d
DMI_DMSTATUS_ALLRUNNING_LENGTH	debug_defines.h	915;"	d
DMI_DMSTATUS_ALLRUNNING_OFFSET	debug_defines.h	914;"	d
DMI_DMSTATUS_ALLUNAVAIL	debug_defines.h	904;"	d
DMI_DMSTATUS_ALLUNAVAIL_LENGTH	debug_defines.h	903;"	d
DMI_DMSTATUS_ALLUNAVAIL_OFFSET	debug_defines.h	902;"	d
DMI_DMSTATUS_ANYHALTED	debug_defines.h	934;"	d
DMI_DMSTATUS_ANYHALTED_LENGTH	debug_defines.h	933;"	d
DMI_DMSTATUS_ANYHALTED_OFFSET	debug_defines.h	932;"	d
DMI_DMSTATUS_ANYHAVERESET	debug_defines.h	870;"	d
DMI_DMSTATUS_ANYHAVERESET_LENGTH	debug_defines.h	869;"	d
DMI_DMSTATUS_ANYHAVERESET_OFFSET	debug_defines.h	868;"	d
DMI_DMSTATUS_ANYNONEXISTENT	debug_defines.h	898;"	d
DMI_DMSTATUS_ANYNONEXISTENT_LENGTH	debug_defines.h	897;"	d
DMI_DMSTATUS_ANYNONEXISTENT_OFFSET	debug_defines.h	896;"	d
DMI_DMSTATUS_ANYRESUMEACK	debug_defines.h	884;"	d
DMI_DMSTATUS_ANYRESUMEACK_LENGTH	debug_defines.h	883;"	d
DMI_DMSTATUS_ANYRESUMEACK_OFFSET	debug_defines.h	882;"	d
DMI_DMSTATUS_ANYRUNNING	debug_defines.h	922;"	d
DMI_DMSTATUS_ANYRUNNING_LENGTH	debug_defines.h	921;"	d
DMI_DMSTATUS_ANYRUNNING_OFFSET	debug_defines.h	920;"	d
DMI_DMSTATUS_ANYUNAVAIL	debug_defines.h	910;"	d
DMI_DMSTATUS_ANYUNAVAIL_LENGTH	debug_defines.h	909;"	d
DMI_DMSTATUS_ANYUNAVAIL_OFFSET	debug_defines.h	908;"	d
DMI_DMSTATUS_AUTHBUSY	debug_defines.h	958;"	d
DMI_DMSTATUS_AUTHBUSY_LENGTH	debug_defines.h	957;"	d
DMI_DMSTATUS_AUTHBUSY_OFFSET	debug_defines.h	956;"	d
DMI_DMSTATUS_AUTHENTICATED	debug_defines.h	945;"	d
DMI_DMSTATUS_AUTHENTICATED_LENGTH	debug_defines.h	944;"	d
DMI_DMSTATUS_AUTHENTICATED_OFFSET	debug_defines.h	943;"	d
DMI_DMSTATUS_CONFSTRPTRVALID	debug_defines.h	976;"	d
DMI_DMSTATUS_CONFSTRPTRVALID_LENGTH	debug_defines.h	975;"	d
DMI_DMSTATUS_CONFSTRPTRVALID_OFFSET	debug_defines.h	974;"	d
DMI_DMSTATUS_HASRESETHALTREQ	debug_defines.h	966;"	d
DMI_DMSTATUS_HASRESETHALTREQ_LENGTH	debug_defines.h	965;"	d
DMI_DMSTATUS_HASRESETHALTREQ_OFFSET	debug_defines.h	964;"	d
DMI_DMSTATUS_IMPEBREAK	debug_defines.h	856;"	d
DMI_DMSTATUS_IMPEBREAK_LENGTH	debug_defines.h	855;"	d
DMI_DMSTATUS_IMPEBREAK_OFFSET	debug_defines.h	854;"	d
DMI_DMSTATUS_VERSION	debug_defines.h	991;"	d
DMI_DMSTATUS_VERSION_LENGTH	debug_defines.h	990;"	d
DMI_DMSTATUS_VERSION_OFFSET	debug_defines.h	989;"	d
DMI_HALTSUM0	debug_defines.h	1358;"	d
DMI_HALTSUM0_HALTSUM0	debug_defines.h	1361;"	d
DMI_HALTSUM0_HALTSUM0_LENGTH	debug_defines.h	1360;"	d
DMI_HALTSUM0_HALTSUM0_OFFSET	debug_defines.h	1359;"	d
DMI_HALTSUM1	debug_defines.h	1362;"	d
DMI_HALTSUM1_HALTSUM1	debug_defines.h	1365;"	d
DMI_HALTSUM1_HALTSUM1_LENGTH	debug_defines.h	1364;"	d
DMI_HALTSUM1_HALTSUM1_OFFSET	debug_defines.h	1363;"	d
DMI_HALTSUM2	debug_defines.h	1366;"	d
DMI_HALTSUM2_HALTSUM2	debug_defines.h	1369;"	d
DMI_HALTSUM2_HALTSUM2_LENGTH	debug_defines.h	1368;"	d
DMI_HALTSUM2_HALTSUM2_OFFSET	debug_defines.h	1367;"	d
DMI_HALTSUM3	debug_defines.h	1370;"	d
DMI_HALTSUM3_HALTSUM3	debug_defines.h	1373;"	d
DMI_HALTSUM3_HALTSUM3_LENGTH	debug_defines.h	1372;"	d
DMI_HALTSUM3_HALTSUM3_OFFSET	debug_defines.h	1371;"	d
DMI_HARTINFO	debug_defines.h	1141;"	d
DMI_HARTINFO_DATAACCESS	debug_defines.h	1161;"	d
DMI_HARTINFO_DATAACCESS_LENGTH	debug_defines.h	1160;"	d
DMI_HARTINFO_DATAACCESS_OFFSET	debug_defines.h	1159;"	d
DMI_HARTINFO_DATAADDR	debug_defines.h	1184;"	d
DMI_HARTINFO_DATAADDR_LENGTH	debug_defines.h	1183;"	d
DMI_HARTINFO_DATAADDR_OFFSET	debug_defines.h	1182;"	d
DMI_HARTINFO_DATASIZE	debug_defines.h	1174;"	d
DMI_HARTINFO_DATASIZE_LENGTH	debug_defines.h	1173;"	d
DMI_HARTINFO_DATASIZE_OFFSET	debug_defines.h	1172;"	d
DMI_HARTINFO_NSCRATCH	debug_defines.h	1150;"	d
DMI_HARTINFO_NSCRATCH_LENGTH	debug_defines.h	1149;"	d
DMI_HARTINFO_NSCRATCH_OFFSET	debug_defines.h	1148;"	d
DMI_HAWINDOW	debug_defines.h	1194;"	d
DMI_HAWINDOWSEL	debug_defines.h	1185;"	d
DMI_HAWINDOWSEL_HAWINDOWSEL	debug_defines.h	1193;"	d
DMI_HAWINDOWSEL_HAWINDOWSEL_LENGTH	debug_defines.h	1192;"	d
DMI_HAWINDOWSEL_HAWINDOWSEL_OFFSET	debug_defines.h	1191;"	d
DMI_HAWINDOW_MASKDATA	debug_defines.h	1197;"	d
DMI_HAWINDOW_MASKDATA_LENGTH	debug_defines.h	1196;"	d
DMI_HAWINDOW_MASKDATA_OFFSET	debug_defines.h	1195;"	d
DMI_NEXTDM	debug_defines.h	1291;"	d
DMI_NEXTDM_ADDR	debug_defines.h	1294;"	d
DMI_NEXTDM_ADDR_LENGTH	debug_defines.h	1293;"	d
DMI_NEXTDM_ADDR_OFFSET	debug_defines.h	1292;"	d
DMI_OP	jtag_dtm.cc	27;"	d	file:
DMI_OP_NOP	jtag_dtm.cc	36;"	d	file:
DMI_OP_READ	jtag_dtm.cc	37;"	d	file:
DMI_OP_RESERVED	jtag_dtm.cc	39;"	d	file:
DMI_OP_STATUS_BUSY	jtag_dtm.cc	34;"	d	file:
DMI_OP_STATUS_FAILED	jtag_dtm.cc	33;"	d	file:
DMI_OP_STATUS_RESERVED	jtag_dtm.cc	32;"	d	file:
DMI_OP_STATUS_SUCCESS	jtag_dtm.cc	31;"	d	file:
DMI_OP_WRITE	jtag_dtm.cc	38;"	d	file:
DMI_PROGBUF0	debug_defines.h	1300;"	d
DMI_PROGBUF0_DATA	debug_defines.h	1303;"	d
DMI_PROGBUF0_DATA_LENGTH	debug_defines.h	1302;"	d
DMI_PROGBUF0_DATA_OFFSET	debug_defines.h	1301;"	d
DMI_PROGBUF15	debug_defines.h	1304;"	d
DMI_SBADDRESS0	debug_defines.h	1512;"	d
DMI_SBADDRESS0_ADDRESS	debug_defines.h	1518;"	d
DMI_SBADDRESS0_ADDRESS_LENGTH	debug_defines.h	1517;"	d
DMI_SBADDRESS0_ADDRESS_OFFSET	debug_defines.h	1516;"	d
DMI_SBADDRESS1	debug_defines.h	1519;"	d
DMI_SBADDRESS1_ADDRESS	debug_defines.h	1526;"	d
DMI_SBADDRESS1_ADDRESS_LENGTH	debug_defines.h	1525;"	d
DMI_SBADDRESS1_ADDRESS_OFFSET	debug_defines.h	1524;"	d
DMI_SBADDRESS2	debug_defines.h	1527;"	d
DMI_SBADDRESS2_ADDRESS	debug_defines.h	1534;"	d
DMI_SBADDRESS2_ADDRESS_LENGTH	debug_defines.h	1533;"	d
DMI_SBADDRESS2_ADDRESS_OFFSET	debug_defines.h	1532;"	d
DMI_SBADDRESS3	debug_defines.h	1535;"	d
DMI_SBADDRESS3_ADDRESS	debug_defines.h	1542;"	d
DMI_SBADDRESS3_ADDRESS_LENGTH	debug_defines.h	1541;"	d
DMI_SBADDRESS3_ADDRESS_OFFSET	debug_defines.h	1540;"	d
DMI_SBCS	debug_defines.h	1374;"	d
DMI_SBCS_SBACCESS	debug_defines.h	1436;"	d
DMI_SBCS_SBACCESS128	debug_defines.h	1487;"	d
DMI_SBCS_SBACCESS128_LENGTH	debug_defines.h	1486;"	d
DMI_SBCS_SBACCESS128_OFFSET	debug_defines.h	1485;"	d
DMI_SBCS_SBACCESS16	debug_defines.h	1505;"	d
DMI_SBCS_SBACCESS16_LENGTH	debug_defines.h	1504;"	d
DMI_SBCS_SBACCESS16_OFFSET	debug_defines.h	1503;"	d
DMI_SBCS_SBACCESS32	debug_defines.h	1499;"	d
DMI_SBCS_SBACCESS32_LENGTH	debug_defines.h	1498;"	d
DMI_SBCS_SBACCESS32_OFFSET	debug_defines.h	1497;"	d
DMI_SBCS_SBACCESS64	debug_defines.h	1493;"	d
DMI_SBCS_SBACCESS64_LENGTH	debug_defines.h	1492;"	d
DMI_SBCS_SBACCESS64_OFFSET	debug_defines.h	1491;"	d
DMI_SBCS_SBACCESS8	debug_defines.h	1511;"	d
DMI_SBCS_SBACCESS8_LENGTH	debug_defines.h	1510;"	d
DMI_SBCS_SBACCESS8_OFFSET	debug_defines.h	1509;"	d
DMI_SBCS_SBACCESS_LENGTH	debug_defines.h	1435;"	d
DMI_SBCS_SBACCESS_OFFSET	debug_defines.h	1434;"	d
DMI_SBCS_SBASIZE	debug_defines.h	1481;"	d
DMI_SBCS_SBASIZE_LENGTH	debug_defines.h	1480;"	d
DMI_SBCS_SBASIZE_OFFSET	debug_defines.h	1479;"	d
DMI_SBCS_SBAUTOINCREMENT	debug_defines.h	1443;"	d
DMI_SBCS_SBAUTOINCREMENT_LENGTH	debug_defines.h	1442;"	d
DMI_SBCS_SBAUTOINCREMENT_OFFSET	debug_defines.h	1441;"	d
DMI_SBCS_SBBUSY	debug_defines.h	1410;"	d
DMI_SBCS_SBBUSYERROR	debug_defines.h	1397;"	d
DMI_SBCS_SBBUSYERROR_LENGTH	debug_defines.h	1396;"	d
DMI_SBCS_SBBUSYERROR_OFFSET	debug_defines.h	1395;"	d
DMI_SBCS_SBBUSY_LENGTH	debug_defines.h	1409;"	d
DMI_SBCS_SBBUSY_OFFSET	debug_defines.h	1408;"	d
DMI_SBCS_SBERROR	debug_defines.h	1474;"	d
DMI_SBCS_SBERROR_LENGTH	debug_defines.h	1473;"	d
DMI_SBCS_SBERROR_OFFSET	debug_defines.h	1472;"	d
DMI_SBCS_SBREADONADDR	debug_defines.h	1417;"	d
DMI_SBCS_SBREADONADDR_LENGTH	debug_defines.h	1416;"	d
DMI_SBCS_SBREADONADDR_OFFSET	debug_defines.h	1415;"	d
DMI_SBCS_SBREADONDATA	debug_defines.h	1450;"	d
DMI_SBCS_SBREADONDATA_LENGTH	debug_defines.h	1449;"	d
DMI_SBCS_SBREADONDATA_OFFSET	debug_defines.h	1448;"	d
DMI_SBCS_SBVERSION	debug_defines.h	1385;"	d
DMI_SBCS_SBVERSION_LENGTH	debug_defines.h	1384;"	d
DMI_SBCS_SBVERSION_OFFSET	debug_defines.h	1383;"	d
DMI_SBDATA0	debug_defines.h	1543;"	d
DMI_SBDATA0_DATA	debug_defines.h	1549;"	d
DMI_SBDATA0_DATA_LENGTH	debug_defines.h	1548;"	d
DMI_SBDATA0_DATA_OFFSET	debug_defines.h	1547;"	d
DMI_SBDATA1	debug_defines.h	1550;"	d
DMI_SBDATA1_DATA	debug_defines.h	1557;"	d
DMI_SBDATA1_DATA_LENGTH	debug_defines.h	1556;"	d
DMI_SBDATA1_DATA_OFFSET	debug_defines.h	1555;"	d
DMI_SBDATA2	debug_defines.h	1558;"	d
DMI_SBDATA2_DATA	debug_defines.h	1565;"	d
DMI_SBDATA2_DATA_LENGTH	debug_defines.h	1564;"	d
DMI_SBDATA2_DATA_OFFSET	debug_defines.h	1563;"	d
DMI_SBDATA3	debug_defines.h	1566;"	d
DMI_SBDATA3_DATA	debug_defines.h	1573;"	d
DMI_SBDATA3_DATA_LENGTH	debug_defines.h	1572;"	d
DMI_SBDATA3_DATA_OFFSET	debug_defines.h	1571;"	d
DMI_SERCS	debug_defines.h	1736;"	d
DMI_SERCS_ERROR0	debug_defines.h	1819;"	d
DMI_SERCS_ERROR0_LENGTH	debug_defines.h	1818;"	d
DMI_SERCS_ERROR0_OFFSET	debug_defines.h	1817;"	d
DMI_SERCS_ERROR1	debug_defines.h	1805;"	d
DMI_SERCS_ERROR1_LENGTH	debug_defines.h	1804;"	d
DMI_SERCS_ERROR1_OFFSET	debug_defines.h	1803;"	d
DMI_SERCS_ERROR2	debug_defines.h	1796;"	d
DMI_SERCS_ERROR2_LENGTH	debug_defines.h	1795;"	d
DMI_SERCS_ERROR2_OFFSET	debug_defines.h	1794;"	d
DMI_SERCS_ERROR3	debug_defines.h	1787;"	d
DMI_SERCS_ERROR3_LENGTH	debug_defines.h	1786;"	d
DMI_SERCS_ERROR3_OFFSET	debug_defines.h	1785;"	d
DMI_SERCS_ERROR4	debug_defines.h	1778;"	d
DMI_SERCS_ERROR4_LENGTH	debug_defines.h	1777;"	d
DMI_SERCS_ERROR4_OFFSET	debug_defines.h	1776;"	d
DMI_SERCS_ERROR5	debug_defines.h	1769;"	d
DMI_SERCS_ERROR5_LENGTH	debug_defines.h	1768;"	d
DMI_SERCS_ERROR5_OFFSET	debug_defines.h	1767;"	d
DMI_SERCS_ERROR6	debug_defines.h	1760;"	d
DMI_SERCS_ERROR6_LENGTH	debug_defines.h	1759;"	d
DMI_SERCS_ERROR6_OFFSET	debug_defines.h	1758;"	d
DMI_SERCS_ERROR7	debug_defines.h	1751;"	d
DMI_SERCS_ERROR7_LENGTH	debug_defines.h	1750;"	d
DMI_SERCS_ERROR7_OFFSET	debug_defines.h	1749;"	d
DMI_SERCS_FULL0	debug_defines.h	1831;"	d
DMI_SERCS_FULL0_LENGTH	debug_defines.h	1830;"	d
DMI_SERCS_FULL0_OFFSET	debug_defines.h	1829;"	d
DMI_SERCS_FULL1	debug_defines.h	1811;"	d
DMI_SERCS_FULL1_LENGTH	debug_defines.h	1810;"	d
DMI_SERCS_FULL1_OFFSET	debug_defines.h	1809;"	d
DMI_SERCS_FULL2	debug_defines.h	1802;"	d
DMI_SERCS_FULL2_LENGTH	debug_defines.h	1801;"	d
DMI_SERCS_FULL2_OFFSET	debug_defines.h	1800;"	d
DMI_SERCS_FULL3	debug_defines.h	1793;"	d
DMI_SERCS_FULL3_LENGTH	debug_defines.h	1792;"	d
DMI_SERCS_FULL3_OFFSET	debug_defines.h	1791;"	d
DMI_SERCS_FULL4	debug_defines.h	1784;"	d
DMI_SERCS_FULL4_LENGTH	debug_defines.h	1783;"	d
DMI_SERCS_FULL4_OFFSET	debug_defines.h	1782;"	d
DMI_SERCS_FULL5	debug_defines.h	1775;"	d
DMI_SERCS_FULL5_LENGTH	debug_defines.h	1774;"	d
DMI_SERCS_FULL5_OFFSET	debug_defines.h	1773;"	d
DMI_SERCS_FULL6	debug_defines.h	1766;"	d
DMI_SERCS_FULL6_LENGTH	debug_defines.h	1765;"	d
DMI_SERCS_FULL6_OFFSET	debug_defines.h	1764;"	d
DMI_SERCS_FULL7	debug_defines.h	1757;"	d
DMI_SERCS_FULL7_LENGTH	debug_defines.h	1756;"	d
DMI_SERCS_FULL7_OFFSET	debug_defines.h	1755;"	d
DMI_SERCS_SERIAL	debug_defines.h	1748;"	d
DMI_SERCS_SERIALCOUNT	debug_defines.h	1742;"	d
DMI_SERCS_SERIALCOUNT_LENGTH	debug_defines.h	1741;"	d
DMI_SERCS_SERIALCOUNT_OFFSET	debug_defines.h	1740;"	d
DMI_SERCS_SERIAL_LENGTH	debug_defines.h	1747;"	d
DMI_SERCS_SERIAL_OFFSET	debug_defines.h	1746;"	d
DMI_SERCS_VALID0	debug_defines.h	1825;"	d
DMI_SERCS_VALID0_LENGTH	debug_defines.h	1824;"	d
DMI_SERCS_VALID0_OFFSET	debug_defines.h	1823;"	d
DMI_SERCS_VALID1	debug_defines.h	1808;"	d
DMI_SERCS_VALID1_LENGTH	debug_defines.h	1807;"	d
DMI_SERCS_VALID1_OFFSET	debug_defines.h	1806;"	d
DMI_SERCS_VALID2	debug_defines.h	1799;"	d
DMI_SERCS_VALID2_LENGTH	debug_defines.h	1798;"	d
DMI_SERCS_VALID2_OFFSET	debug_defines.h	1797;"	d
DMI_SERCS_VALID3	debug_defines.h	1790;"	d
DMI_SERCS_VALID3_LENGTH	debug_defines.h	1789;"	d
DMI_SERCS_VALID3_OFFSET	debug_defines.h	1788;"	d
DMI_SERCS_VALID4	debug_defines.h	1781;"	d
DMI_SERCS_VALID4_LENGTH	debug_defines.h	1780;"	d
DMI_SERCS_VALID4_OFFSET	debug_defines.h	1779;"	d
DMI_SERCS_VALID5	debug_defines.h	1772;"	d
DMI_SERCS_VALID5_LENGTH	debug_defines.h	1771;"	d
DMI_SERCS_VALID5_OFFSET	debug_defines.h	1770;"	d
DMI_SERCS_VALID6	debug_defines.h	1763;"	d
DMI_SERCS_VALID6_LENGTH	debug_defines.h	1762;"	d
DMI_SERCS_VALID6_OFFSET	debug_defines.h	1761;"	d
DMI_SERCS_VALID7	debug_defines.h	1754;"	d
DMI_SERCS_VALID7_LENGTH	debug_defines.h	1753;"	d
DMI_SERCS_VALID7_OFFSET	debug_defines.h	1752;"	d
DMI_SERRX	debug_defines.h	1836;"	d
DMI_SERRX_DATA	debug_defines.h	1839;"	d
DMI_SERRX_DATA_LENGTH	debug_defines.h	1838;"	d
DMI_SERRX_DATA_OFFSET	debug_defines.h	1837;"	d
DMI_SERTX	debug_defines.h	1832;"	d
DMI_SERTX_DATA	debug_defines.h	1835;"	d
DMI_SERTX_DATA_LENGTH	debug_defines.h	1834;"	d
DMI_SERTX_DATA_OFFSET	debug_defines.h	1833;"	d
DO_WRITE_FREG	decode.h	187;"	d
DRAM_BASE	encoding.h	157;"	d
DTMCONTROL_ABITS	jtag_dtm.cc	22;"	d	file:
DTMCONTROL_DBUSRESET	jtag_dtm.cc	25;"	d	file:
DTMCONTROL_DBUSSTAT	jtag_dtm.cc	23;"	d	file:
DTMCONTROL_IDLE	jtag_dtm.cc	24;"	d	file:
DTMCONTROL_VERSION	jtag_dtm.cc	21;"	d	file:
DTM_DMI	debug_defines.h	94;"	d
DTM_DMI_ADDRESS	debug_defines.h	101;"	d
DTM_DMI_ADDRESS_LENGTH	debug_defines.h	100;"	d
DTM_DMI_ADDRESS_OFFSET	debug_defines.h	99;"	d
DTM_DMI_DATA	debug_defines.h	108;"	d
DTM_DMI_DATA_LENGTH	debug_defines.h	107;"	d
DTM_DMI_DATA_OFFSET	debug_defines.h	106;"	d
DTM_DMI_OP	debug_defines.h	150;"	d
DTM_DMI_OP_LENGTH	debug_defines.h	149;"	d
DTM_DMI_OP_OFFSET	debug_defines.h	148;"	d
DTM_DTMCS	debug_defines.h	27;"	d
DTM_DTMCS_ABITS	debug_defines.h	83;"	d
DTM_DTMCS_ABITS_LENGTH	debug_defines.h	82;"	d
DTM_DTMCS_ABITS_OFFSET	debug_defines.h	81;"	d
DTM_DTMCS_DMIHARDRESET	debug_defines.h	38;"	d
DTM_DTMCS_DMIHARDRESET_LENGTH	debug_defines.h	37;"	d
DTM_DTMCS_DMIHARDRESET_OFFSET	debug_defines.h	36;"	d
DTM_DTMCS_DMIRESET	debug_defines.h	46;"	d
DTM_DTMCS_DMIRESET_LENGTH	debug_defines.h	45;"	d
DTM_DTMCS_DMIRESET_OFFSET	debug_defines.h	44;"	d
DTM_DTMCS_DMISTAT	debug_defines.h	77;"	d
DTM_DTMCS_DMISTAT_LENGTH	debug_defines.h	76;"	d
DTM_DTMCS_DMISTAT_OFFSET	debug_defines.h	75;"	d
DTM_DTMCS_IDLE	debug_defines.h	64;"	d
DTM_DTMCS_IDLE_LENGTH	debug_defines.h	63;"	d
DTM_DTMCS_IDLE_OFFSET	debug_defines.h	62;"	d
DTM_DTMCS_VERSION	debug_defines.h	93;"	d
DTM_DTMCS_VERSION_LENGTH	debug_defines.h	92;"	d
DTM_DTMCS_VERSION_OFFSET	debug_defines.h	91;"	d
DTM_IDCODE	debug_defines.h	1;"	d
DTM_IDCODE_1	debug_defines.h	26;"	d
DTM_IDCODE_1_LENGTH	debug_defines.h	25;"	d
DTM_IDCODE_1_OFFSET	debug_defines.h	24;"	d
DTM_IDCODE_MANUFID	debug_defines.h	23;"	d
DTM_IDCODE_MANUFID_LENGTH	debug_defines.h	22;"	d
DTM_IDCODE_MANUFID_OFFSET	debug_defines.h	21;"	d
DTM_IDCODE_PARTNUMBER	debug_defines.h	13;"	d
DTM_IDCODE_PARTNUMBER_LENGTH	debug_defines.h	12;"	d
DTM_IDCODE_PARTNUMBER_OFFSET	debug_defines.h	11;"	d
DTM_IDCODE_VERSION	debug_defines.h	7;"	d
DTM_IDCODE_VERSION_LENGTH	debug_defines.h	6;"	d
DTM_IDCODE_VERSION_OFFSET	debug_defines.h	5;"	d
ELEN	processor.h	/^    reg_t ELEN, VLEN, SLEN;$/;"	m	class:vectorUnit_t
EXIT1_DR	jtag_dtm.h	/^  EXIT1_DR,$/;"	e	enum:__anon13
EXIT1_IR	jtag_dtm.h	/^  EXIT1_IR,$/;"	e	enum:__anon13
EXIT2_DR	jtag_dtm.h	/^  EXIT2_DR,$/;"	e	enum:__anon13
EXIT2_IR	jtag_dtm.h	/^  EXIT2_IR,$/;"	e	enum:__anon13
EXT_IO_BASE	encoding.h	156;"	d
F32_SIGN	decode.h	265;"	d
F32_SIGN	insns/fmsub_s.h	/^WRITE_FRD(f32_mulAdd(f32(FRS1), f32(FRS2), f32(f32(FRS3).v ^ F32_SIGN)));$/;"	v
F32_SIGN	insns/fnmadd_s.h	/^WRITE_FRD(f32_mulAdd(f32(f32(FRS1).v ^ F32_SIGN), f32(FRS2), f32(f32(FRS3).v ^ F32_SIGN)));$/;"	v
F64_SIGN	decode.h	266;"	d
F64_SIGN	insns/fmsub_d.h	/^WRITE_FRD(f64_mulAdd(f64(FRS1), f64(FRS2), f64(f64(FRS3).v ^ F64_SIGN)));$/;"	v
F64_SIGN	insns/fnmadd_d.h	/^WRITE_FRD(f64_mulAdd(f64(f64(FRS1).v ^ F64_SIGN), f64(FRS2), f64(f64(FRS3).v ^ F64_SIGN)));$/;"	v
FCFS	memdelay.h	/^        FCFS,$/;"	m	class:memdelay_t::Scheduling_policy
FETCH	memtracer.h	/^  FETCH,$/;"	e	enum:access_type
FLEN	decode.h	144;"	d
FMT_BV	buffer_controller.h	/^typedef enum {FMT_CSR=0, FMT_BV=1, FMT_RL=2} format_t;$/;"	e	enum:__anon3
FMT_CSR	buffer_controller.h	/^typedef enum {FMT_CSR=0, FMT_BV=1, FMT_RL=2} format_t;$/;"	e	enum:__anon3
FMT_RL	buffer_controller.h	/^typedef enum {FMT_CSR=0, FMT_BV=1, FMT_RL=2} format_t;$/;"	e	enum:__anon3
FPEXC_DZ	decode.h	49;"	d
FPEXC_NV	decode.h	50;"	d
FPEXC_NX	decode.h	46;"	d
FPEXC_OF	decode.h	48;"	d
FPEXC_UF	decode.h	47;"	d
FPR	processor.h	/^  regfile_t<freg_t, NFPR, false> FPR;$/;"	m	struct:state_t
FP_RD_0	decode.h	38;"	d
FP_RD_DN	decode.h	39;"	d
FP_RD_NE	decode.h	37;"	d
FP_RD_NMM	decode.h	41;"	d
FP_RD_UP	decode.h	40;"	d
FRS1	decode.h	182;"	d
FRS2	decode.h	183;"	d
FRS2	insns/fmadd_d.h	/^WRITE_FRD(f64_mulAdd(f64(FRS1), f64(FRS2), f64(FRS3)));$/;"	v
FRS2	insns/fmadd_q.h	/^WRITE_FRD(f128_mulAdd(f128(FRS1), f128(FRS2), f128(FRS3)));$/;"	v
FRS2	insns/fmadd_s.h	/^WRITE_FRD(f32_mulAdd(f32(FRS1), f32(FRS2), f32(FRS3)));$/;"	v
FRS2	insns/fmsub_d.h	/^WRITE_FRD(f64_mulAdd(f64(FRS1), f64(FRS2), f64(f64(FRS3).v ^ F64_SIGN)));$/;"	v
FRS2	insns/fmsub_q.h	/^WRITE_FRD(f128_mulAdd(f128(FRS1), f128(FRS2), f128_negate(f128(FRS3))));$/;"	v
FRS2	insns/fmsub_s.h	/^WRITE_FRD(f32_mulAdd(f32(FRS1), f32(FRS2), f32(f32(FRS3).v ^ F32_SIGN)));$/;"	v
FRS2	insns/fnmadd_d.h	/^WRITE_FRD(f64_mulAdd(f64(f64(FRS1).v ^ F64_SIGN), f64(FRS2), f64(f64(FRS3).v ^ F64_SIGN)));$/;"	v
FRS2	insns/fnmadd_q.h	/^WRITE_FRD(f128_mulAdd(f128_negate(f128(FRS1)), f128(FRS2), f128_negate(f128(FRS3))));$/;"	v
FRS2	insns/fnmadd_s.h	/^WRITE_FRD(f32_mulAdd(f32(f32(FRS1).v ^ F32_SIGN), f32(FRS2), f32(f32(FRS3).v ^ F32_SIGN)));$/;"	v
FRS2	insns/fnmsub_d.h	/^WRITE_FRD(f64_mulAdd(f64(f64(FRS1).v ^ F64_SIGN), f64(FRS2), f64(FRS3)));$/;"	v
FRS2	insns/fnmsub_q.h	/^WRITE_FRD(f128_mulAdd(f128_negate(f128(FRS1)), f128(FRS2), f128(FRS3)));$/;"	v
FRS2	insns/fnmsub_s.h	/^WRITE_FRD(f32_mulAdd(f32(f32(FRS1).v ^ F32_SIGN), f32(FRS2), f32(FRS3)));$/;"	v
FRS3	decode.h	184;"	d
FSR_AEXC	decode.h	58;"	d
FSR_AEXC_SHIFT	decode.h	52;"	d
FSR_DZA	decode.h	56;"	d
FSR_NVA	decode.h	53;"	d
FSR_NXA	decode.h	57;"	d
FSR_OFA	decode.h	54;"	d
FSR_RD	decode.h	44;"	d
FSR_RD_SHIFT	decode.h	43;"	d
FSR_UFA	decode.h	55;"	d
Flash	flashmodel.h	/^	struct Flash{$/;"	s	class:flashmodel_t
Flash_Cache	flashmodel.h	/^	struct Flash_Cache{$/;"	s	class:flashmodel_t
HASH_SIZE	disasm.h	/^  static const int HASH_SIZE = 256;$/;"	m	class:disassembler_t
ICACHE_ACCESS	execute.cc	201;"	d	file:
ICACHE_ENTRIES	mmu.h	/^  static const reg_t ICACHE_ENTRIES = 1024;$/;"	m	class:mmu_t
INSNS_PER_RTC_TICK	sim.h	/^  static const size_t INSNS_PER_RTC_TICK = 100; \/\/ 10 MHz clock for 1 BIPS core$/;"	m	class:sim_t
INTERLEAVE	sim.h	/^  static const size_t INTERLEAVE = 5000;$/;"	m	class:sim_t
INT_ROUNDING	decode.h	521;"	d
INVALID_RM	processor.h	/^  INVALID_RM$/;"	e	enum:VRM
IRQ_COP	encoding.h	150;"	d
IRQ_HOST	encoding.h	151;"	d
IRQ_H_EXT	encoding.h	148;"	d
IRQ_H_SOFT	encoding.h	142;"	d
IRQ_H_TIMER	encoding.h	145;"	d
IRQ_M_EXT	encoding.h	149;"	d
IRQ_M_SOFT	encoding.h	143;"	d
IRQ_M_TIMER	encoding.h	146;"	d
IRQ_S_EXT	encoding.h	147;"	d
IRQ_S_SOFT	encoding.h	141;"	d
IRQ_S_TIMER	encoding.h	144;"	d
IR_DBUS	jtag_dtm.cc	/^  IR_DBUS=0x11,$/;"	e	enum:__anon12	file:
IR_DTMCONTROL	jtag_dtm.cc	/^  IR_DTMCONTROL=0x10,$/;"	e	enum:__anon12	file:
IR_IDCODE	jtag_dtm.cc	/^  IR_IDCODE=1,$/;"	e	enum:__anon12	file:
IR_RESET	jtag_dtm.cc	/^  IR_RESET=0x1c$/;"	e	enum:__anon12	file:
JTAG_DTM_H	jtag_dtm.h	2;"	d
JUMP_TARGET	decode.h	192;"	d
JUMP_TARGET	insns/jal.h	/^set_pc(JUMP_TARGET);$/;"	v
L2_hitdelay	mmu.h	/^  int L2_hitdelay = 5;$/;"	m	class:mmu_t
L2_req	processor.h	/^  int L2_req = 0;$/;"	m	class:processor_t
L2_wait	processor.h	/^  int L2_wait = 0;$/;"	m	class:processor_t
LOAD	memtracer.h	/^  LOAD,$/;"	e	enum:access_type
Line	flashmodel.h	/^		struct Line{$/;"	s	struct:flashmodel_t::Flash_Cache
LookUpTable_t	flashmodel.h	/^	struct LookUpTable_t{$/;"	s	class:flashmodel_t
MASK_ADD	encoding.h	266;"	d
MASK_ADDI	encoding.h	248;"	d
MASK_ADDIW	encoding.h	286;"	d
MASK_ADDW	encoding.h	294;"	d
MASK_AMOADD_D	encoding.h	378;"	d
MASK_AMOADD_W	encoding.h	356;"	d
MASK_AMOAND_D	encoding.h	384;"	d
MASK_AMOAND_W	encoding.h	362;"	d
MASK_AMOMAXU_D	encoding.h	392;"	d
MASK_AMOMAXU_W	encoding.h	370;"	d
MASK_AMOMAX_D	encoding.h	388;"	d
MASK_AMOMAX_W	encoding.h	366;"	d
MASK_AMOMINU_D	encoding.h	390;"	d
MASK_AMOMINU_W	encoding.h	368;"	d
MASK_AMOMIN_D	encoding.h	386;"	d
MASK_AMOMIN_W	encoding.h	364;"	d
MASK_AMOOR_D	encoding.h	382;"	d
MASK_AMOOR_W	encoding.h	360;"	d
MASK_AMOSWAP_D	encoding.h	394;"	d
MASK_AMOSWAP_W	encoding.h	372;"	d
MASK_AMOXOR_D	encoding.h	380;"	d
MASK_AMOXOR_W	encoding.h	358;"	d
MASK_AND	encoding.h	284;"	d
MASK_ANDI	encoding.h	264;"	d
MASK_AUIPC	encoding.h	246;"	d
MASK_BEQ	encoding.h	228;"	d
MASK_BGE	encoding.h	234;"	d
MASK_BGEU	encoding.h	238;"	d
MASK_BLT	encoding.h	232;"	d
MASK_BLTU	encoding.h	236;"	d
MASK_BNE	encoding.h	230;"	d
MASK_CSRRC	encoding.h	420;"	d
MASK_CSRRCI	encoding.h	426;"	d
MASK_CSRRS	encoding.h	418;"	d
MASK_CSRRSI	encoding.h	424;"	d
MASK_CSRRW	encoding.h	416;"	d
MASK_CSRRWI	encoding.h	422;"	d
MASK_CUSTOM0	encoding.h	722;"	d
MASK_CUSTOM0_RD	encoding.h	728;"	d
MASK_CUSTOM0_RD_RS1	encoding.h	730;"	d
MASK_CUSTOM0_RD_RS1_RS2	encoding.h	732;"	d
MASK_CUSTOM0_RS1	encoding.h	724;"	d
MASK_CUSTOM0_RS1_RS2	encoding.h	726;"	d
MASK_CUSTOM1	encoding.h	734;"	d
MASK_CUSTOM1_RD	encoding.h	740;"	d
MASK_CUSTOM1_RD_RS1	encoding.h	742;"	d
MASK_CUSTOM1_RD_RS1_RS2	encoding.h	744;"	d
MASK_CUSTOM1_RS1	encoding.h	736;"	d
MASK_CUSTOM1_RS1_RS2	encoding.h	738;"	d
MASK_CUSTOM2	encoding.h	746;"	d
MASK_CUSTOM2_RD	encoding.h	752;"	d
MASK_CUSTOM2_RD_RS1	encoding.h	754;"	d
MASK_CUSTOM2_RD_RS1_RS2	encoding.h	756;"	d
MASK_CUSTOM2_RS1	encoding.h	748;"	d
MASK_CUSTOM2_RS1_RS2	encoding.h	750;"	d
MASK_CUSTOM3	encoding.h	758;"	d
MASK_CUSTOM3_RD	encoding.h	764;"	d
MASK_CUSTOM3_RD_RS1	encoding.h	766;"	d
MASK_CUSTOM3_RD_RS1_RS2	encoding.h	768;"	d
MASK_CUSTOM3_RS1	encoding.h	760;"	d
MASK_CUSTOM3_RS1_RS2	encoding.h	762;"	d
MASK_C_ADD	encoding.h	714;"	d
MASK_C_ADDI	encoding.h	672;"	d
MASK_C_ADDI16SP	encoding.h	626;"	d
MASK_C_ADDI4SPN	encoding.h	658;"	d
MASK_C_ADDIW	encoding.h	644;"	d
MASK_C_ADDW	encoding.h	696;"	d
MASK_C_AND	encoding.h	692;"	d
MASK_C_ANDI	encoding.h	684;"	d
MASK_C_BEQZ	encoding.h	700;"	d
MASK_C_BNEZ	encoding.h	702;"	d
MASK_C_EBREAK	encoding.h	632;"	d
MASK_C_FLD	encoding.h	660;"	d
MASK_C_FLDSP	encoding.h	706;"	d
MASK_C_FLW	encoding.h	664;"	d
MASK_C_FLWSP	encoding.h	710;"	d
MASK_C_FSD	encoding.h	666;"	d
MASK_C_FSDSP	encoding.h	716;"	d
MASK_C_FSW	encoding.h	670;"	d
MASK_C_FSWSP	encoding.h	720;"	d
MASK_C_J	encoding.h	698;"	d
MASK_C_JAL	encoding.h	674;"	d
MASK_C_JALR	encoding.h	630;"	d
MASK_C_JR	encoding.h	628;"	d
MASK_C_LD	encoding.h	640;"	d
MASK_C_LDSP	encoding.h	646;"	d
MASK_C_LI	encoding.h	676;"	d
MASK_C_LQ	encoding.h	650;"	d
MASK_C_LQSP	encoding.h	654;"	d
MASK_C_LUI	encoding.h	678;"	d
MASK_C_LW	encoding.h	662;"	d
MASK_C_LWSP	encoding.h	708;"	d
MASK_C_MV	encoding.h	712;"	d
MASK_C_NOP	encoding.h	624;"	d
MASK_C_OR	encoding.h	690;"	d
MASK_C_SD	encoding.h	642;"	d
MASK_C_SDSP	encoding.h	648;"	d
MASK_C_SLLI	encoding.h	704;"	d
MASK_C_SLLI_RV32	encoding.h	638;"	d
MASK_C_SQ	encoding.h	652;"	d
MASK_C_SQSP	encoding.h	656;"	d
MASK_C_SRAI	encoding.h	682;"	d
MASK_C_SRAI_RV32	encoding.h	636;"	d
MASK_C_SRLI	encoding.h	680;"	d
MASK_C_SRLI_RV32	encoding.h	634;"	d
MASK_C_SUB	encoding.h	686;"	d
MASK_C_SUBW	encoding.h	694;"	d
MASK_C_SW	encoding.h	668;"	d
MASK_C_SWSP	encoding.h	718;"	d
MASK_C_XOR	encoding.h	688;"	d
MASK_DIV	encoding.h	338;"	d
MASK_DIVU	encoding.h	340;"	d
MASK_DIVUW	encoding.h	350;"	d
MASK_DIVW	encoding.h	348;"	d
MASK_DRET	encoding.h	410;"	d
MASK_EBREAK	encoding.h	402;"	d
MASK_ECALL	encoding.h	400;"	d
MASK_FADD_D	encoding.h	452;"	d
MASK_FADD_Q	encoding.h	476;"	d
MASK_FADD_S	encoding.h	432;"	d
MASK_FCLASS_D	encoding.h	544;"	d
MASK_FCLASS_Q	encoding.h	556;"	d
MASK_FCLASS_S	encoding.h	532;"	d
MASK_FCVT_D_L	encoding.h	572;"	d
MASK_FCVT_D_LU	encoding.h	574;"	d
MASK_FCVT_D_Q	encoding.h	498;"	d
MASK_FCVT_D_S	encoding.h	472;"	d
MASK_FCVT_D_W	encoding.h	568;"	d
MASK_FCVT_D_WU	encoding.h	570;"	d
MASK_FCVT_LU_D	encoding.h	540;"	d
MASK_FCVT_LU_Q	encoding.h	552;"	d
MASK_FCVT_LU_S	encoding.h	528;"	d
MASK_FCVT_L_D	encoding.h	538;"	d
MASK_FCVT_L_Q	encoding.h	550;"	d
MASK_FCVT_L_S	encoding.h	526;"	d
MASK_FCVT_Q_D	encoding.h	500;"	d
MASK_FCVT_Q_L	encoding.h	582;"	d
MASK_FCVT_Q_LU	encoding.h	584;"	d
MASK_FCVT_Q_S	encoding.h	496;"	d
MASK_FCVT_Q_W	encoding.h	578;"	d
MASK_FCVT_Q_WU	encoding.h	580;"	d
MASK_FCVT_S_D	encoding.h	470;"	d
MASK_FCVT_S_L	encoding.h	562;"	d
MASK_FCVT_S_LU	encoding.h	564;"	d
MASK_FCVT_S_Q	encoding.h	494;"	d
MASK_FCVT_S_W	encoding.h	558;"	d
MASK_FCVT_S_WU	encoding.h	560;"	d
MASK_FCVT_WU_D	encoding.h	536;"	d
MASK_FCVT_WU_Q	encoding.h	548;"	d
MASK_FCVT_WU_S	encoding.h	524;"	d
MASK_FCVT_W_D	encoding.h	534;"	d
MASK_FCVT_W_Q	encoding.h	546;"	d
MASK_FCVT_W_S	encoding.h	522;"	d
MASK_FDIV_D	encoding.h	458;"	d
MASK_FDIV_Q	encoding.h	482;"	d
MASK_FDIV_S	encoding.h	438;"	d
MASK_FENCE	encoding.h	326;"	d
MASK_FENCE_I	encoding.h	328;"	d
MASK_FEQ_D	encoding.h	514;"	d
MASK_FEQ_Q	encoding.h	520;"	d
MASK_FEQ_S	encoding.h	508;"	d
MASK_FLD	encoding.h	590;"	d
MASK_FLE_D	encoding.h	510;"	d
MASK_FLE_Q	encoding.h	516;"	d
MASK_FLE_S	encoding.h	504;"	d
MASK_FLQ	encoding.h	592;"	d
MASK_FLT_D	encoding.h	512;"	d
MASK_FLT_Q	encoding.h	518;"	d
MASK_FLT_S	encoding.h	506;"	d
MASK_FLW	encoding.h	588;"	d
MASK_FMADD_D	encoding.h	608;"	d
MASK_FMADD_Q	encoding.h	616;"	d
MASK_FMADD_S	encoding.h	600;"	d
MASK_FMAX_D	encoding.h	468;"	d
MASK_FMAX_Q	encoding.h	492;"	d
MASK_FMAX_S	encoding.h	448;"	d
MASK_FMIN_D	encoding.h	466;"	d
MASK_FMIN_Q	encoding.h	490;"	d
MASK_FMIN_S	encoding.h	446;"	d
MASK_FMSUB_D	encoding.h	610;"	d
MASK_FMSUB_Q	encoding.h	618;"	d
MASK_FMSUB_S	encoding.h	602;"	d
MASK_FMUL_D	encoding.h	456;"	d
MASK_FMUL_Q	encoding.h	480;"	d
MASK_FMUL_S	encoding.h	436;"	d
MASK_FMV_D_X	encoding.h	576;"	d
MASK_FMV_Q_X	encoding.h	586;"	d
MASK_FMV_W_X	encoding.h	566;"	d
MASK_FMV_X_D	encoding.h	542;"	d
MASK_FMV_X_Q	encoding.h	554;"	d
MASK_FMV_X_W	encoding.h	530;"	d
MASK_FNMADD_D	encoding.h	614;"	d
MASK_FNMADD_Q	encoding.h	622;"	d
MASK_FNMADD_S	encoding.h	606;"	d
MASK_FNMSUB_D	encoding.h	612;"	d
MASK_FNMSUB_Q	encoding.h	620;"	d
MASK_FNMSUB_S	encoding.h	604;"	d
MASK_FSD	encoding.h	596;"	d
MASK_FSGNJN_D	encoding.h	462;"	d
MASK_FSGNJN_Q	encoding.h	486;"	d
MASK_FSGNJN_S	encoding.h	442;"	d
MASK_FSGNJX_D	encoding.h	464;"	d
MASK_FSGNJX_Q	encoding.h	488;"	d
MASK_FSGNJX_S	encoding.h	444;"	d
MASK_FSGNJ_D	encoding.h	460;"	d
MASK_FSGNJ_Q	encoding.h	484;"	d
MASK_FSGNJ_S	encoding.h	440;"	d
MASK_FSQ	encoding.h	598;"	d
MASK_FSQRT_D	encoding.h	474;"	d
MASK_FSQRT_Q	encoding.h	502;"	d
MASK_FSQRT_S	encoding.h	450;"	d
MASK_FSUB_D	encoding.h	454;"	d
MASK_FSUB_Q	encoding.h	478;"	d
MASK_FSUB_S	encoding.h	434;"	d
MASK_FSW	encoding.h	594;"	d
MASK_HFENCE_GVMA	encoding.h	430;"	d
MASK_HFENCE_VVMA	encoding.h	428;"	d
MASK_JAL	encoding.h	242;"	d
MASK_JALR	encoding.h	240;"	d
MASK_LB	encoding.h	304;"	d
MASK_LBU	encoding.h	312;"	d
MASK_LD	encoding.h	310;"	d
MASK_LH	encoding.h	306;"	d
MASK_LHU	encoding.h	314;"	d
MASK_LR_D	encoding.h	396;"	d
MASK_LR_W	encoding.h	374;"	d
MASK_LUI	encoding.h	244;"	d
MASK_LW	encoding.h	308;"	d
MASK_LWU	encoding.h	316;"	d
MASK_MRET	encoding.h	408;"	d
MASK_MUL	encoding.h	330;"	d
MASK_MULH	encoding.h	332;"	d
MASK_MULHSU	encoding.h	334;"	d
MASK_MULHU	encoding.h	336;"	d
MASK_MULW	encoding.h	346;"	d
MASK_OR	encoding.h	282;"	d
MASK_ORI	encoding.h	262;"	d
MASK_REM	encoding.h	342;"	d
MASK_REMU	encoding.h	344;"	d
MASK_REMUW	encoding.h	354;"	d
MASK_REMW	encoding.h	352;"	d
MASK_SB	encoding.h	318;"	d
MASK_SC_D	encoding.h	398;"	d
MASK_SC_W	encoding.h	376;"	d
MASK_SD	encoding.h	324;"	d
MASK_SFENCE_VMA	encoding.h	412;"	d
MASK_SH	encoding.h	320;"	d
MASK_SLL	encoding.h	270;"	d
MASK_SLLI	encoding.h	250;"	d
MASK_SLLIW	encoding.h	288;"	d
MASK_SLLW	encoding.h	298;"	d
MASK_SLT	encoding.h	272;"	d
MASK_SLTI	encoding.h	252;"	d
MASK_SLTIU	encoding.h	254;"	d
MASK_SLTU	encoding.h	274;"	d
MASK_SRA	encoding.h	280;"	d
MASK_SRAI	encoding.h	260;"	d
MASK_SRAIW	encoding.h	292;"	d
MASK_SRAW	encoding.h	302;"	d
MASK_SRET	encoding.h	406;"	d
MASK_SRL	encoding.h	278;"	d
MASK_SRLI	encoding.h	258;"	d
MASK_SRLIW	encoding.h	290;"	d
MASK_SRLW	encoding.h	300;"	d
MASK_SUB	encoding.h	268;"	d
MASK_SUBW	encoding.h	296;"	d
MASK_SW	encoding.h	322;"	d
MASK_URET	encoding.h	404;"	d
MASK_VAADDU_VV	encoding.h	1296;"	d
MASK_VAADDU_VX	encoding.h	1390;"	d
MASK_VAADD_VV	encoding.h	1298;"	d
MASK_VAADD_VX	encoding.h	1392;"	d
MASK_VADC_VIM	encoding.h	1238;"	d
MASK_VADC_VVM	encoding.h	1156;"	d
MASK_VADC_VXM	encoding.h	1072;"	d
MASK_VADD_VI	encoding.h	1222;"	d
MASK_VADD_VV	encoding.h	1136;"	d
MASK_VADD_VX	encoding.h	1046;"	d
MASK_VAMOADDD_V	encoding.h	1478;"	d
MASK_VAMOADDQ_V	encoding.h	1496;"	d
MASK_VAMOADDW_V	encoding.h	1460;"	d
MASK_VAMOANDD_V	encoding.h	1482;"	d
MASK_VAMOANDQ_V	encoding.h	1500;"	d
MASK_VAMOANDW_V	encoding.h	1464;"	d
MASK_VAMOMAXD_V	encoding.h	1488;"	d
MASK_VAMOMAXQ_V	encoding.h	1506;"	d
MASK_VAMOMAXUD_V	encoding.h	1492;"	d
MASK_VAMOMAXUQ_V	encoding.h	1510;"	d
MASK_VAMOMAXUW_V	encoding.h	1474;"	d
MASK_VAMOMAXW_V	encoding.h	1470;"	d
MASK_VAMOMIND_V	encoding.h	1486;"	d
MASK_VAMOMINQ_V	encoding.h	1504;"	d
MASK_VAMOMINUD_V	encoding.h	1490;"	d
MASK_VAMOMINUQ_V	encoding.h	1508;"	d
MASK_VAMOMINUW_V	encoding.h	1472;"	d
MASK_VAMOMINW_V	encoding.h	1468;"	d
MASK_VAMOORD_V	encoding.h	1484;"	d
MASK_VAMOORQ_V	encoding.h	1502;"	d
MASK_VAMOORW_V	encoding.h	1466;"	d
MASK_VAMOSWAPD_V	encoding.h	1476;"	d
MASK_VAMOSWAPQ_V	encoding.h	1494;"	d
MASK_VAMOSWAPW_V	encoding.h	1458;"	d
MASK_VAMOXORD_V	encoding.h	1480;"	d
MASK_VAMOXORQ_V	encoding.h	1498;"	d
MASK_VAMOXORW_V	encoding.h	1462;"	d
MASK_VAND_VI	encoding.h	1226;"	d
MASK_VAND_VV	encoding.h	1148;"	d
MASK_VAND_VX	encoding.h	1060;"	d
MASK_VASUBU_VV	encoding.h	1300;"	d
MASK_VASUBU_VX	encoding.h	1394;"	d
MASK_VASUB_VV	encoding.h	1302;"	d
MASK_VASUB_VX	encoding.h	1396;"	d
MASK_VCOMPRESS_VM	encoding.h	1306;"	d
MASK_VDIVU_VV	encoding.h	1338;"	d
MASK_VDIVU_VX	encoding.h	1404;"	d
MASK_VDIV_VV	encoding.h	1340;"	d
MASK_VDIV_VX	encoding.h	1406;"	d
MASK_VDOTU_VV	encoding.h	1212;"	d
MASK_VDOT_VV	encoding.h	1214;"	d
MASK_VFADD_VF	encoding.h	862;"	d
MASK_VFADD_VV	encoding.h	936;"	d
MASK_VFCLASS_V	encoding.h	1020;"	d
MASK_VFCVT_F_XU_V	encoding.h	992;"	d
MASK_VFCVT_F_X_V	encoding.h	994;"	d
MASK_VFCVT_XU_F_V	encoding.h	988;"	d
MASK_VFCVT_X_F_V	encoding.h	990;"	d
MASK_VFDIV_VF	encoding.h	894;"	d
MASK_VFDIV_VV	encoding.h	968;"	d
MASK_VFDOT_VV	encoding.h	1036;"	d
MASK_VFIRST_M	encoding.h	1336;"	d
MASK_VFMACC_VF	encoding.h	910;"	d
MASK_VFMACC_VV	encoding.h	980;"	d
MASK_VFMADD_VF	encoding.h	902;"	d
MASK_VFMADD_VV	encoding.h	972;"	d
MASK_VFMAX_VF	encoding.h	868;"	d
MASK_VFMAX_VV	encoding.h	948;"	d
MASK_VFMERGE_VFM	encoding.h	878;"	d
MASK_VFMIN_VF	encoding.h	866;"	d
MASK_VFMIN_VV	encoding.h	944;"	d
MASK_VFMSAC_VF	encoding.h	914;"	d
MASK_VFMSAC_VV	encoding.h	984;"	d
MASK_VFMSUB_VF	encoding.h	906;"	d
MASK_VFMSUB_VV	encoding.h	976;"	d
MASK_VFMUL_VF	encoding.h	898;"	d
MASK_VFMUL_VV	encoding.h	970;"	d
MASK_VFMV_F_S	encoding.h	958;"	d
MASK_VFMV_S_F	encoding.h	876;"	d
MASK_VFMV_V_F	encoding.h	880;"	d
MASK_VFNCVT_F_F_V	encoding.h	1014;"	d
MASK_VFNCVT_F_XU_V	encoding.h	1010;"	d
MASK_VFNCVT_F_X_V	encoding.h	1012;"	d
MASK_VFNCVT_ROD_F_F_V	encoding.h	1016;"	d
MASK_VFNCVT_XU_F_V	encoding.h	1006;"	d
MASK_VFNCVT_X_F_V	encoding.h	1008;"	d
MASK_VFNMACC_VF	encoding.h	912;"	d
MASK_VFNMACC_VV	encoding.h	982;"	d
MASK_VFNMADD_VF	encoding.h	904;"	d
MASK_VFNMADD_VV	encoding.h	974;"	d
MASK_VFNMSAC_VF	encoding.h	916;"	d
MASK_VFNMSAC_VV	encoding.h	986;"	d
MASK_VFNMSUB_VF	encoding.h	908;"	d
MASK_VFNMSUB_VV	encoding.h	978;"	d
MASK_VFRDIV_VF	encoding.h	896;"	d
MASK_VFREDMAX_VS	encoding.h	950;"	d
MASK_VFREDMIN_VS	encoding.h	946;"	d
MASK_VFREDOSUM_VS	encoding.h	942;"	d
MASK_VFREDSUM_VS	encoding.h	938;"	d
MASK_VFRSUB_VF	encoding.h	900;"	d
MASK_VFSGNJN_VF	encoding.h	872;"	d
MASK_VFSGNJN_VV	encoding.h	954;"	d
MASK_VFSGNJX_VF	encoding.h	874;"	d
MASK_VFSGNJX_VV	encoding.h	956;"	d
MASK_VFSGNJ_VF	encoding.h	870;"	d
MASK_VFSGNJ_VV	encoding.h	952;"	d
MASK_VFSQRT_V	encoding.h	1018;"	d
MASK_VFSUB_VF	encoding.h	864;"	d
MASK_VFSUB_VV	encoding.h	940;"	d
MASK_VFWADD_VF	encoding.h	918;"	d
MASK_VFWADD_VV	encoding.h	1022;"	d
MASK_VFWADD_WF	encoding.h	922;"	d
MASK_VFWADD_WV	encoding.h	1030;"	d
MASK_VFWCVT_F_F_V	encoding.h	1004;"	d
MASK_VFWCVT_F_XU_V	encoding.h	1000;"	d
MASK_VFWCVT_F_X_V	encoding.h	1002;"	d
MASK_VFWCVT_XU_F_V	encoding.h	996;"	d
MASK_VFWCVT_X_F_V	encoding.h	998;"	d
MASK_VFWMACC_VF	encoding.h	928;"	d
MASK_VFWMACC_VV	encoding.h	1038;"	d
MASK_VFWMSAC_VF	encoding.h	932;"	d
MASK_VFWMSAC_VV	encoding.h	1042;"	d
MASK_VFWMUL_VF	encoding.h	926;"	d
MASK_VFWMUL_VV	encoding.h	1034;"	d
MASK_VFWNMACC_VF	encoding.h	930;"	d
MASK_VFWNMACC_VV	encoding.h	1040;"	d
MASK_VFWNMSAC_VF	encoding.h	934;"	d
MASK_VFWNMSAC_VV	encoding.h	1044;"	d
MASK_VFWREDOSUM_VS	encoding.h	1028;"	d
MASK_VFWREDSUM_VS	encoding.h	1024;"	d
MASK_VFWSUB_VF	encoding.h	920;"	d
MASK_VFWSUB_VV	encoding.h	1026;"	d
MASK_VFWSUB_WF	encoding.h	924;"	d
MASK_VFWSUB_WV	encoding.h	1032;"	d
MASK_VID_V	encoding.h	1332;"	d
MASK_VIOTA_M	encoding.h	1330;"	d
MASK_VLBFF_V	encoding.h	848;"	d
MASK_VLBUFF_V	encoding.h	856;"	d
MASK_VLBU_V	encoding.h	782;"	d
MASK_VLB_V	encoding.h	774;"	d
MASK_VLEFF_V	encoding.h	854;"	d
MASK_VLE_V	encoding.h	780;"	d
MASK_VLHFF_V	encoding.h	850;"	d
MASK_VLHUFF_V	encoding.h	858;"	d
MASK_VLHU_V	encoding.h	784;"	d
MASK_VLH_V	encoding.h	776;"	d
MASK_VLSBU_V	encoding.h	804;"	d
MASK_VLSB_V	encoding.h	796;"	d
MASK_VLSE_V	encoding.h	802;"	d
MASK_VLSHU_V	encoding.h	806;"	d
MASK_VLSH_V	encoding.h	798;"	d
MASK_VLSWU_V	encoding.h	808;"	d
MASK_VLSW_V	encoding.h	800;"	d
MASK_VLWFF_V	encoding.h	852;"	d
MASK_VLWUFF_V	encoding.h	860;"	d
MASK_VLWU_V	encoding.h	786;"	d
MASK_VLW_V	encoding.h	778;"	d
MASK_VLXBU_V	encoding.h	826;"	d
MASK_VLXB_V	encoding.h	818;"	d
MASK_VLXE_V	encoding.h	824;"	d
MASK_VLXHU_V	encoding.h	828;"	d
MASK_VLXH_V	encoding.h	820;"	d
MASK_VLXWU_V	encoding.h	830;"	d
MASK_VLXW_V	encoding.h	822;"	d
MASK_VMACC_VV	encoding.h	1358;"	d
MASK_VMACC_VX	encoding.h	1424;"	d
MASK_VMADC_VIM	encoding.h	1240;"	d
MASK_VMADC_VVM	encoding.h	1158;"	d
MASK_VMADC_VXM	encoding.h	1074;"	d
MASK_VMADD_VV	encoding.h	1354;"	d
MASK_VMADD_VX	encoding.h	1420;"	d
MASK_VMANDNOT_MM	encoding.h	1308;"	d
MASK_VMAND_MM	encoding.h	1310;"	d
MASK_VMAXU_VV	encoding.h	1144;"	d
MASK_VMAXU_VX	encoding.h	1056;"	d
MASK_VMAX_VV	encoding.h	1146;"	d
MASK_VMAX_VX	encoding.h	1058;"	d
MASK_VMERGE_VIM	encoding.h	1242;"	d
MASK_VMERGE_VVM	encoding.h	1164;"	d
MASK_VMERGE_VXM	encoding.h	1080;"	d
MASK_VMFEQ_VF	encoding.h	882;"	d
MASK_VMFEQ_VV	encoding.h	960;"	d
MASK_VMFGE_VF	encoding.h	892;"	d
MASK_VMFGT_VF	encoding.h	890;"	d
MASK_VMFLE_VF	encoding.h	884;"	d
MASK_VMFLE_VV	encoding.h	962;"	d
MASK_VMFLT_VF	encoding.h	886;"	d
MASK_VMFLT_VV	encoding.h	964;"	d
MASK_VMFNE_VF	encoding.h	888;"	d
MASK_VMFNE_VV	encoding.h	966;"	d
MASK_VMINU_VV	encoding.h	1140;"	d
MASK_VMINU_VX	encoding.h	1052;"	d
MASK_VMIN_VV	encoding.h	1142;"	d
MASK_VMIN_VX	encoding.h	1054;"	d
MASK_VMNAND_MM	encoding.h	1318;"	d
MASK_VMNOR_MM	encoding.h	1320;"	d
MASK_VMORNOT_MM	encoding.h	1316;"	d
MASK_VMOR_MM	encoding.h	1312;"	d
MASK_VMSBC_VVM	encoding.h	1162;"	d
MASK_VMSBC_VXM	encoding.h	1078;"	d
MASK_VMSBF_M	encoding.h	1324;"	d
MASK_VMSEQ_VI	encoding.h	1246;"	d
MASK_VMSEQ_VV	encoding.h	1168;"	d
MASK_VMSEQ_VX	encoding.h	1084;"	d
MASK_VMSGTU_VI	encoding.h	1254;"	d
MASK_VMSGTU_VX	encoding.h	1096;"	d
MASK_VMSGT_VI	encoding.h	1256;"	d
MASK_VMSGT_VX	encoding.h	1098;"	d
MASK_VMSIF_M	encoding.h	1328;"	d
MASK_VMSLEU_VI	encoding.h	1250;"	d
MASK_VMSLEU_VV	encoding.h	1176;"	d
MASK_VMSLEU_VX	encoding.h	1092;"	d
MASK_VMSLE_VI	encoding.h	1252;"	d
MASK_VMSLE_VV	encoding.h	1178;"	d
MASK_VMSLE_VX	encoding.h	1094;"	d
MASK_VMSLTU_VV	encoding.h	1172;"	d
MASK_VMSLTU_VX	encoding.h	1088;"	d
MASK_VMSLT_VV	encoding.h	1174;"	d
MASK_VMSLT_VX	encoding.h	1090;"	d
MASK_VMSNE_VI	encoding.h	1248;"	d
MASK_VMSNE_VV	encoding.h	1170;"	d
MASK_VMSNE_VX	encoding.h	1086;"	d
MASK_VMSOF_M	encoding.h	1326;"	d
MASK_VMULHSU_VV	encoding.h	1350;"	d
MASK_VMULHSU_VX	encoding.h	1416;"	d
MASK_VMULHU_VV	encoding.h	1346;"	d
MASK_VMULHU_VX	encoding.h	1412;"	d
MASK_VMULH_VV	encoding.h	1352;"	d
MASK_VMULH_VX	encoding.h	1418;"	d
MASK_VMUL_VV	encoding.h	1348;"	d
MASK_VMUL_VX	encoding.h	1414;"	d
MASK_VMV_S_X	encoding.h	1398;"	d
MASK_VMV_V_I	encoding.h	1244;"	d
MASK_VMV_V_V	encoding.h	1166;"	d
MASK_VMV_V_X	encoding.h	1082;"	d
MASK_VMV_X_S	encoding.h	1304;"	d
MASK_VMXNOR_MM	encoding.h	1322;"	d
MASK_VMXOR_MM	encoding.h	1314;"	d
MASK_VNCLIPU_VI	encoding.h	1276;"	d
MASK_VNCLIPU_VV	encoding.h	1204;"	d
MASK_VNCLIPU_VX	encoding.h	1124;"	d
MASK_VNCLIP_VI	encoding.h	1278;"	d
MASK_VNCLIP_VV	encoding.h	1206;"	d
MASK_VNCLIP_VX	encoding.h	1126;"	d
MASK_VNMSAC_VV	encoding.h	1360;"	d
MASK_VNMSAC_VX	encoding.h	1426;"	d
MASK_VNMSUB_VV	encoding.h	1356;"	d
MASK_VNMSUB_VX	encoding.h	1422;"	d
MASK_VNSRA_VI	encoding.h	1274;"	d
MASK_VNSRA_VV	encoding.h	1202;"	d
MASK_VNSRA_VX	encoding.h	1122;"	d
MASK_VNSRL_VI	encoding.h	1272;"	d
MASK_VNSRL_VV	encoding.h	1200;"	d
MASK_VNSRL_VX	encoding.h	1120;"	d
MASK_VOR_VI	encoding.h	1228;"	d
MASK_VOR_VV	encoding.h	1150;"	d
MASK_VOR_VX	encoding.h	1062;"	d
MASK_VPOPC_M	encoding.h	1334;"	d
MASK_VREDAND_VS	encoding.h	1282;"	d
MASK_VREDMAXU_VS	encoding.h	1292;"	d
MASK_VREDMAX_VS	encoding.h	1294;"	d
MASK_VREDMINU_VS	encoding.h	1288;"	d
MASK_VREDMIN_VS	encoding.h	1290;"	d
MASK_VREDOR_VS	encoding.h	1284;"	d
MASK_VREDSUM_VS	encoding.h	1280;"	d
MASK_VREDXOR_VS	encoding.h	1286;"	d
MASK_VREMU_VV	encoding.h	1342;"	d
MASK_VREMU_VX	encoding.h	1408;"	d
MASK_VREM_VV	encoding.h	1344;"	d
MASK_VREM_VX	encoding.h	1410;"	d
MASK_VRGATHER_VI	encoding.h	1232;"	d
MASK_VRGATHER_VV	encoding.h	1154;"	d
MASK_VRGATHER_VX	encoding.h	1066;"	d
MASK_VRSUB_VI	encoding.h	1224;"	d
MASK_VRSUB_VX	encoding.h	1050;"	d
MASK_VSADDU_VI	encoding.h	1258;"	d
MASK_VSADDU_VV	encoding.h	1180;"	d
MASK_VSADDU_VX	encoding.h	1100;"	d
MASK_VSADD_VI	encoding.h	1260;"	d
MASK_VSADD_VV	encoding.h	1182;"	d
MASK_VSADD_VX	encoding.h	1102;"	d
MASK_VSBC_VVM	encoding.h	1160;"	d
MASK_VSBC_VXM	encoding.h	1076;"	d
MASK_VSB_V	encoding.h	788;"	d
MASK_VSETVL	encoding.h	772;"	d
MASK_VSETVLI	encoding.h	770;"	d
MASK_VSE_V	encoding.h	794;"	d
MASK_VSH_V	encoding.h	790;"	d
MASK_VSLIDE1DOWN_VX	encoding.h	1402;"	d
MASK_VSLIDE1UP_VX	encoding.h	1400;"	d
MASK_VSLIDEDOWN_VI	encoding.h	1236;"	d
MASK_VSLIDEDOWN_VX	encoding.h	1070;"	d
MASK_VSLIDEUP_VI	encoding.h	1234;"	d
MASK_VSLIDEUP_VX	encoding.h	1068;"	d
MASK_VSLL_VI	encoding.h	1262;"	d
MASK_VSLL_VV	encoding.h	1188;"	d
MASK_VSLL_VX	encoding.h	1108;"	d
MASK_VSMUL_VV	encoding.h	1190;"	d
MASK_VSMUL_VX	encoding.h	1110;"	d
MASK_VSRA_VI	encoding.h	1266;"	d
MASK_VSRA_VV	encoding.h	1194;"	d
MASK_VSRA_VX	encoding.h	1114;"	d
MASK_VSRL_VI	encoding.h	1264;"	d
MASK_VSRL_VV	encoding.h	1192;"	d
MASK_VSRL_VX	encoding.h	1112;"	d
MASK_VSSB_V	encoding.h	810;"	d
MASK_VSSE_V	encoding.h	816;"	d
MASK_VSSH_V	encoding.h	812;"	d
MASK_VSSRA_VI	encoding.h	1270;"	d
MASK_VSSRA_VV	encoding.h	1198;"	d
MASK_VSSRA_VX	encoding.h	1118;"	d
MASK_VSSRL_VI	encoding.h	1268;"	d
MASK_VSSRL_VV	encoding.h	1196;"	d
MASK_VSSRL_VX	encoding.h	1116;"	d
MASK_VSSUBU_VV	encoding.h	1184;"	d
MASK_VSSUBU_VX	encoding.h	1104;"	d
MASK_VSSUB_VV	encoding.h	1186;"	d
MASK_VSSUB_VX	encoding.h	1106;"	d
MASK_VSSW_V	encoding.h	814;"	d
MASK_VSUB_VV	encoding.h	1138;"	d
MASK_VSUB_VX	encoding.h	1048;"	d
MASK_VSUXB_V	encoding.h	840;"	d
MASK_VSUXE_V	encoding.h	846;"	d
MASK_VSUXH_V	encoding.h	842;"	d
MASK_VSUXW_V	encoding.h	844;"	d
MASK_VSW_V	encoding.h	792;"	d
MASK_VSXB_V	encoding.h	832;"	d
MASK_VSXE_V	encoding.h	838;"	d
MASK_VSXH_V	encoding.h	834;"	d
MASK_VSXW_V	encoding.h	836;"	d
MASK_VWADDU_VV	encoding.h	1362;"	d
MASK_VWADDU_VX	encoding.h	1428;"	d
MASK_VWADDU_WV	encoding.h	1370;"	d
MASK_VWADDU_WX	encoding.h	1436;"	d
MASK_VWADD_VV	encoding.h	1364;"	d
MASK_VWADD_VX	encoding.h	1430;"	d
MASK_VWADD_WV	encoding.h	1372;"	d
MASK_VWADD_WX	encoding.h	1438;"	d
MASK_VWMACCSU_VV	encoding.h	1388;"	d
MASK_VWMACCSU_VX	encoding.h	1456;"	d
MASK_VWMACCUS_VX	encoding.h	1454;"	d
MASK_VWMACCU_VV	encoding.h	1384;"	d
MASK_VWMACCU_VX	encoding.h	1450;"	d
MASK_VWMACC_VV	encoding.h	1386;"	d
MASK_VWMACC_VX	encoding.h	1452;"	d
MASK_VWMULSU_VV	encoding.h	1380;"	d
MASK_VWMULSU_VX	encoding.h	1446;"	d
MASK_VWMULU_VV	encoding.h	1378;"	d
MASK_VWMULU_VX	encoding.h	1444;"	d
MASK_VWMUL_VV	encoding.h	1382;"	d
MASK_VWMUL_VX	encoding.h	1448;"	d
MASK_VWREDSUMU_VS	encoding.h	1208;"	d
MASK_VWREDSUM_VS	encoding.h	1210;"	d
MASK_VWSMACCSU_VV	encoding.h	1220;"	d
MASK_VWSMACCSU_VX	encoding.h	1134;"	d
MASK_VWSMACCUS_VX	encoding.h	1132;"	d
MASK_VWSMACCU_VV	encoding.h	1216;"	d
MASK_VWSMACCU_VX	encoding.h	1128;"	d
MASK_VWSMACC_VV	encoding.h	1218;"	d
MASK_VWSMACC_VX	encoding.h	1130;"	d
MASK_VWSUBU_VV	encoding.h	1366;"	d
MASK_VWSUBU_VX	encoding.h	1432;"	d
MASK_VWSUBU_WV	encoding.h	1374;"	d
MASK_VWSUBU_WX	encoding.h	1440;"	d
MASK_VWSUB_VV	encoding.h	1368;"	d
MASK_VWSUB_VX	encoding.h	1434;"	d
MASK_VWSUB_WV	encoding.h	1376;"	d
MASK_VWSUB_WX	encoding.h	1442;"	d
MASK_VXOR_VI	encoding.h	1230;"	d
MASK_VXOR_VV	encoding.h	1152;"	d
MASK_VXOR_VX	encoding.h	1064;"	d
MASK_WFI	encoding.h	414;"	d
MASK_XOR	encoding.h	276;"	d
MASK_XORI	encoding.h	256;"	d
MATCH_ADD	encoding.h	265;"	d
MATCH_ADDI	encoding.h	247;"	d
MATCH_ADDIW	encoding.h	285;"	d
MATCH_ADDW	encoding.h	293;"	d
MATCH_AMOADD_D	encoding.h	377;"	d
MATCH_AMOADD_W	encoding.h	355;"	d
MATCH_AMOAND_D	encoding.h	383;"	d
MATCH_AMOAND_W	encoding.h	361;"	d
MATCH_AMOMAXU_D	encoding.h	391;"	d
MATCH_AMOMAXU_W	encoding.h	369;"	d
MATCH_AMOMAX_D	encoding.h	387;"	d
MATCH_AMOMAX_W	encoding.h	365;"	d
MATCH_AMOMINU_D	encoding.h	389;"	d
MATCH_AMOMINU_W	encoding.h	367;"	d
MATCH_AMOMIN_D	encoding.h	385;"	d
MATCH_AMOMIN_W	encoding.h	363;"	d
MATCH_AMOOR_D	encoding.h	381;"	d
MATCH_AMOOR_W	encoding.h	359;"	d
MATCH_AMOSWAP_D	encoding.h	393;"	d
MATCH_AMOSWAP_W	encoding.h	371;"	d
MATCH_AMOXOR_D	encoding.h	379;"	d
MATCH_AMOXOR_W	encoding.h	357;"	d
MATCH_AND	encoding.h	283;"	d
MATCH_ANDI	encoding.h	263;"	d
MATCH_AUIPC	encoding.h	245;"	d
MATCH_BEQ	encoding.h	227;"	d
MATCH_BGE	encoding.h	233;"	d
MATCH_BGEU	encoding.h	237;"	d
MATCH_BLT	encoding.h	231;"	d
MATCH_BLTU	encoding.h	235;"	d
MATCH_BNE	encoding.h	229;"	d
MATCH_CSRRC	encoding.h	419;"	d
MATCH_CSRRCI	encoding.h	425;"	d
MATCH_CSRRS	encoding.h	417;"	d
MATCH_CSRRSI	encoding.h	423;"	d
MATCH_CSRRW	encoding.h	415;"	d
MATCH_CSRRWI	encoding.h	421;"	d
MATCH_CUSTOM0	encoding.h	721;"	d
MATCH_CUSTOM0_RD	encoding.h	727;"	d
MATCH_CUSTOM0_RD_RS1	encoding.h	729;"	d
MATCH_CUSTOM0_RD_RS1_RS2	encoding.h	731;"	d
MATCH_CUSTOM0_RS1	encoding.h	723;"	d
MATCH_CUSTOM0_RS1_RS2	encoding.h	725;"	d
MATCH_CUSTOM1	encoding.h	733;"	d
MATCH_CUSTOM1_RD	encoding.h	739;"	d
MATCH_CUSTOM1_RD_RS1	encoding.h	741;"	d
MATCH_CUSTOM1_RD_RS1_RS2	encoding.h	743;"	d
MATCH_CUSTOM1_RS1	encoding.h	735;"	d
MATCH_CUSTOM1_RS1_RS2	encoding.h	737;"	d
MATCH_CUSTOM2	encoding.h	745;"	d
MATCH_CUSTOM2_RD	encoding.h	751;"	d
MATCH_CUSTOM2_RD_RS1	encoding.h	753;"	d
MATCH_CUSTOM2_RD_RS1_RS2	encoding.h	755;"	d
MATCH_CUSTOM2_RS1	encoding.h	747;"	d
MATCH_CUSTOM2_RS1_RS2	encoding.h	749;"	d
MATCH_CUSTOM3	encoding.h	757;"	d
MATCH_CUSTOM3_RD	encoding.h	763;"	d
MATCH_CUSTOM3_RD_RS1	encoding.h	765;"	d
MATCH_CUSTOM3_RD_RS1_RS2	encoding.h	767;"	d
MATCH_CUSTOM3_RS1	encoding.h	759;"	d
MATCH_CUSTOM3_RS1_RS2	encoding.h	761;"	d
MATCH_C_ADD	encoding.h	713;"	d
MATCH_C_ADDI	encoding.h	671;"	d
MATCH_C_ADDI16SP	encoding.h	625;"	d
MATCH_C_ADDI4SPN	encoding.h	657;"	d
MATCH_C_ADDIW	encoding.h	643;"	d
MATCH_C_ADDW	encoding.h	695;"	d
MATCH_C_AND	encoding.h	691;"	d
MATCH_C_ANDI	encoding.h	683;"	d
MATCH_C_BEQZ	encoding.h	699;"	d
MATCH_C_BNEZ	encoding.h	701;"	d
MATCH_C_EBREAK	encoding.h	631;"	d
MATCH_C_FLD	encoding.h	659;"	d
MATCH_C_FLDSP	encoding.h	705;"	d
MATCH_C_FLW	encoding.h	663;"	d
MATCH_C_FLWSP	encoding.h	709;"	d
MATCH_C_FSD	encoding.h	665;"	d
MATCH_C_FSDSP	encoding.h	715;"	d
MATCH_C_FSW	encoding.h	669;"	d
MATCH_C_FSWSP	encoding.h	719;"	d
MATCH_C_J	encoding.h	697;"	d
MATCH_C_JAL	encoding.h	673;"	d
MATCH_C_JALR	encoding.h	629;"	d
MATCH_C_JR	encoding.h	627;"	d
MATCH_C_LD	encoding.h	639;"	d
MATCH_C_LDSP	encoding.h	645;"	d
MATCH_C_LI	encoding.h	675;"	d
MATCH_C_LQ	encoding.h	649;"	d
MATCH_C_LQSP	encoding.h	653;"	d
MATCH_C_LUI	encoding.h	677;"	d
MATCH_C_LW	encoding.h	661;"	d
MATCH_C_LWSP	encoding.h	707;"	d
MATCH_C_MV	encoding.h	711;"	d
MATCH_C_NOP	encoding.h	623;"	d
MATCH_C_OR	encoding.h	689;"	d
MATCH_C_SD	encoding.h	641;"	d
MATCH_C_SDSP	encoding.h	647;"	d
MATCH_C_SLLI	encoding.h	703;"	d
MATCH_C_SLLI_RV32	encoding.h	637;"	d
MATCH_C_SQ	encoding.h	651;"	d
MATCH_C_SQSP	encoding.h	655;"	d
MATCH_C_SRAI	encoding.h	681;"	d
MATCH_C_SRAI_RV32	encoding.h	635;"	d
MATCH_C_SRLI	encoding.h	679;"	d
MATCH_C_SRLI_RV32	encoding.h	633;"	d
MATCH_C_SUB	encoding.h	685;"	d
MATCH_C_SUBW	encoding.h	693;"	d
MATCH_C_SW	encoding.h	667;"	d
MATCH_C_SWSP	encoding.h	717;"	d
MATCH_C_XOR	encoding.h	687;"	d
MATCH_DIV	encoding.h	337;"	d
MATCH_DIVU	encoding.h	339;"	d
MATCH_DIVUW	encoding.h	349;"	d
MATCH_DIVW	encoding.h	347;"	d
MATCH_DRET	encoding.h	409;"	d
MATCH_EBREAK	encoding.h	401;"	d
MATCH_ECALL	encoding.h	399;"	d
MATCH_EQUAL	processor.h	/^  MATCH_EQUAL = MCONTROL_MATCH_EQUAL,$/;"	e	enum:__anon18
MATCH_FADD_D	encoding.h	451;"	d
MATCH_FADD_Q	encoding.h	475;"	d
MATCH_FADD_S	encoding.h	431;"	d
MATCH_FCLASS_D	encoding.h	543;"	d
MATCH_FCLASS_Q	encoding.h	555;"	d
MATCH_FCLASS_S	encoding.h	531;"	d
MATCH_FCVT_D_L	encoding.h	571;"	d
MATCH_FCVT_D_LU	encoding.h	573;"	d
MATCH_FCVT_D_Q	encoding.h	497;"	d
MATCH_FCVT_D_S	encoding.h	471;"	d
MATCH_FCVT_D_W	encoding.h	567;"	d
MATCH_FCVT_D_WU	encoding.h	569;"	d
MATCH_FCVT_LU_D	encoding.h	539;"	d
MATCH_FCVT_LU_Q	encoding.h	551;"	d
MATCH_FCVT_LU_S	encoding.h	527;"	d
MATCH_FCVT_L_D	encoding.h	537;"	d
MATCH_FCVT_L_Q	encoding.h	549;"	d
MATCH_FCVT_L_S	encoding.h	525;"	d
MATCH_FCVT_Q_D	encoding.h	499;"	d
MATCH_FCVT_Q_L	encoding.h	581;"	d
MATCH_FCVT_Q_LU	encoding.h	583;"	d
MATCH_FCVT_Q_S	encoding.h	495;"	d
MATCH_FCVT_Q_W	encoding.h	577;"	d
MATCH_FCVT_Q_WU	encoding.h	579;"	d
MATCH_FCVT_S_D	encoding.h	469;"	d
MATCH_FCVT_S_L	encoding.h	561;"	d
MATCH_FCVT_S_LU	encoding.h	563;"	d
MATCH_FCVT_S_Q	encoding.h	493;"	d
MATCH_FCVT_S_W	encoding.h	557;"	d
MATCH_FCVT_S_WU	encoding.h	559;"	d
MATCH_FCVT_WU_D	encoding.h	535;"	d
MATCH_FCVT_WU_Q	encoding.h	547;"	d
MATCH_FCVT_WU_S	encoding.h	523;"	d
MATCH_FCVT_W_D	encoding.h	533;"	d
MATCH_FCVT_W_Q	encoding.h	545;"	d
MATCH_FCVT_W_S	encoding.h	521;"	d
MATCH_FDIV_D	encoding.h	457;"	d
MATCH_FDIV_Q	encoding.h	481;"	d
MATCH_FDIV_S	encoding.h	437;"	d
MATCH_FENCE	encoding.h	325;"	d
MATCH_FENCE_I	encoding.h	327;"	d
MATCH_FEQ_D	encoding.h	513;"	d
MATCH_FEQ_Q	encoding.h	519;"	d
MATCH_FEQ_S	encoding.h	507;"	d
MATCH_FLD	encoding.h	589;"	d
MATCH_FLE_D	encoding.h	509;"	d
MATCH_FLE_Q	encoding.h	515;"	d
MATCH_FLE_S	encoding.h	503;"	d
MATCH_FLQ	encoding.h	591;"	d
MATCH_FLT_D	encoding.h	511;"	d
MATCH_FLT_Q	encoding.h	517;"	d
MATCH_FLT_S	encoding.h	505;"	d
MATCH_FLW	encoding.h	587;"	d
MATCH_FMADD_D	encoding.h	607;"	d
MATCH_FMADD_Q	encoding.h	615;"	d
MATCH_FMADD_S	encoding.h	599;"	d
MATCH_FMAX_D	encoding.h	467;"	d
MATCH_FMAX_Q	encoding.h	491;"	d
MATCH_FMAX_S	encoding.h	447;"	d
MATCH_FMIN_D	encoding.h	465;"	d
MATCH_FMIN_Q	encoding.h	489;"	d
MATCH_FMIN_S	encoding.h	445;"	d
MATCH_FMSUB_D	encoding.h	609;"	d
MATCH_FMSUB_Q	encoding.h	617;"	d
MATCH_FMSUB_S	encoding.h	601;"	d
MATCH_FMUL_D	encoding.h	455;"	d
MATCH_FMUL_Q	encoding.h	479;"	d
MATCH_FMUL_S	encoding.h	435;"	d
MATCH_FMV_D_X	encoding.h	575;"	d
MATCH_FMV_Q_X	encoding.h	585;"	d
MATCH_FMV_W_X	encoding.h	565;"	d
MATCH_FMV_X_D	encoding.h	541;"	d
MATCH_FMV_X_Q	encoding.h	553;"	d
MATCH_FMV_X_W	encoding.h	529;"	d
MATCH_FNMADD_D	encoding.h	613;"	d
MATCH_FNMADD_Q	encoding.h	621;"	d
MATCH_FNMADD_S	encoding.h	605;"	d
MATCH_FNMSUB_D	encoding.h	611;"	d
MATCH_FNMSUB_Q	encoding.h	619;"	d
MATCH_FNMSUB_S	encoding.h	603;"	d
MATCH_FSD	encoding.h	595;"	d
MATCH_FSGNJN_D	encoding.h	461;"	d
MATCH_FSGNJN_Q	encoding.h	485;"	d
MATCH_FSGNJN_S	encoding.h	441;"	d
MATCH_FSGNJX_D	encoding.h	463;"	d
MATCH_FSGNJX_Q	encoding.h	487;"	d
MATCH_FSGNJX_S	encoding.h	443;"	d
MATCH_FSGNJ_D	encoding.h	459;"	d
MATCH_FSGNJ_Q	encoding.h	483;"	d
MATCH_FSGNJ_S	encoding.h	439;"	d
MATCH_FSQ	encoding.h	597;"	d
MATCH_FSQRT_D	encoding.h	473;"	d
MATCH_FSQRT_Q	encoding.h	501;"	d
MATCH_FSQRT_S	encoding.h	449;"	d
MATCH_FSUB_D	encoding.h	453;"	d
MATCH_FSUB_Q	encoding.h	477;"	d
MATCH_FSUB_S	encoding.h	433;"	d
MATCH_FSW	encoding.h	593;"	d
MATCH_GE	processor.h	/^  MATCH_GE = MCONTROL_MATCH_GE,$/;"	e	enum:__anon18
MATCH_HFENCE_GVMA	encoding.h	429;"	d
MATCH_HFENCE_VVMA	encoding.h	427;"	d
MATCH_JAL	encoding.h	241;"	d
MATCH_JALR	encoding.h	239;"	d
MATCH_LB	encoding.h	303;"	d
MATCH_LBU	encoding.h	311;"	d
MATCH_LD	encoding.h	309;"	d
MATCH_LH	encoding.h	305;"	d
MATCH_LHU	encoding.h	313;"	d
MATCH_LR_D	encoding.h	395;"	d
MATCH_LR_W	encoding.h	373;"	d
MATCH_LT	processor.h	/^  MATCH_LT = MCONTROL_MATCH_LT,$/;"	e	enum:__anon18
MATCH_LUI	encoding.h	243;"	d
MATCH_LW	encoding.h	307;"	d
MATCH_LWU	encoding.h	315;"	d
MATCH_MASK_HIGH	processor.h	/^  MATCH_MASK_HIGH = MCONTROL_MATCH_MASK_HIGH$/;"	e	enum:__anon18
MATCH_MASK_LOW	processor.h	/^  MATCH_MASK_LOW = MCONTROL_MATCH_MASK_LOW,$/;"	e	enum:__anon18
MATCH_MRET	encoding.h	407;"	d
MATCH_MUL	encoding.h	329;"	d
MATCH_MULH	encoding.h	331;"	d
MATCH_MULHSU	encoding.h	333;"	d
MATCH_MULHU	encoding.h	335;"	d
MATCH_MULW	encoding.h	345;"	d
MATCH_NAPOT	processor.h	/^  MATCH_NAPOT = MCONTROL_MATCH_NAPOT,$/;"	e	enum:__anon18
MATCH_OR	encoding.h	281;"	d
MATCH_ORI	encoding.h	261;"	d
MATCH_REM	encoding.h	341;"	d
MATCH_REMU	encoding.h	343;"	d
MATCH_REMUW	encoding.h	353;"	d
MATCH_REMW	encoding.h	351;"	d
MATCH_SB	encoding.h	317;"	d
MATCH_SC_D	encoding.h	397;"	d
MATCH_SC_W	encoding.h	375;"	d
MATCH_SD	encoding.h	323;"	d
MATCH_SFENCE_VMA	encoding.h	411;"	d
MATCH_SH	encoding.h	319;"	d
MATCH_SLL	encoding.h	269;"	d
MATCH_SLLI	encoding.h	249;"	d
MATCH_SLLIW	encoding.h	287;"	d
MATCH_SLLW	encoding.h	297;"	d
MATCH_SLT	encoding.h	271;"	d
MATCH_SLTI	encoding.h	251;"	d
MATCH_SLTIU	encoding.h	253;"	d
MATCH_SLTU	encoding.h	273;"	d
MATCH_SRA	encoding.h	279;"	d
MATCH_SRAI	encoding.h	259;"	d
MATCH_SRAIW	encoding.h	291;"	d
MATCH_SRAW	encoding.h	301;"	d
MATCH_SRET	encoding.h	405;"	d
MATCH_SRL	encoding.h	277;"	d
MATCH_SRLI	encoding.h	257;"	d
MATCH_SRLIW	encoding.h	289;"	d
MATCH_SRLW	encoding.h	299;"	d
MATCH_SUB	encoding.h	267;"	d
MATCH_SUBW	encoding.h	295;"	d
MATCH_SW	encoding.h	321;"	d
MATCH_URET	encoding.h	403;"	d
MATCH_VAADDU_VV	encoding.h	1295;"	d
MATCH_VAADDU_VX	encoding.h	1389;"	d
MATCH_VAADD_VV	encoding.h	1297;"	d
MATCH_VAADD_VX	encoding.h	1391;"	d
MATCH_VADC_VIM	encoding.h	1237;"	d
MATCH_VADC_VVM	encoding.h	1155;"	d
MATCH_VADC_VXM	encoding.h	1071;"	d
MATCH_VADD_VI	encoding.h	1221;"	d
MATCH_VADD_VV	encoding.h	1135;"	d
MATCH_VADD_VX	encoding.h	1045;"	d
MATCH_VAMOADDD_V	encoding.h	1477;"	d
MATCH_VAMOADDQ_V	encoding.h	1495;"	d
MATCH_VAMOADDW_V	encoding.h	1459;"	d
MATCH_VAMOANDD_V	encoding.h	1481;"	d
MATCH_VAMOANDQ_V	encoding.h	1499;"	d
MATCH_VAMOANDW_V	encoding.h	1463;"	d
MATCH_VAMOMAXD_V	encoding.h	1487;"	d
MATCH_VAMOMAXQ_V	encoding.h	1505;"	d
MATCH_VAMOMAXUD_V	encoding.h	1491;"	d
MATCH_VAMOMAXUQ_V	encoding.h	1509;"	d
MATCH_VAMOMAXUW_V	encoding.h	1473;"	d
MATCH_VAMOMAXW_V	encoding.h	1469;"	d
MATCH_VAMOMIND_V	encoding.h	1485;"	d
MATCH_VAMOMINQ_V	encoding.h	1503;"	d
MATCH_VAMOMINUD_V	encoding.h	1489;"	d
MATCH_VAMOMINUQ_V	encoding.h	1507;"	d
MATCH_VAMOMINUW_V	encoding.h	1471;"	d
MATCH_VAMOMINW_V	encoding.h	1467;"	d
MATCH_VAMOORD_V	encoding.h	1483;"	d
MATCH_VAMOORQ_V	encoding.h	1501;"	d
MATCH_VAMOORW_V	encoding.h	1465;"	d
MATCH_VAMOSWAPD_V	encoding.h	1475;"	d
MATCH_VAMOSWAPQ_V	encoding.h	1493;"	d
MATCH_VAMOSWAPW_V	encoding.h	1457;"	d
MATCH_VAMOXORD_V	encoding.h	1479;"	d
MATCH_VAMOXORQ_V	encoding.h	1497;"	d
MATCH_VAMOXORW_V	encoding.h	1461;"	d
MATCH_VAND_VI	encoding.h	1225;"	d
MATCH_VAND_VV	encoding.h	1147;"	d
MATCH_VAND_VX	encoding.h	1059;"	d
MATCH_VASUBU_VV	encoding.h	1299;"	d
MATCH_VASUBU_VX	encoding.h	1393;"	d
MATCH_VASUB_VV	encoding.h	1301;"	d
MATCH_VASUB_VX	encoding.h	1395;"	d
MATCH_VCOMPRESS_VM	encoding.h	1305;"	d
MATCH_VDIVU_VV	encoding.h	1337;"	d
MATCH_VDIVU_VX	encoding.h	1403;"	d
MATCH_VDIV_VV	encoding.h	1339;"	d
MATCH_VDIV_VX	encoding.h	1405;"	d
MATCH_VDOTU_VV	encoding.h	1211;"	d
MATCH_VDOT_VV	encoding.h	1213;"	d
MATCH_VFADD_VF	encoding.h	861;"	d
MATCH_VFADD_VV	encoding.h	935;"	d
MATCH_VFCLASS_V	encoding.h	1019;"	d
MATCH_VFCVT_F_XU_V	encoding.h	991;"	d
MATCH_VFCVT_F_X_V	encoding.h	993;"	d
MATCH_VFCVT_XU_F_V	encoding.h	987;"	d
MATCH_VFCVT_X_F_V	encoding.h	989;"	d
MATCH_VFDIV_VF	encoding.h	893;"	d
MATCH_VFDIV_VV	encoding.h	967;"	d
MATCH_VFDOT_VV	encoding.h	1035;"	d
MATCH_VFIRST_M	encoding.h	1335;"	d
MATCH_VFMACC_VF	encoding.h	909;"	d
MATCH_VFMACC_VV	encoding.h	979;"	d
MATCH_VFMADD_VF	encoding.h	901;"	d
MATCH_VFMADD_VV	encoding.h	971;"	d
MATCH_VFMAX_VF	encoding.h	867;"	d
MATCH_VFMAX_VV	encoding.h	947;"	d
MATCH_VFMERGE_VFM	encoding.h	877;"	d
MATCH_VFMIN_VF	encoding.h	865;"	d
MATCH_VFMIN_VV	encoding.h	943;"	d
MATCH_VFMSAC_VF	encoding.h	913;"	d
MATCH_VFMSAC_VV	encoding.h	983;"	d
MATCH_VFMSUB_VF	encoding.h	905;"	d
MATCH_VFMSUB_VV	encoding.h	975;"	d
MATCH_VFMUL_VF	encoding.h	897;"	d
MATCH_VFMUL_VV	encoding.h	969;"	d
MATCH_VFMV_F_S	encoding.h	957;"	d
MATCH_VFMV_S_F	encoding.h	875;"	d
MATCH_VFMV_V_F	encoding.h	879;"	d
MATCH_VFNCVT_F_F_V	encoding.h	1013;"	d
MATCH_VFNCVT_F_XU_V	encoding.h	1009;"	d
MATCH_VFNCVT_F_X_V	encoding.h	1011;"	d
MATCH_VFNCVT_ROD_F_F_V	encoding.h	1015;"	d
MATCH_VFNCVT_XU_F_V	encoding.h	1005;"	d
MATCH_VFNCVT_X_F_V	encoding.h	1007;"	d
MATCH_VFNMACC_VF	encoding.h	911;"	d
MATCH_VFNMACC_VV	encoding.h	981;"	d
MATCH_VFNMADD_VF	encoding.h	903;"	d
MATCH_VFNMADD_VV	encoding.h	973;"	d
MATCH_VFNMSAC_VF	encoding.h	915;"	d
MATCH_VFNMSAC_VV	encoding.h	985;"	d
MATCH_VFNMSUB_VF	encoding.h	907;"	d
MATCH_VFNMSUB_VV	encoding.h	977;"	d
MATCH_VFRDIV_VF	encoding.h	895;"	d
MATCH_VFREDMAX_VS	encoding.h	949;"	d
MATCH_VFREDMIN_VS	encoding.h	945;"	d
MATCH_VFREDOSUM_VS	encoding.h	941;"	d
MATCH_VFREDSUM_VS	encoding.h	937;"	d
MATCH_VFRSUB_VF	encoding.h	899;"	d
MATCH_VFSGNJN_VF	encoding.h	871;"	d
MATCH_VFSGNJN_VV	encoding.h	953;"	d
MATCH_VFSGNJX_VF	encoding.h	873;"	d
MATCH_VFSGNJX_VV	encoding.h	955;"	d
MATCH_VFSGNJ_VF	encoding.h	869;"	d
MATCH_VFSGNJ_VV	encoding.h	951;"	d
MATCH_VFSQRT_V	encoding.h	1017;"	d
MATCH_VFSUB_VF	encoding.h	863;"	d
MATCH_VFSUB_VV	encoding.h	939;"	d
MATCH_VFWADD_VF	encoding.h	917;"	d
MATCH_VFWADD_VV	encoding.h	1021;"	d
MATCH_VFWADD_WF	encoding.h	921;"	d
MATCH_VFWADD_WV	encoding.h	1029;"	d
MATCH_VFWCVT_F_F_V	encoding.h	1003;"	d
MATCH_VFWCVT_F_XU_V	encoding.h	999;"	d
MATCH_VFWCVT_F_X_V	encoding.h	1001;"	d
MATCH_VFWCVT_XU_F_V	encoding.h	995;"	d
MATCH_VFWCVT_X_F_V	encoding.h	997;"	d
MATCH_VFWMACC_VF	encoding.h	927;"	d
MATCH_VFWMACC_VV	encoding.h	1037;"	d
MATCH_VFWMSAC_VF	encoding.h	931;"	d
MATCH_VFWMSAC_VV	encoding.h	1041;"	d
MATCH_VFWMUL_VF	encoding.h	925;"	d
MATCH_VFWMUL_VV	encoding.h	1033;"	d
MATCH_VFWNMACC_VF	encoding.h	929;"	d
MATCH_VFWNMACC_VV	encoding.h	1039;"	d
MATCH_VFWNMSAC_VF	encoding.h	933;"	d
MATCH_VFWNMSAC_VV	encoding.h	1043;"	d
MATCH_VFWREDOSUM_VS	encoding.h	1027;"	d
MATCH_VFWREDSUM_VS	encoding.h	1023;"	d
MATCH_VFWSUB_VF	encoding.h	919;"	d
MATCH_VFWSUB_VV	encoding.h	1025;"	d
MATCH_VFWSUB_WF	encoding.h	923;"	d
MATCH_VFWSUB_WV	encoding.h	1031;"	d
MATCH_VID_V	encoding.h	1331;"	d
MATCH_VIOTA_M	encoding.h	1329;"	d
MATCH_VLBFF_V	encoding.h	847;"	d
MATCH_VLBUFF_V	encoding.h	855;"	d
MATCH_VLBU_V	encoding.h	781;"	d
MATCH_VLB_V	encoding.h	773;"	d
MATCH_VLEFF_V	encoding.h	853;"	d
MATCH_VLE_V	encoding.h	779;"	d
MATCH_VLHFF_V	encoding.h	849;"	d
MATCH_VLHUFF_V	encoding.h	857;"	d
MATCH_VLHU_V	encoding.h	783;"	d
MATCH_VLH_V	encoding.h	775;"	d
MATCH_VLSBU_V	encoding.h	803;"	d
MATCH_VLSB_V	encoding.h	795;"	d
MATCH_VLSE_V	encoding.h	801;"	d
MATCH_VLSHU_V	encoding.h	805;"	d
MATCH_VLSH_V	encoding.h	797;"	d
MATCH_VLSWU_V	encoding.h	807;"	d
MATCH_VLSW_V	encoding.h	799;"	d
MATCH_VLWFF_V	encoding.h	851;"	d
MATCH_VLWUFF_V	encoding.h	859;"	d
MATCH_VLWU_V	encoding.h	785;"	d
MATCH_VLW_V	encoding.h	777;"	d
MATCH_VLXBU_V	encoding.h	825;"	d
MATCH_VLXB_V	encoding.h	817;"	d
MATCH_VLXE_V	encoding.h	823;"	d
MATCH_VLXHU_V	encoding.h	827;"	d
MATCH_VLXH_V	encoding.h	819;"	d
MATCH_VLXWU_V	encoding.h	829;"	d
MATCH_VLXW_V	encoding.h	821;"	d
MATCH_VMACC_VV	encoding.h	1357;"	d
MATCH_VMACC_VX	encoding.h	1423;"	d
MATCH_VMADC_VIM	encoding.h	1239;"	d
MATCH_VMADC_VVM	encoding.h	1157;"	d
MATCH_VMADC_VXM	encoding.h	1073;"	d
MATCH_VMADD_VV	encoding.h	1353;"	d
MATCH_VMADD_VX	encoding.h	1419;"	d
MATCH_VMANDNOT_MM	encoding.h	1307;"	d
MATCH_VMAND_MM	encoding.h	1309;"	d
MATCH_VMAXU_VV	encoding.h	1143;"	d
MATCH_VMAXU_VX	encoding.h	1055;"	d
MATCH_VMAX_VV	encoding.h	1145;"	d
MATCH_VMAX_VX	encoding.h	1057;"	d
MATCH_VMERGE_VIM	encoding.h	1241;"	d
MATCH_VMERGE_VVM	encoding.h	1163;"	d
MATCH_VMERGE_VXM	encoding.h	1079;"	d
MATCH_VMFEQ_VF	encoding.h	881;"	d
MATCH_VMFEQ_VV	encoding.h	959;"	d
MATCH_VMFGE_VF	encoding.h	891;"	d
MATCH_VMFGT_VF	encoding.h	889;"	d
MATCH_VMFLE_VF	encoding.h	883;"	d
MATCH_VMFLE_VV	encoding.h	961;"	d
MATCH_VMFLT_VF	encoding.h	885;"	d
MATCH_VMFLT_VV	encoding.h	963;"	d
MATCH_VMFNE_VF	encoding.h	887;"	d
MATCH_VMFNE_VV	encoding.h	965;"	d
MATCH_VMINU_VV	encoding.h	1139;"	d
MATCH_VMINU_VX	encoding.h	1051;"	d
MATCH_VMIN_VV	encoding.h	1141;"	d
MATCH_VMIN_VX	encoding.h	1053;"	d
MATCH_VMNAND_MM	encoding.h	1317;"	d
MATCH_VMNOR_MM	encoding.h	1319;"	d
MATCH_VMORNOT_MM	encoding.h	1315;"	d
MATCH_VMOR_MM	encoding.h	1311;"	d
MATCH_VMSBC_VVM	encoding.h	1161;"	d
MATCH_VMSBC_VXM	encoding.h	1077;"	d
MATCH_VMSBF_M	encoding.h	1323;"	d
MATCH_VMSEQ_VI	encoding.h	1245;"	d
MATCH_VMSEQ_VV	encoding.h	1167;"	d
MATCH_VMSEQ_VX	encoding.h	1083;"	d
MATCH_VMSGTU_VI	encoding.h	1253;"	d
MATCH_VMSGTU_VX	encoding.h	1095;"	d
MATCH_VMSGT_VI	encoding.h	1255;"	d
MATCH_VMSGT_VX	encoding.h	1097;"	d
MATCH_VMSIF_M	encoding.h	1327;"	d
MATCH_VMSLEU_VI	encoding.h	1249;"	d
MATCH_VMSLEU_VV	encoding.h	1175;"	d
MATCH_VMSLEU_VX	encoding.h	1091;"	d
MATCH_VMSLE_VI	encoding.h	1251;"	d
MATCH_VMSLE_VV	encoding.h	1177;"	d
MATCH_VMSLE_VX	encoding.h	1093;"	d
MATCH_VMSLTU_VV	encoding.h	1171;"	d
MATCH_VMSLTU_VX	encoding.h	1087;"	d
MATCH_VMSLT_VV	encoding.h	1173;"	d
MATCH_VMSLT_VX	encoding.h	1089;"	d
MATCH_VMSNE_VI	encoding.h	1247;"	d
MATCH_VMSNE_VV	encoding.h	1169;"	d
MATCH_VMSNE_VX	encoding.h	1085;"	d
MATCH_VMSOF_M	encoding.h	1325;"	d
MATCH_VMULHSU_VV	encoding.h	1349;"	d
MATCH_VMULHSU_VX	encoding.h	1415;"	d
MATCH_VMULHU_VV	encoding.h	1345;"	d
MATCH_VMULHU_VX	encoding.h	1411;"	d
MATCH_VMULH_VV	encoding.h	1351;"	d
MATCH_VMULH_VX	encoding.h	1417;"	d
MATCH_VMUL_VV	encoding.h	1347;"	d
MATCH_VMUL_VX	encoding.h	1413;"	d
MATCH_VMV_S_X	encoding.h	1397;"	d
MATCH_VMV_V_I	encoding.h	1243;"	d
MATCH_VMV_V_V	encoding.h	1165;"	d
MATCH_VMV_V_X	encoding.h	1081;"	d
MATCH_VMV_X_S	encoding.h	1303;"	d
MATCH_VMXNOR_MM	encoding.h	1321;"	d
MATCH_VMXOR_MM	encoding.h	1313;"	d
MATCH_VNCLIPU_VI	encoding.h	1275;"	d
MATCH_VNCLIPU_VV	encoding.h	1203;"	d
MATCH_VNCLIPU_VX	encoding.h	1123;"	d
MATCH_VNCLIP_VI	encoding.h	1277;"	d
MATCH_VNCLIP_VV	encoding.h	1205;"	d
MATCH_VNCLIP_VX	encoding.h	1125;"	d
MATCH_VNMSAC_VV	encoding.h	1359;"	d
MATCH_VNMSAC_VX	encoding.h	1425;"	d
MATCH_VNMSUB_VV	encoding.h	1355;"	d
MATCH_VNMSUB_VX	encoding.h	1421;"	d
MATCH_VNSRA_VI	encoding.h	1273;"	d
MATCH_VNSRA_VV	encoding.h	1201;"	d
MATCH_VNSRA_VX	encoding.h	1121;"	d
MATCH_VNSRL_VI	encoding.h	1271;"	d
MATCH_VNSRL_VV	encoding.h	1199;"	d
MATCH_VNSRL_VX	encoding.h	1119;"	d
MATCH_VOR_VI	encoding.h	1227;"	d
MATCH_VOR_VV	encoding.h	1149;"	d
MATCH_VOR_VX	encoding.h	1061;"	d
MATCH_VPOPC_M	encoding.h	1333;"	d
MATCH_VREDAND_VS	encoding.h	1281;"	d
MATCH_VREDMAXU_VS	encoding.h	1291;"	d
MATCH_VREDMAX_VS	encoding.h	1293;"	d
MATCH_VREDMINU_VS	encoding.h	1287;"	d
MATCH_VREDMIN_VS	encoding.h	1289;"	d
MATCH_VREDOR_VS	encoding.h	1283;"	d
MATCH_VREDSUM_VS	encoding.h	1279;"	d
MATCH_VREDXOR_VS	encoding.h	1285;"	d
MATCH_VREMU_VV	encoding.h	1341;"	d
MATCH_VREMU_VX	encoding.h	1407;"	d
MATCH_VREM_VV	encoding.h	1343;"	d
MATCH_VREM_VX	encoding.h	1409;"	d
MATCH_VRGATHER_VI	encoding.h	1231;"	d
MATCH_VRGATHER_VV	encoding.h	1153;"	d
MATCH_VRGATHER_VX	encoding.h	1065;"	d
MATCH_VRSUB_VI	encoding.h	1223;"	d
MATCH_VRSUB_VX	encoding.h	1049;"	d
MATCH_VSADDU_VI	encoding.h	1257;"	d
MATCH_VSADDU_VV	encoding.h	1179;"	d
MATCH_VSADDU_VX	encoding.h	1099;"	d
MATCH_VSADD_VI	encoding.h	1259;"	d
MATCH_VSADD_VV	encoding.h	1181;"	d
MATCH_VSADD_VX	encoding.h	1101;"	d
MATCH_VSBC_VVM	encoding.h	1159;"	d
MATCH_VSBC_VXM	encoding.h	1075;"	d
MATCH_VSB_V	encoding.h	787;"	d
MATCH_VSETVL	encoding.h	771;"	d
MATCH_VSETVLI	encoding.h	769;"	d
MATCH_VSE_V	encoding.h	793;"	d
MATCH_VSH_V	encoding.h	789;"	d
MATCH_VSLIDE1DOWN_VX	encoding.h	1401;"	d
MATCH_VSLIDE1UP_VX	encoding.h	1399;"	d
MATCH_VSLIDEDOWN_VI	encoding.h	1235;"	d
MATCH_VSLIDEDOWN_VX	encoding.h	1069;"	d
MATCH_VSLIDEUP_VI	encoding.h	1233;"	d
MATCH_VSLIDEUP_VX	encoding.h	1067;"	d
MATCH_VSLL_VI	encoding.h	1261;"	d
MATCH_VSLL_VV	encoding.h	1187;"	d
MATCH_VSLL_VX	encoding.h	1107;"	d
MATCH_VSMUL_VV	encoding.h	1189;"	d
MATCH_VSMUL_VX	encoding.h	1109;"	d
MATCH_VSRA_VI	encoding.h	1265;"	d
MATCH_VSRA_VV	encoding.h	1193;"	d
MATCH_VSRA_VX	encoding.h	1113;"	d
MATCH_VSRL_VI	encoding.h	1263;"	d
MATCH_VSRL_VV	encoding.h	1191;"	d
MATCH_VSRL_VX	encoding.h	1111;"	d
MATCH_VSSB_V	encoding.h	809;"	d
MATCH_VSSE_V	encoding.h	815;"	d
MATCH_VSSH_V	encoding.h	811;"	d
MATCH_VSSRA_VI	encoding.h	1269;"	d
MATCH_VSSRA_VV	encoding.h	1197;"	d
MATCH_VSSRA_VX	encoding.h	1117;"	d
MATCH_VSSRL_VI	encoding.h	1267;"	d
MATCH_VSSRL_VV	encoding.h	1195;"	d
MATCH_VSSRL_VX	encoding.h	1115;"	d
MATCH_VSSUBU_VV	encoding.h	1183;"	d
MATCH_VSSUBU_VX	encoding.h	1103;"	d
MATCH_VSSUB_VV	encoding.h	1185;"	d
MATCH_VSSUB_VX	encoding.h	1105;"	d
MATCH_VSSW_V	encoding.h	813;"	d
MATCH_VSUB_VV	encoding.h	1137;"	d
MATCH_VSUB_VX	encoding.h	1047;"	d
MATCH_VSUXB_V	encoding.h	839;"	d
MATCH_VSUXE_V	encoding.h	845;"	d
MATCH_VSUXH_V	encoding.h	841;"	d
MATCH_VSUXW_V	encoding.h	843;"	d
MATCH_VSW_V	encoding.h	791;"	d
MATCH_VSXB_V	encoding.h	831;"	d
MATCH_VSXE_V	encoding.h	837;"	d
MATCH_VSXH_V	encoding.h	833;"	d
MATCH_VSXW_V	encoding.h	835;"	d
MATCH_VWADDU_VV	encoding.h	1361;"	d
MATCH_VWADDU_VX	encoding.h	1427;"	d
MATCH_VWADDU_WV	encoding.h	1369;"	d
MATCH_VWADDU_WX	encoding.h	1435;"	d
MATCH_VWADD_VV	encoding.h	1363;"	d
MATCH_VWADD_VX	encoding.h	1429;"	d
MATCH_VWADD_WV	encoding.h	1371;"	d
MATCH_VWADD_WX	encoding.h	1437;"	d
MATCH_VWMACCSU_VV	encoding.h	1387;"	d
MATCH_VWMACCSU_VX	encoding.h	1455;"	d
MATCH_VWMACCUS_VX	encoding.h	1453;"	d
MATCH_VWMACCU_VV	encoding.h	1383;"	d
MATCH_VWMACCU_VX	encoding.h	1449;"	d
MATCH_VWMACC_VV	encoding.h	1385;"	d
MATCH_VWMACC_VX	encoding.h	1451;"	d
MATCH_VWMULSU_VV	encoding.h	1379;"	d
MATCH_VWMULSU_VX	encoding.h	1445;"	d
MATCH_VWMULU_VV	encoding.h	1377;"	d
MATCH_VWMULU_VX	encoding.h	1443;"	d
MATCH_VWMUL_VV	encoding.h	1381;"	d
MATCH_VWMUL_VX	encoding.h	1447;"	d
MATCH_VWREDSUMU_VS	encoding.h	1207;"	d
MATCH_VWREDSUM_VS	encoding.h	1209;"	d
MATCH_VWSMACCSU_VV	encoding.h	1219;"	d
MATCH_VWSMACCSU_VX	encoding.h	1133;"	d
MATCH_VWSMACCUS_VX	encoding.h	1131;"	d
MATCH_VWSMACCU_VV	encoding.h	1215;"	d
MATCH_VWSMACCU_VX	encoding.h	1127;"	d
MATCH_VWSMACC_VV	encoding.h	1217;"	d
MATCH_VWSMACC_VX	encoding.h	1129;"	d
MATCH_VWSUBU_VV	encoding.h	1365;"	d
MATCH_VWSUBU_VX	encoding.h	1431;"	d
MATCH_VWSUBU_WV	encoding.h	1373;"	d
MATCH_VWSUBU_WX	encoding.h	1439;"	d
MATCH_VWSUB_VV	encoding.h	1367;"	d
MATCH_VWSUB_VX	encoding.h	1433;"	d
MATCH_VWSUB_WV	encoding.h	1375;"	d
MATCH_VWSUB_WX	encoding.h	1441;"	d
MATCH_VXOR_VI	encoding.h	1229;"	d
MATCH_VXOR_VV	encoding.h	1151;"	d
MATCH_VXOR_VX	encoding.h	1063;"	d
MATCH_WFI	encoding.h	413;"	d
MATCH_XOR	encoding.h	275;"	d
MATCH_XORI	encoding.h	255;"	d
MAX_INSN_LENGTH	decode.h	65;"	d
MAX_PADDR_BITS	mmu.h	25;"	d
MCONTROL_ACTION	encoding.h	71;"	d
MCONTROL_ACTION_DEBUG_EXCEPTION	encoding.h	85;"	d
MCONTROL_ACTION_DEBUG_MODE	encoding.h	86;"	d
MCONTROL_ACTION_TRACE_EMIT	encoding.h	89;"	d
MCONTROL_ACTION_TRACE_START	encoding.h	87;"	d
MCONTROL_ACTION_TRACE_STOP	encoding.h	88;"	d
MCONTROL_CHAIN	encoding.h	72;"	d
MCONTROL_DMODE	encoding.h	66;"	d
MCONTROL_EXECUTE	encoding.h	78;"	d
MCONTROL_H	encoding.h	75;"	d
MCONTROL_LOAD	encoding.h	80;"	d
MCONTROL_M	encoding.h	74;"	d
MCONTROL_MASKMAX	encoding.h	67;"	d
MCONTROL_MATCH	encoding.h	73;"	d
MCONTROL_MATCH_EQUAL	encoding.h	91;"	d
MCONTROL_MATCH_GE	encoding.h	93;"	d
MCONTROL_MATCH_LT	encoding.h	94;"	d
MCONTROL_MATCH_MASK_HIGH	encoding.h	96;"	d
MCONTROL_MATCH_MASK_LOW	encoding.h	95;"	d
MCONTROL_MATCH_NAPOT	encoding.h	92;"	d
MCONTROL_S	encoding.h	76;"	d
MCONTROL_SELECT	encoding.h	69;"	d
MCONTROL_STORE	encoding.h	79;"	d
MCONTROL_TIMING	encoding.h	70;"	d
MCONTROL_TYPE	encoding.h	65;"	d
MCONTROL_TYPE_MATCH	encoding.h	83;"	d
MCONTROL_TYPE_NONE	encoding.h	82;"	d
MCONTROL_U	encoding.h	77;"	d
MIP_HEIP	encoding.h	105;"	d
MIP_HSIP	encoding.h	99;"	d
MIP_HTIP	encoding.h	102;"	d
MIP_MEIP	encoding.h	106;"	d
MIP_MSIP	encoding.h	100;"	d
MIP_MTIP	encoding.h	103;"	d
MIP_SEIP	encoding.h	104;"	d
MIP_SSIP	encoding.h	98;"	d
MIP_STIP	encoding.h	101;"	d
MMR_OFFSETS	buffer_controller.h	/^} MMR_OFFSETS;$/;"	t	typeref:enum:__anon1
MMU	decode.h	141;"	d
MSIP_BASE	clint.cc	19;"	d	file:
MSTATUS32_SD	encoding.h	25;"	d
MSTATUS64_SD	encoding.h	28;"	d
MSTATUS_FS	encoding.h	17;"	d
MSTATUS_HIE	encoding.h	8;"	d
MSTATUS_HPIE	encoding.h	12;"	d
MSTATUS_HPP	encoding.h	15;"	d
MSTATUS_MIE	encoding.h	9;"	d
MSTATUS_MPIE	encoding.h	13;"	d
MSTATUS_MPP	encoding.h	16;"	d
MSTATUS_MPRV	encoding.h	19;"	d
MSTATUS_MXR	encoding.h	21;"	d
MSTATUS_SD	encoding.h	177;"	d
MSTATUS_SD	encoding.h	182;"	d
MSTATUS_SIE	encoding.h	7;"	d
MSTATUS_SPIE	encoding.h	11;"	d
MSTATUS_SPP	encoding.h	14;"	d
MSTATUS_SUM	encoding.h	20;"	d
MSTATUS_SXL	encoding.h	27;"	d
MSTATUS_TSR	encoding.h	24;"	d
MSTATUS_TVM	encoding.h	22;"	d
MSTATUS_TW	encoding.h	23;"	d
MSTATUS_UIE	encoding.h	6;"	d
MSTATUS_UPIE	encoding.h	10;"	d
MSTATUS_UXL	encoding.h	26;"	d
MSTATUS_XS	encoding.h	18;"	d
MTIMECMP_BASE	clint.cc	20;"	d	file:
MTIME_BASE	clint.cc	21;"	d	file:
M_COLS	prefetcher.h	/^	M_COLS = 0,$/;"	e	enum:__anon15
M_VALS	prefetcher.h	/^	M_VALS = 4,$/;"	e	enum:__anon15
Mapping	memdelay.h	/^    enum class Mapping{$/;"	c	class:memdelay_t
MemSize	memdelay.h	/^    enum class MemSize{$/;"	c	class:memdelay_t
NCSR	decode.h	/^const int NCSR = 4096;$/;"	v
NFPR	decode.h	/^const int NFPR = 32;$/;"	v
NOINLINE	common.h	9;"	d
NOP	memdelay.h	/^        NOP, ACT, PRE,$/;"	m	class:memdelay_t::Command
NVPR	decode.h	/^const int NVPR = 32;$/;"	v
NXPR	decode.h	/^const int NXPR = 32;$/;"	v
OFFSET_BID	buffer_controller.h	/^    OFFSET_BID=32, \/\/ Buffer ID$/;"	e	enum:__anon1
OFFSET_BITVECTOR	buffer_controller.h	/^    OFFSET_BITVECTOR=28, \/\/ Bitvector address$/;"	e	enum:__anon1
OFFSET_COLS	buffer_controller.h	/^    OFFSET_COLS = 16, \/\/ CSR cols address$/;"	e	enum:__anon1
OFFSET_EC	buffer_controller.h	/^    OFFSET_EC = 0, \/\/ expand or compress. 0 -- expand, 1 -- do not expand$/;"	e	enum:__anon1
OFFSET_N	buffer_controller.h	/^    OFFSET_N = 8,$/;"	e	enum:__anon1
OFFSET_NNZ	buffer_controller.h	/^	OFFSET_NNZ=36,$/;"	e	enum:__anon1
OFFSET_ROWS	buffer_controller.h	/^    OFFSET_ROWS = 12, \/\/ CSR rows address$/;"	e	enum:__anon1
OFFSET_START	buffer_controller.h	/^    OFFSET_START=48 \/\/ Start bit$/;"	e	enum:__anon1
OFFSET_STORAGE_TYPE	buffer_controller.h	/^    OFFSET_STORAGE_TYPE = 4, \/\/ CSR = 0, Bit vector = 1, run-length =2, and so on$/;"	e	enum:__anon1
OFFSET_V	buffer_controller.h	/^    OFFSET_V = 20, \/\/ V address$/;"	e	enum:__anon1
OFFSET_VALS	buffer_controller.h	/^    OFFSET_VALS=24, \/\/ CSR vals address$/;"	e	enum:__anon1
OPCODE_CACHE_SIZE	processor.h	/^  static const size_t OPCODE_CACHE_SIZE = 8191;$/;"	m	class:processor_t
OPERATION_EXECUTE	processor.h	/^  OPERATION_EXECUTE,$/;"	e	enum:__anon21
OPERATION_LOAD	processor.h	/^  OPERATION_LOAD,$/;"	e	enum:__anon21
OPERATION_STORE	processor.h	/^  OPERATION_STORE,$/;"	e	enum:__anon21
OP_EXPAND	buffer_controller.h	/^typedef enum {OP_EXPAND=0, OP_NO_EXPAND=1} operation_t;$/;"	e	enum:__anon2
OP_NO_EXPAND	buffer_controller.h	/^typedef enum {OP_EXPAND=0, OP_NO_EXPAND=1} operation_t;$/;"	e	enum:__anon2
P	decode.h	143;"	d
PAUSE_DR	jtag_dtm.h	/^  PAUSE_DR,$/;"	e	enum:__anon13
PAUSE_IR	jtag_dtm.h	/^  PAUSE_IR,$/;"	e	enum:__anon13
PC_ALIGN	decode.h	66;"	d
PC_SERIALIZE_AFTER	decode.h	247;"	d
PC_SERIALIZE_BEFORE	decode.h	246;"	d
PC_SERIALIZE_WFI	decode.h	248;"	d
PGMASK	mmu.h	/^const reg_t PGMASK = ~(PGSIZE-1);$/;"	v
PGSHIFT	mmu.h	22;"	d
PGSIZE	mmu.h	/^const reg_t PGSIZE = 1 << PGSHIFT;$/;"	v
PMP_A	encoding.h	133;"	d
PMP_L	encoding.h	134;"	d
PMP_NA4	encoding.h	138;"	d
PMP_NAPOT	encoding.h	139;"	d
PMP_R	encoding.h	130;"	d
PMP_SHIFT	encoding.h	135;"	d
PMP_TOR	encoding.h	137;"	d
PMP_W	encoding.h	131;"	d
PMP_X	encoding.h	132;"	d
PRE	memdelay.h	/^        NOP, ACT, PRE,$/;"	m	class:memdelay_t::Command
PREFETCH_BASE	processor.h	/^  unsigned long PREFETCH_BASE;$/;"	m	class:processor_t
PREFETCH_RANGE	processor.h	/^  unsigned long PREFETCH_RANGE;$/;"	m	class:processor_t
PRV_H	encoding.h	113;"	d
PRV_M	encoding.h	114;"	d
PRV_M	insns/mret.h	/^require_privilege(PRV_M);$/;"	v
PRV_S	encoding.h	112;"	d
PRV_S	insns/sfence_vma.h	/^require_privilege(get_field(STATE.mstatus, MSTATUS_TVM) ? PRV_M : PRV_S);$/;"	v
PRV_S	insns/sret.h	/^require_privilege(get_field(STATE.mstatus, MSTATUS_TSR) ? PRV_M : PRV_S);$/;"	v
PRV_S	insns/wfi.h	/^require_privilege(get_field(STATE.mstatus, MSTATUS_TW) ? PRV_M : PRV_S);$/;"	v
PRV_U	encoding.h	111;"	d
PTE_A	encoding.h	166;"	d
PTE_D	encoding.h	167;"	d
PTE_G	encoding.h	165;"	d
PTE_PPN_SHIFT	encoding.h	170;"	d
PTE_R	encoding.h	161;"	d
PTE_SOFT	encoding.h	168;"	d
PTE_TABLE	encoding.h	172;"	d
PTE_U	encoding.h	164;"	d
PTE_V	encoding.h	160;"	d
PTE_W	encoding.h	162;"	d
PTE_X	encoding.h	163;"	d
RD	decode.h	147;"	d
RDN	processor.h	/^  RDN,$/;"	e	enum:VRM
READ	flashmodel.h	/^        READ, WRITE\/\/, PREF$/;"	m	class:flashmodel_t::Type
READ	memdelay.h	/^        READ,  WRITE$/;"	m	class:memdelay_t::Command
READ	memdelay.h	/^        READ, WRITE\/\/, PREF$/;"	m	class:memdelay_t::Type
READ_FREG	decode.h	146;"	d
READ_REG	decode.h	145;"	d
REDUCTION_LOOP	decode.h	770;"	d
REDUCTION_ULOOP	decode.h	801;"	d
REGISTER_EXTENSION	extension.h	33;"	d
REGISTER_INSN	processor.h	521;"	d
REMOTE_BITBANG_H	remote_bitbang.h	2;"	d
RISCV_CSR_ENCODING_H	encoding.h	4;"	d
RISCV_ENCODING_H	encoding.h	226;"	d
RISCV_PGLEVEL_BITS	encoding.h	179;"	d
RISCV_PGLEVEL_BITS	encoding.h	184;"	d
RISCV_PGSHIFT	encoding.h	187;"	d
RISCV_PGSIZE	encoding.h	188;"	d
RM	decode.h	193;"	d
RNE	processor.h	/^  RNE,$/;"	e	enum:VRM
RNU	processor.h	/^  RNU = 0,$/;"	e	enum:VRM
ROD	processor.h	/^  ROD,$/;"	e	enum:VRM
RS1	decode.h	148;"	d
RS2	decode.h	149;"	d
RS2	insns/and.h	/^WRITE_RD(RS1 & RS2);$/;"	v
RS3	decode.h	150;"	d
RUN_TEST_IDLE	jtag_dtm.h	/^  RUN_TEST_IDLE,$/;"	e	enum:__anon13
RVC_FRS2	decode.h	177;"	d
RVC_FRS2S	decode.h	178;"	d
RVC_RS1	decode.h	173;"	d
RVC_RS1S	decode.h	175;"	d
RVC_RS2	decode.h	174;"	d
RVC_RS2	insns/c_mv.h	/^WRITE_RD(RVC_RS2);$/;"	v
RVC_RS2S	decode.h	176;"	d
RVC_RS2S	insns/c_and.h	/^WRITE_RVC_RS1S(RVC_RS1S & RVC_RS2S);$/;"	v
RVC_SP	decode.h	179;"	d
Request	flashmodel.h	/^	struct Request{$/;"	s	class:flashmodel_t
Request	memdelay.h	/^    struct Request{$/;"	s	class:memdelay_t
RoBaCoCh	memdelay.h	/^        RoBaCoCh,$/;"	m	class:memdelay_t::Mapping
S0	opcodes.h	5;"	d
S1	opcodes.h	6;"	d
SATP32_ASID	encoding.h	117;"	d
SATP32_MODE	encoding.h	116;"	d
SATP32_PPN	encoding.h	118;"	d
SATP64_ASID	encoding.h	120;"	d
SATP64_MODE	encoding.h	119;"	d
SATP64_PPN	encoding.h	121;"	d
SATP_MODE	encoding.h	180;"	d
SATP_MODE	encoding.h	185;"	d
SATP_MODE_OFF	encoding.h	123;"	d
SATP_MODE_SV32	encoding.h	124;"	d
SATP_MODE_SV39	encoding.h	125;"	d
SATP_MODE_SV48	encoding.h	126;"	d
SATP_MODE_SV57	encoding.h	127;"	d
SATP_MODE_SV64	encoding.h	128;"	d
SELECT_DR_SCAN	jtag_dtm.h	/^  SELECT_DR_SCAN,$/;"	e	enum:__anon13
SELECT_IR_SCAN	jtag_dtm.h	/^  SELECT_IR_SCAN,$/;"	e	enum:__anon13
SHAMT	decode.h	190;"	d
SHIFT_DR	jtag_dtm.h	/^  SHIFT_DR,$/;"	e	enum:__anon13
SHIFT_IR	jtag_dtm.h	/^  SHIFT_IR,$/;"	e	enum:__anon13
SHORTNAME	debug_defines.h	1577;"	d
SHORTNAME_FIELD	debug_defines.h	1583;"	d
SHORTNAME_FIELD_LENGTH	debug_defines.h	1582;"	d
SHORTNAME_FIELD_OFFSET	debug_defines.h	1581;"	d
SIP_SSIP	encoding.h	108;"	d
SIP_STIP	encoding.h	109;"	d
SLEN	processor.h	/^    reg_t ELEN, VLEN, SLEN;$/;"	m	class:vectorUnit_t
SSTATUS32_SD	encoding.h	39;"	d
SSTATUS64_SD	encoding.h	41;"	d
SSTATUS_FS	encoding.h	35;"	d
SSTATUS_MXR	encoding.h	38;"	d
SSTATUS_SD	encoding.h	178;"	d
SSTATUS_SD	encoding.h	183;"	d
SSTATUS_SIE	encoding.h	31;"	d
SSTATUS_SPIE	encoding.h	33;"	d
SSTATUS_SPP	encoding.h	34;"	d
SSTATUS_SUM	encoding.h	37;"	d
SSTATUS_UIE	encoding.h	30;"	d
SSTATUS_UPIE	encoding.h	32;"	d
SSTATUS_UXL	encoding.h	40;"	d
SSTATUS_XS	encoding.h	36;"	d
STATE	decode.h	142;"	d
STATE	processor.cc	21;"	d	file:
STATE	processor.cc	22;"	d	file:
STEP_NONE	processor.h	/^      STEP_NONE,$/;"	e	enum:state_t::__anon20
STEP_STEPPED	processor.h	/^      STEP_STEPPED$/;"	e	enum:state_t::__anon20
STEP_STEPPING	processor.h	/^      STEP_STEPPING,$/;"	e	enum:state_t::__anon20
STORE	memtracer.h	/^  STORE,$/;"	e	enum:access_type
Sbuffer_t	prefetcher.h	/^	struct Sbuffer_t{$/;"	s	class:prefetcher_t
Scheduling_policy	memdelay.h	/^	enum class Scheduling_policy{$/;"	c	class:memdelay_t
SpeedEntry	memdelay.h	/^    struct SpeedEntry {$/;"	s	class:memdelay_t
T0	opcodes.h	4;"	d
TEST_LOGIC_RESET	jtag_dtm.h	/^  TEST_LOGIC_RESET,$/;"	e	enum:__anon13
TLB_CHECK_TRIGGERS	mmu.h	/^  static const reg_t TLB_CHECK_TRIGGERS = reg_t(1) << 63;$/;"	m	class:mmu_t
TLB_ENTRIES	mmu.h	/^  static const reg_t TLB_ENTRIES = 256;$/;"	m	class:mmu_t
Type	flashmodel.h	/^	enum class Type : int$/;"	c	class:flashmodel_t
Type	memdelay.h	/^    enum class Type : int$/;"	c	class:memdelay_t
UINT64_MAX	insns/div.h	/^  WRITE_RD(UINT64_MAX);$/;"	v
UINT64_MAX	insns/divu.h	/^  WRITE_RD(UINT64_MAX);$/;"	v
UINT64_MAX	insns/divuw.h	/^  WRITE_RD(UINT64_MAX);$/;"	v
UINT64_MAX	insns/divw.h	/^  WRITE_RD(UINT64_MAX);$/;"	v
UPDATE_DR	jtag_dtm.h	/^  UPDATE_DR,$/;"	e	enum:__anon13
UPDATE_IR	jtag_dtm.h	/^  UPDATE_IR$/;"	e	enum:__anon13
VALID	cachesim.h	/^  static const uint64_t VALID = 1ULL << 63;$/;"	m	class:cache_sim_t
VIRT_PRIV	debug_defines.h	1725;"	d
VIRT_PRIV_PRV	debug_defines.h	1735;"	d
VIRT_PRIV_PRV_LENGTH	debug_defines.h	1734;"	d
VIRT_PRIV_PRV_OFFSET	debug_defines.h	1733;"	d
VI_CHECK_DDS	decode.h	426;"	d
VI_CHECK_DSS	decode.h	417;"	d
VI_CHECK_MSS	decode.h	385;"	d
VI_CHECK_REDUCTION	decode.h	440;"	d
VI_CHECK_SD	decode.h	414;"	d
VI_CHECK_SD	insns/vfncvt_f_f_v.h	/^  VI_CHECK_SD;$/;"	v
VI_CHECK_SD	insns/vfncvt_f_x_v.h	/^  VI_CHECK_SD;$/;"	v
VI_CHECK_SD	insns/vfncvt_f_xu_v.h	/^  VI_CHECK_SD;$/;"	v
VI_CHECK_SD	insns/vfncvt_x_f_v.h	/^  VI_CHECK_SD;$/;"	v
VI_CHECK_SD	insns/vfncvt_xu_f_v.h	/^  VI_CHECK_SD;$/;"	v
VI_CHECK_SDS	decode.h	434;"	d
VI_CHECK_SSS	decode.h	395;"	d
VI_CHECK_SXX	decode.h	406;"	d
VI_DUPLICATE_VREG	decode.h	1371;"	d
VI_ELEMENT_SKIP	decode.h	348;"	d
VI_GENERAL_LOOP_BASE	decode.h	451;"	d
VI_LD	decode.h	1423;"	d
VI_LDST_FF	decode.h	1459;"	d
VI_LOOP_BASE	decode.h	461;"	d
VI_LOOP_CMP_BASE	decode.h	480;"	d
VI_LOOP_CMP_END	decode.h	494;"	d
VI_LOOP_ELEMENT_SKIP	decode.h	337;"	d
VI_LOOP_END	decode.h	465;"	d
VI_LOOP_MASK	decode.h	499;"	d
VI_LOOP_NSHIFT_BASE	decode.h	514;"	d
VI_LOOP_REDUCTION_BASE	decode.h	758;"	d
VI_LOOP_REDUCTION_END	decode.h	473;"	d
VI_LOOP_WIDEN_END	decode.h	469;"	d
VI_LOOP_WIDE_REDUCTION_BASE	decode.h	1225;"	d
VI_NARROW_CHECK_COMMON	decode.h	368;"	d
VI_NARROW_SHIFT	decode.h	944;"	d
VI_NSHIFT_PARAMS	decode.h	596;"	d
VI_PARAMS	decode.h	579;"	d
VI_ST	decode.h	1390;"	d
VI_STRIP	decode.h	1361;"	d
VI_ULOOP_REDUCTION_BASE	decode.h	789;"	d
VI_ULOOP_WIDE_REDUCTION_BASE	decode.h	1253;"	d
VI_U_PARAMS	decode.h	564;"	d
VI_VFP_COMMON	decode.h	1510;"	d
VI_VFP_LOOP_BASE	decode.h	1521;"	d
VI_VFP_LOOP_CMP	decode.h	1642;"	d
VI_VFP_LOOP_CMP_BASE	decode.h	1526;"	d
VI_VFP_LOOP_CMP_END	decode.h	1569;"	d
VI_VFP_LOOP_END	decode.h	1552;"	d
VI_VFP_LOOP_REDUCTION_BASE	decode.h	1537;"	d
VI_VFP_LOOP_REDUCTION_END	decode.h	1561;"	d
VI_VFP_LOOP_WIDE_END	decode.h	1556;"	d
VI_VFP_LOOP_WIDE_REDUCTION_BASE	decode.h	1546;"	d
VI_VFP_VF_LOOP	decode.h	1621;"	d
VI_VFP_VF_LOOP_WIDE	decode.h	1650;"	d
VI_VFP_VV_LOOP	decode.h	1585;"	d
VI_VFP_VV_LOOP_REDUCTION	decode.h	1606;"	d
VI_VFP_VV_LOOP_WIDE	decode.h	1672;"	d
VI_VFP_VV_LOOP_WIDE_REDUCTION	decode.h	1614;"	d
VI_VFP_WF_LOOP_WIDE	decode.h	1693;"	d
VI_VFP_WV_LOOP_WIDE	decode.h	1713;"	d
VI_VI_LOOP	decode.h	910;"	d
VI_VI_LOOP_CMP	decode.h	666;"	d
VI_VI_LOOP_NSHIFT	decode.h	967;"	d
VI_VI_ULOOP	decode.h	892;"	d
VI_VI_ULOOP_CMP	decode.h	720;"	d
VI_VVXI_LOOP_NARROW	decode.h	952;"	d
VI_VVXI_MERGE_LOOP	decode.h	739;"	d
VI_VVX_LOOP_AVG	decode.h	1318;"	d
VI_VVX_LOOP_WIDE_SSMA	decode.h	1128;"	d
VI_VVX_LOOP_WIDE_SU_SSMA	decode.h	1184;"	d
VI_VVX_LOOP_WIDE_USSMA	decode.h	1156;"	d
VI_VVX_LOOP_WIDE_US_SSMA	decode.h	1212;"	d
VI_VV_LOOP	decode.h	838;"	d
VI_VV_LOOP_CARRY	decode.h	1281;"	d
VI_VV_LOOP_CMP	decode.h	630;"	d
VI_VV_LOOP_NARROW	decode.h	929;"	d
VI_VV_LOOP_NSHIFT	decode.h	997;"	d
VI_VV_LOOP_REDUCTION	decode.h	775;"	d
VI_VV_LOOP_WIDEN	decode.h	1013;"	d
VI_VV_LOOP_WIDE_REDUCTION	decode.h	1241;"	d
VI_VV_ULOOP	decode.h	820;"	d
VI_VV_ULOOP_CMP	decode.h	684;"	d
VI_VV_ULOOP_REDUCTION	decode.h	806;"	d
VI_VV_ULOOP_WIDE_REDUCTION	decode.h	1269;"	d
VI_VX_LOOP	decode.h	874;"	d
VI_VX_LOOP_CMP	decode.h	648;"	d
VI_VX_LOOP_NSHIFT	decode.h	982;"	d
VI_VX_LOOP_WIDEN	decode.h	1030;"	d
VI_VX_ULOOP	decode.h	856;"	d
VI_VX_ULOOP_CMP	decode.h	702;"	d
VI_WIDE_CHECK_COMMON	decode.h	377;"	d
VI_WIDE_OP_AND_ASSIGN	decode.h	1047;"	d
VI_WIDE_OP_AND_ASSIGN_MIX	decode.h	1069;"	d
VI_WIDE_SSMA	decode.h	1113;"	d
VI_WIDE_SU_SSMA	decode.h	1168;"	d
VI_WIDE_USSMA	decode.h	1140;"	d
VI_WIDE_US_SSMA	decode.h	1196;"	d
VI_WIDE_WVX_OP	decode.h	1091;"	d
VI_XI_LOOP_CARRY	decode.h	1299;"	d
VI_XI_SLIDEDOWN_PARAMS	decode.h	588;"	d
VI_XI_SLIDEUP_PARAMS	decode.h	592;"	d
VLEN	processor.h	/^    reg_t ELEN, VLEN, SLEN;$/;"	m	class:vectorUnit_t
VRM	processor.h	/^enum VRM{$/;"	g
VU	processor.h	/^  vectorUnit_t VU;$/;"	m	class:processor_t
VV_CARRY_PARAMS	decode.h	620;"	d
VV_NSHIFT_PARAMS	decode.h	608;"	d
VV_PARAMS	decode.h	569;"	d
VV_U_PARAMS	decode.h	554;"	d
VXI_PARAMS	decode.h	547;"	d
VX_NSHIFT_PARAMS	decode.h	602;"	d
VX_PARAMS	decode.h	574;"	d
VX_U_PARAMS	decode.h	559;"	d
V_VALS	prefetcher.h	/^	V_VALS = 8$/;"	e	enum:__anon15
WIDE_REDUCTION_LOOP	decode.h	1236;"	d
WIDE_REDUCTION_ULOOP	decode.h	1264;"	d
WRITE_FRD	decode.h	188;"	d
WRITE_FREG	decode.h	155;"	d
WRITE_FREG	decode.h	162;"	d
WRITE_MEM	mmu.h	150;"	d
WRITE_RD	decode.h	151;"	d
WRITE_REG	decode.h	154;"	d
WRITE_REG	decode.h	157;"	d
WRITE_RVC_FRS2S	decode.h	172;"	d
WRITE_RVC_RS1S	decode.h	170;"	d
WRITE_RVC_RS2S	decode.h	171;"	d
XI_CARRY_PARAMS	decode.h	614;"	d
XPR	processor.h	/^  regfile_t<reg_t, NXPR, true> XPR;$/;"	m	struct:state_t
XV_PARAMS	decode.h	584;"	d
X_RA	decode.h	34;"	d
X_SP	decode.h	35;"	d
ZERO	opcodes.h	3;"	d
_BUFF_CTRL_H	buffer_controller.h	2;"	d
_MEMTRACER_H	memtracer.h	4;"	d
_PREFETCHER_H	prefetcher.h	2;"	d
_RISCV_ARITH_H	arith.h	4;"	d
_RISCV_BYTEORDER_H	byteorder.h	4;"	d
_RISCV_CACHE_SIM_H	cachesim.h	4;"	d
_RISCV_COMMON_H	common.h	4;"	d
_RISCV_COPROCESSOR_H	extension.h	4;"	d
_RISCV_DEBUG_MODULE_H	debug_module.h	3;"	d
_RISCV_DECODE_H	decode.h	4;"	d
_RISCV_DEVICES_H	devices.h	2;"	d
_RISCV_DISASM_H	disasm.h	4;"	d
_RISCV_DTS_H	dts.h	3;"	d
_RISCV_FLASHMODEL_H	flashmodel.h	3;"	d
_RISCV_MEMDELAY_H	memdelay.h	3;"	d
_RISCV_MMIO_PLUGIN_H	mmio_plugin.h	2;"	d
_RISCV_MMU_H	mmu.h	4;"	d
_RISCV_PROCESSOR_H	processor.h	3;"	d
_RISCV_ROCC_H	rocc.h	2;"	d
_RISCV_SIMIF_H	simif.h	4;"	d
_RISCV_SIM_H	sim.h	4;"	d
_RISCV_TRACER_H	tracer.h	4;"	d
_RISCV_TRAP_H	trap.h	4;"	d
_name	trap.h	/^  char _name[16];$/;"	m	class:trap_t
_state	jtag_dtm.h	/^    jtag_state_t _state;$/;"	m	class:jtag_dtm_t
_tck	jtag_dtm.h	/^    bool _tck, _tms, _tdi, _tdo;$/;"	m	class:jtag_dtm_t
_tdi	jtag_dtm.h	/^    bool _tck, _tms, _tdi, _tdo;$/;"	m	class:jtag_dtm_t
_tdo	jtag_dtm.h	/^    bool _tck, _tms, _tdi, _tdo;$/;"	m	class:jtag_dtm_t
_tms	jtag_dtm.h	/^    bool _tck, _tms, _tdi, _tdo;$/;"	m	class:jtag_dtm_t
abits	jtag_dtm.h	/^    const unsigned abits = 6;$/;"	m	class:jtag_dtm_t
abstract_command_completed	debug_module.h	/^    bool abstract_command_completed;$/;"	m	class:debug_module_t
abstract_device_t	devices.h	/^class abstract_device_t {$/;"	c
abstract_rti	debug_module.h	/^    unsigned abstract_rti;$/;"	m	struct:__anon4
abstractauto	debug_module.h	/^    abstractauto_t abstractauto;$/;"	m	class:debug_module_t
abstractauto_t	debug_module.h	/^} abstractauto_t;$/;"	t	typeref:struct:__anon8
abstractcs	debug_module.h	/^    abstractcs_t abstractcs;$/;"	m	class:debug_module_t
abstractcs_t	debug_module.h	/^} abstractcs_t;$/;"	t	typeref:struct:__anon7
accept	remote_bitbang.cc	/^void remote_bitbang_t::accept()$/;"	f	class:remote_bitbang_t
access	cachesim.cc	/^int cache_sim_t::access(uint64_t addr, size_t bytes, bool store)$/;"	f	class:cache_sim_t
access128	debug_module.h	/^  bool access128;$/;"	m	struct:__anon9
access16	debug_module.h	/^  bool access16;$/;"	m	struct:__anon9
access32	debug_module.h	/^  bool access32;$/;"	m	struct:__anon9
access64	debug_module.h	/^  bool access64;$/;"	m	struct:__anon9
access8	debug_module.h	/^  bool access8;$/;"	m	struct:__anon9
access_icache	mmu.h	/^  inline icache_entry_t* access_icache(reg_t addr)$/;"	f	class:mmu_t
access_type	memtracer.h	/^enum access_type {$/;"	g
acquire_load_reservation	mmu.h	/^  inline void acquire_load_reservation(reg_t vaddr)$/;"	f	class:mmu_t
action	processor.h	/^  mcontrol_action_t action;$/;"	m	struct:__anon19
active_row	memdelay.h	/^        int64_t active_row;$/;"	m	struct:memdelay_t::Bank
add_device	debug_module.cc	/^void debug_module_t::add_device(bus_t *bus) {$/;"	f	class:debug_module_t
add_device	devices.cc	/^void bus_t::add_device(reg_t addr, abstract_device_t* dev)$/;"	f	class:bus_t
addi	opcodes.h	/^static uint32_t addi(unsigned int dest, unsigned int src, uint16_t imm)$/;"	f
addr	flashmodel.h	/^			uint64_t addr;$/;"	m	struct:flashmodel_t::Flash_Cache::Line
addr	flashmodel.h	/^		uint64_t addr;$/;"	m	struct:flashmodel_t::Request
addr	memdelay.h	/^        uint64_t addr;$/;"	m	struct:memdelay_t::Request
addr	processor.h	/^  reg_t addr;$/;"	m	struct:commit_log_mem_t
addr	processor.h	/^  reg_t addr;$/;"	m	struct:commit_log_reg_t
addr_bits	flashmodel.h	/^		vector<int> addr_bits; \/\/= {1, 2, 1, 1, 11, 6};		\/\/Channel, Chip, Die, Plane, Block, Page     $/;"	m	struct:flashmodel_t::Flash
addr_bits	memdelay.h	/^    vector<int> addr_bits = {14, 2, 9, 2, 5};       \/\/Row, Bank, Column, Channel, Cacheline$/;"	m	class:memdelay_t
addr_break	flashmodel.h	/^		vector<int> addr_break;	$/;"	m	struct:flashmodel_t::Request
addr_break	memdelay.h	/^		vector<int> addr_break;$/;"	m	struct:memdelay_t::Request
addr_buffer	prefetcher.h	/^		vector<reg_t> addr_buffer;$/;"	m	struct:prefetcher_t::Sbuffer_t
addr_buffer_it	prefetcher.h	/^	std::vector<reg_t>::iterator addr_buffer_it;$/;"	m	class:prefetcher_t
addr_to_mem	sim.cc	/^char* sim_t::addr_to_mem(reg_t addr) {$/;"	f	class:sim_t
address	mmu.h	/^    reg_t address;$/;"	m	class:trigger_matched_t
advance_pc	execute.cc	121;"	d	file:
allhalted	debug_module.h	/^  bool allhalted;$/;"	m	struct:__anon6
allhavereset	debug_module.h	/^  bool allhavereset;$/;"	m	struct:__anon6
allnonexistant	debug_module.h	/^  bool allnonexistant;$/;"	m	struct:__anon6
alloc	mmio_plugin.h	/^  static void* alloc(const char* args)$/;"	f	struct:mmio_plugin_registration_t
alloc	mmio_plugin.h	/^  void* (*alloc)(const char*);$/;"	m	struct:__anon14
allocate	flashmodel.cc	/^bool flashmodel_t::Flash_Cache::allocate(Line line){$/;"	f	class:flashmodel_t::Flash_Cache
allresumeack	debug_module.h	/^  bool allresumeack;$/;"	m	struct:__anon6
allrunning	debug_module.h	/^  bool allrunning;$/;"	m	struct:__anon6
allunavail	debug_module.h	/^  bool allunavail;$/;"	m	struct:__anon6
amo_func	mmu.h	195;"	d
anyhalted	debug_module.h	/^  bool anyhalted;$/;"	m	struct:__anon6
anyhavereset	debug_module.h	/^  bool anyhavereset;$/;"	m	struct:__anon6
anynonexistant	debug_module.h	/^  bool anynonexistant;$/;"	m	struct:__anon6
anyresumeack	debug_module.h	/^  bool anyresumeack;$/;"	m	struct:__anon6
anyrunning	debug_module.h	/^  bool anyrunning;$/;"	m	struct:__anon6
anyunavail	debug_module.h	/^  bool anyunavail;$/;"	m	struct:__anon6
arg_t	disasm.h	/^class arg_t$/;"	c
args	disasm.h	/^  std::vector<const arg_t*> args;$/;"	m	class:disasm_insn_t
asize	debug_module.h	/^  unsigned asize;$/;"	m	struct:__anon9
authbusy	debug_module.h	/^  bool authbusy;$/;"	m	struct:__anon6
authenticated	debug_module.h	/^  bool authenticated;$/;"	m	struct:__anon6
autoexecdata	debug_module.h	/^  unsigned autoexecdata;$/;"	m	struct:__anon8
autoexecprogbuf	debug_module.h	/^  unsigned autoexecprogbuf;$/;"	m	struct:__anon8
autoincrement	debug_module.h	/^  bool autoincrement;$/;"	m	struct:__anon9
available_clk	buffer_controller.h	/^	uint64_t available_clk;   $/;"	m	class:buffer_controller_t
b	buffer_controller.h	/^	struct Buffer_t *b;$/;"	m	class:buffer_controller_t	typeref:struct:buffer_controller_t::Buffer_t
b	decode.h	/^  insn_bits_t b;$/;"	m	class:insn_t
bad_isa_string	processor.cc	/^static void bad_isa_string(const char* isa)$/;"	f	file:
bad_priv_string	processor.cc	/^static void bad_priv_string(const char* priv)$/;"	f	file:
bad_varch_string	processor.cc	/^static void bad_varch_string(const char* varch)$/;"	f	file:
bank_count	memdelay.h	/^    int bank_count;$/;"	m	class:memdelay_t
bank_list	memdelay.h	/^        vector<Bank> bank_list;$/;"	m	struct:memdelay_t::Channel
baseAddr	insns/vleff_v.h	/^const reg_t baseAddr = RS1;$/;"	v
baseAddr	insns/vsuxb_v.h	/^reg_t baseAddr = RS1;$/;"	v
baseAddr	insns/vsuxe_v.h	/^reg_t baseAddr = RS1;$/;"	v
baseAddr	insns/vsuxh_v.h	/^reg_t baseAddr = RS1;$/;"	v
baseAddr	insns/vsuxw_v.h	/^reg_t baseAddr = RS1;$/;"	v
bc	processor.h	/^  buffer_controller_t *bc;$/;"	m	class:processor_t
bit	opcodes.h	/^static uint32_t bit(uint32_t value, unsigned int b) {$/;"	f
bits	decode.h	/^  insn_bits_t bits() { return b; }$/;"	f	class:insn_t
bits	opcodes.h	/^static uint32_t bits(uint32_t value, unsigned int hi, unsigned int lo) {$/;"	f
boot_rom	sim.h	/^  std::unique_ptr<rom_device_t> boot_rom;$/;"	m	class:sim_t
buf_id	buffer_controller.h	/^    unsigned long buf_id;$/;"	m	class:buffer_controller_t
buf_size	remote_bitbang.h	/^  static const ssize_t buf_size = 64 * 1024;$/;"	m	class:remote_bitbang_t
buffer	buffer_controller.h	/^		uint8_t *buffer;$/;"	m	struct:buffer_controller_t::Buffer_t
buffer_available_clk	buffer_controller.h	/^		uint64_t buffer_available_clk;$/;"	m	struct:buffer_controller_t::Buffer_t
buffer_controller_t	buffer_controller.cc	/^buffer_controller_t::buffer_controller_t(mmu_t * _mmu, processor_t* _proc, unsigned int sz)$/;"	f	class:buffer_controller_t
buffer_controller_t	buffer_controller.h	/^class buffer_controller_t$/;"	c
buffer_count	buffer_controller.h	/^	int buffer_count;$/;"	m	class:buffer_controller_t
buffer_full	buffer_controller.h	/^		bool buffer_full;$/;"	m	struct:buffer_controller_t::Buffer_t
buffer_rd_idx	buffer_controller.h	/^		unsigned int buffer_rd_idx=0;$/;"	m	struct:buffer_controller_t::Buffer_t
buffer_read_count	buffer_controller.h	/^	long buffer_read_count = 0;$/;"	m	class:buffer_controller_t
buffer_sz	buffer_controller.h	/^	unsigned int buffer_sz;$/;"	m	class:buffer_controller_t
buffer_wait_cycles	processor.h	/^  uint64_t buffer_wait_cycles = 0;		\/\/cycles CPU waitied for buffer to send v[]$/;"	m	class:processor_t
buffer_wr_idx	buffer_controller.h	/^		unsigned int buffer_wr_idx=0;$/;"	m	struct:buffer_controller_t::Buffer_t
build_opcode_map	processor.cc	/^void processor_t::build_opcode_map()$/;"	f	class:processor_t
bus	sim.h	/^  bus_t bus;$/;"	m	class:sim_t
bus_t	devices.h	/^class bus_t : public abstract_device_t {$/;"	c
busy	buffer_controller.h	/^	bool busy;$/;"	m	class:buffer_controller_t
busy	debug_module.h	/^  bool busy;$/;"	m	struct:__anon7
busy_stuck	jtag_dtm.h	/^    bool busy_stuck;$/;"	m	class:jtag_dtm_t
bv_base	buffer_controller.h	/^	reg_t bv_base;$/;"	m	class:buffer_controller_t
bv_idx	buffer_controller.h	/^    int32_t bv_idx = 0;$/;"	m	class:buffer_controller_t
bv_pos	buffer_controller.h	/^    reg_t bv_pos;$/;"	m	class:buffer_controller_t
bv_val	buffer_controller.h	/^    int8_t bv_val = 0;$/;"	m	class:buffer_controller_t
byte_word	buffer_controller.h	/^	int32_t byte_word = 0;$/;"	m	class:buffer_controller_t
bytes_read	cachesim.h	/^  uint64_t bytes_read;$/;"	m	class:cache_sim_t
bytes_written	cachesim.h	/^  uint64_t bytes_written;$/;"	m	class:cache_sim_t
cache	cachesim.h	/^  cache_sim_t* cache;$/;"	m	class:cache_memtracer_t
cache_memtracer_t	cachesim.h	/^  cache_memtracer_t(const char* config, const char* name)$/;"	f	class:cache_memtracer_t
cache_memtracer_t	cachesim.h	/^class cache_memtracer_t : public memtracer_t$/;"	c
cache_sim_t	cachesim.cc	/^cache_sim_t::cache_sim_t(const cache_sim_t& rhs)$/;"	f	class:cache_sim_t
cache_sim_t	cachesim.cc	/^cache_sim_t::cache_sim_t(size_t _sets, size_t _ways, size_t _linesz, const char* _name)$/;"	f	class:cache_sim_t
cache_sim_t	cachesim.h	/^class cache_sim_t$/;"	c
capture_dr	jtag_dtm.cc	/^void jtag_dtm_t::capture_dr()$/;"	f	class:jtag_dtm_t
cause	processor.h	/^  uint8_t cause;$/;"	m	struct:__anon16
cause	trap.h	/^  reg_t cause() { return which; }$/;"	f	class:trap_t
cfgstrvalid	debug_module.h	/^  bool cfgstrvalid;$/;"	m	struct:__anon6
chain	disasm.h	/^  std::vector<const disasm_insn_t*> chain[HASH_SIZE+1];$/;"	m	class:disassembler_t
chain	processor.h	/^  bool chain;$/;"	m	struct:__anon19
challenge	debug_module.h	/^    uint32_t challenge;$/;"	m	class:debug_module_t
channel_count	memdelay.h	/^    int channel_count;$/;"	m	class:memdelay_t
channel_list	memdelay.h	/^    vector<Channel> channel_list;$/;"	m	class:memdelay_t
check_buffer	buffer_controller.cc	/^void buffer_controller_t::check_buffer()$/;"	f	class:buffer_controller_t
check_hit	flashmodel.cc	/^bool flashmodel_t::Flash_Cache::check_hit(Request req)$/;"	f	class:flashmodel_t::Flash_Cache
check_load_reservation	mmu.h	/^  inline bool check_load_reservation(reg_t vaddr)$/;"	f	class:mmu_t
check_pc_alignment	processor.h	/^  void check_pc_alignment(reg_t pc) {$/;"	f	class:processor_t
check_sb	prefetcher.cc	/^bool prefetcher_t::check_sb(reg_t line)$/;"	f	class:prefetcher_t
check_tag	cachesim.cc	/^uint64_t* cache_sim_t::check_tag(uint64_t addr)$/;"	f	class:cache_sim_t
check_tag	cachesim.cc	/^uint64_t* fa_cache_sim_t::check_tag(uint64_t addr)$/;"	f	class:fa_cache_sim_t
check_triggers_fetch	mmu.h	/^  bool check_triggers_fetch;$/;"	m	class:mmu_t
check_triggers_load	mmu.h	/^  bool check_triggers_load;$/;"	m	class:mmu_t
check_triggers_store	mmu.h	/^  bool check_triggers_store;$/;"	m	class:mmu_t
chunk_align	sim.h	/^  size_t chunk_align() { return 8; }$/;"	f	class:sim_t
chunk_max_size	sim.h	/^  size_t chunk_max_size() { return 8; }$/;"	f	class:sim_t
clear_csr	encoding.h	209;"	d
clear_interrupt	extension.cc	/^void extension_t::clear_interrupt()$/;"	f	class:extension_t
client_fd	remote_bitbang.h	/^  int client_fd;$/;"	m	class:remote_bitbang_t
clint	sim.h	/^  std::unique_ptr<clint_t> clint;$/;"	m	class:sim_t
clint_t	clint.cc	/^clint_t::clint_t(std::vector<processor_t*>& procs)$/;"	f	class:clint_t
clint_t	devices.h	/^class clint_t : public abstract_device_t {$/;"	c
clk	flashmodel.h	/^	int64_t clk;$/;"	m	class:flashmodel_t
clk	memdelay.h	/^	uint64_t clk;$/;"	m	class:memdelay_t
clk	processor.h	/^  uint64_t clk;$/;"	m	class:processor_t
cluster_row	buffer_controller.h	/^	reg_t cluster_row;$/;"	m	class:buffer_controller_t
cmd	memdelay.h	/^		int cmd;$/;"	m	struct:memdelay_t::timing_table
cmderr	debug_module.h	/^  cmderr_t cmderr;$/;"	m	struct:__anon7
cmderr	debug_module.h	/^typedef enum cmderr {$/;"	g
cmderr_t	debug_module.h	/^} cmderr_t;$/;"	t	typeref:enum:cmderr
cnt	insns/viota_m.h	/^int cnt = 0;$/;"	v
col_base	buffer_controller.h	/^    reg_t col_base;$/;"	m	class:buffer_controller_t
col_element_count	buffer_controller.h	/^	int col_element_count = 0;$/;"	m	class:buffer_controller_t
col_idx	buffer_controller.h	/^    uint32_t col_idx = 0;$/;"	m	class:buffer_controller_t
col_idx_done	buffer_controller.h	/^	bool col_idx_done = false;$/;"	m	class:buffer_controller_t
col_pos	buffer_controller.h	/^    reg_t col_pos;$/;"	m	class:buffer_controller_t
col_seg	buffer_controller.h	/^    int32_t col_seg = 0;$/;"	m	class:buffer_controller_t
command	debug_module.h	/^    uint32_t command;$/;"	m	class:debug_module_t
commit_log_mem_t	processor.h	/^struct commit_log_mem_t$/;"	s
commit_log_print_insn	execute.cc	/^static void commit_log_print_insn(state_t* state, reg_t pc, insn_t insn)$/;"	f	file:
commit_log_print_value	execute.cc	/^static void commit_log_print_value(int width, uint64_t hi, uint64_t lo)$/;"	f	file:
commit_log_reg_t	processor.h	/^struct commit_log_reg_t$/;"	s
commit_log_stash_privilege	execute.cc	/^static void commit_log_stash_privilege(processor_t* p)$/;"	f	file:
config	debug_module.h	/^    debug_module_config_t config;$/;"	m	class:debug_module_t
construct	cachesim.cc	/^cache_sim_t* cache_sim_t::construct(const char* config, const char* name)$/;"	f	class:cache_sim_t
contents	devices.h	/^  char* contents() { return data; }$/;"	f	class:mem_t
contents	devices.h	/^  const std::vector<char>& contents() { return data; }$/;"	f	class:rom_device_t
continue	insns/vslideup_vi.h	/^  continue;$/;"	v
continue	insns/vslideup_vx.h	/^  continue;$/;"	v
controller	flashmodel.h	/^	}controller;$/;"	m	class:flashmodel_t	typeref:struct:flashmodel_t::Controller
controller	memdelay.h	/^		}controller;	$/;"	m	struct:memdelay_t::Channel	typeref:struct:memdelay_t::Channel::Controller
csr	decode.h	/^  uint64_t csr() { return x(20, 12); }$/;"	f	class:insn_t
csr	insns/csrrc.h	/^int csr = validate_csr(insn.csr(), write);$/;"	v
csr	insns/csrrci.h	/^int csr = validate_csr(insn.csr(), write);$/;"	v
csr	insns/csrrs.h	/^int csr = validate_csr(insn.csr(), write);$/;"	v
csr	insns/csrrsi.h	/^int csr = validate_csr(insn.csr(), write);$/;"	v
csr	insns/csrrw.h	/^int csr = validate_csr(insn.csr(), true);$/;"	v
csr	insns/csrrwi.h	/^int csr = validate_csr(insn.csr(), true);$/;"	v
csr_name	regnames.cc	/^const char* csr_name(int which) {$/;"	f
csrr	opcodes.h	/^static uint32_t csrr(unsigned int rd, unsigned int csr) {$/;"	f
csrrs	opcodes.h	/^static uint32_t csrrs(unsigned int rd, unsigned int rs1, unsigned int csr) {$/;"	f
csrsi	opcodes.h	/^static uint32_t csrsi(unsigned int csr, uint16_t imm) {$/;"	f
csrw	opcodes.h	/^static uint32_t csrw(unsigned int source, unsigned int csr) {$/;"	f
cto	processor.h	/^static int cto(reg_t val)$/;"	f
ctrlc_pressed	sim.cc	/^volatile bool ctrlc_pressed = false;$/;"	v
ctz	processor.cc	/^static int ctz(reg_t val)$/;"	f	file:
current_proc	sim.h	/^  size_t current_proc;$/;"	m	class:sim_t
current_step	sim.h	/^  size_t current_step;$/;"	m	class:sim_t
customX	rocc.cc	7;"	d	file:
custom_base	debug_module.h	/^    unsigned custom_base;$/;"	m	class:debug_module_t
cycles	processor.h	/^  uint64_t cycles;$/;"	m	class:processor_t
d	interactive.cc	/^  double d;$/;"	m	union:fpr	file:
data	decode.h	/^  T data[N];$/;"	m	class:regfile_t
data	devices.h	/^  char* data;$/;"	m	class:mem_t
data	devices.h	/^  std::vector<char> data;$/;"	m	class:rom_device_t
data	mmu.h	/^    reg_t data;$/;"	m	class:trigger_matched_t
data	mmu.h	/^  insn_fetch_t data;$/;"	m	struct:icache_entry_t
data	processor.h	/^  freg_t data;$/;"	m	struct:commit_log_reg_t
datacount	debug_module.h	/^  unsigned datacount;$/;"	m	struct:__anon7
datasize	debug_module.h	/^    static const unsigned datasize = 2;$/;"	m	class:debug_module_t
dcache_sim_t	cachesim.h	/^  dcache_sim_t(const char* config) : cache_memtracer_t(config, "D$") {}$/;"	f	class:dcache_sim_t
dcache_sim_t	cachesim.h	/^class dcache_sim_t : public cache_memtracer_t$/;"	c
dcsr	processor.h	/^  dcsr_t dcsr;$/;"	m	struct:state_t
dcsr_t	processor.h	/^} dcsr_t;$/;"	t	typeref:struct:__anon16
dealloc	mmio_plugin.h	/^  static void dealloc(void* self)$/;"	f	struct:mmio_plugin_registration_t
dealloc	mmio_plugin.h	/^  void (*dealloc)(void*);$/;"	m	struct:__anon14
debug	processor.h	/^  bool debug;$/;"	m	class:processor_t
debug	sim.h	/^  bool debug;$/;"	m	class:sim_t
debug_abstract	debug_module.h	/^    uint8_t debug_abstract[debug_abstract_size * 4];$/;"	m	class:debug_module_t
debug_abstract_size	debug_module.h	/^    static const unsigned debug_abstract_size = 12;$/;"	m	class:debug_module_t
debug_abstract_start	debug_module.h	/^    unsigned debug_abstract_start;$/;"	m	class:debug_module_t
debug_data_start	debug_module.h	/^    static const unsigned debug_data_start = 0x380;$/;"	m	class:debug_module_t
debug_mmu	sim.h	/^  mmu_t* debug_mmu;  \/\/ debug port into main memory$/;"	m	class:sim_t
debug_mode	processor.h	/^  bool debug_mode;$/;"	m	struct:state_t
debug_module	sim.h	/^  debug_module_t debug_module;$/;"	m	class:sim_t
debug_module_config_t	debug_module.h	/^} debug_module_config_t;$/;"	t	typeref:struct:__anon4
debug_module_t	debug_module.cc	/^debug_module_t::debug_module_t(sim_t *sim, const debug_module_config_t &config) :$/;"	f	class:debug_module_t
debug_module_t	debug_module.h	/^class debug_module_t : public abstract_device_t$/;"	c
debug_progbuf_start	debug_module.h	/^    unsigned debug_progbuf_start;$/;"	m	class:debug_module_t
debug_rom_flags	debug_module.h	/^    uint8_t debug_rom_flags[1024];$/;"	m	class:debug_module_t
debug_rom_whereto	debug_module.h	/^    uint8_t debug_rom_whereto[4];$/;"	m	class:debug_module_t
decode_insn	processor.cc	/^insn_func_t processor_t::decode_insn(insn_t insn)$/;"	f	class:processor_t
decode_vm_info	mmu.h	/^inline vm_info decode_vm_info(int xlen, reg_t prv, reg_t satp)$/;"	f
defaultNaNF128	decode.h	/^inline float128_t defaultNaNF128()$/;"	f
delay	memdelay.h	/^		int delay;$/;"	m	struct:memdelay_t::timing_table
delay	processor.h	/^    uint32_t delay;$/;"	m	struct:processor_t::table_entry
devices	devices.h	/^  std::map<reg_t, abstract_device_t*> devices;$/;"	m	class:bus_t
dirty	flashmodel.h	/^			bool dirty;$/;"	m	struct:flashmodel_t::Flash_Cache::Line
dirty_ext_state	decode.h	186;"	d
dirty_fp_state	decode.h	185;"	d
disasm	processor.cc	/^void processor_t::disasm(insn_t insn)$/;"	f	class:processor_t
disasm_insn_t	disasm.h	/^  NOINLINE disasm_insn_t(const char* name, uint32_t match, uint32_t mask,$/;"	f	class:disasm_insn_t
disasm_insn_t	disasm.h	/^class disasm_insn_t$/;"	c
disassembler	processor.h	/^  disassembler_t* disassembler;$/;"	m	class:processor_t
disassembler_t	disasm.h	/^class disassembler_t$/;"	c
dm	jtag_dtm.h	/^    debug_module_t *dm;$/;"	m	class:jtag_dtm_t
dmactive	debug_module.h	/^  bool dmactive;$/;"	m	struct:__anon5
dmcontrol	debug_module.h	/^    dmcontrol_t dmcontrol;$/;"	m	class:debug_module_t
dmcontrol_t	debug_module.h	/^} dmcontrol_t;$/;"	t	typeref:struct:__anon5
dmdata	debug_module.h	/^    uint8_t dmdata[datasize * 4];$/;"	m	class:debug_module_t
dmi	jtag_dtm.h	/^    uint64_t dmi;$/;"	m	class:jtag_dtm_t
dmi_read	debug_module.cc	/^bool debug_module_t::dmi_read(unsigned address, uint32_t *value)$/;"	f	class:debug_module_t
dmi_write	debug_module.cc	/^bool debug_module_t::dmi_write(unsigned address, uint32_t value)$/;"	f	class:debug_module_t
dmode	processor.h	/^  bool dmode;$/;"	m	struct:__anon19
dmstatus	debug_module.h	/^    dmstatus_t dmstatus;$/;"	m	class:debug_module_t
dmstatus_t	debug_module.h	/^} dmstatus_t;$/;"	t	typeref:struct:__anon6
do_mask	insns/vcompress_vm.h	/^  bool do_mask = (P.VU.elt<uint64_t>(rs1_num, midx) >> mpos) & 0x1;$/;"	v
done	buffer_controller.h	/^    bool done = false;$/;"	m	class:buffer_controller_t
done_queue	memdelay.h	/^			vector<pair<Request, uint64_t>> done_queue;$/;"	m	struct:memdelay_t::Channel::Controller
dpc	processor.h	/^  reg_t dpc;$/;"	m	struct:state_t
dr	jtag_dtm.h	/^    uint64_t dr;$/;"	m	class:jtag_dtm_t
dr_length	jtag_dtm.h	/^    unsigned dr_length;$/;"	m	class:jtag_dtm_t
dret	opcodes.h	/^static uint32_t dret(void) { return MATCH_DRET; }$/;"	f
dscratch0	processor.h	/^  reg_t dscratch0, dscratch1;$/;"	m	struct:state_t
dscratch1	processor.h	/^  reg_t dscratch0, dscratch1;$/;"	m	struct:state_t
dtb_enabled	sim.h	/^  bool dtb_enabled;$/;"	m	class:sim_t
dtmcontrol	jtag_dtm.h	/^    uint32_t dtmcontrol;$/;"	m	class:jtag_dtm_t
dts	sim.h	/^  std::string dts;$/;"	m	class:sim_t
dts_compile	dts.cc	/^std::string dts_compile(const std::string& dts)$/;"	f
e128	decode.h	311;"	d
e16	decode.h	308;"	d
e32	decode.h	309;"	d
e64	decode.h	310;"	d
e8	decode.h	307;"	d
early_stop	insns/vleff_v.h	/^bool early_stop = false;$/;"	v
ebreak	opcodes.h	/^static uint32_t ebreak(void) { return MATCH_EBREAK; }$/;"	f
ebreak_c	opcodes.h	/^static uint32_t ebreak_c(void) { return MATCH_C_EBREAK; }$/;"	f
ebreakh	processor.h	/^  bool ebreakh;$/;"	m	struct:__anon16
ebreakm	processor.h	/^  bool ebreakm;$/;"	m	struct:__anon16
ebreaks	processor.h	/^  bool ebreaks;$/;"	m	struct:__anon16
ebreaku	processor.h	/^  bool ebreaku;$/;"	m	struct:__anon16
elt	processor.h	/^      T& elt(reg_t vReg, reg_t n){$/;"	f	class:vectorUnit_t
empty	memtracer.h	/^  bool empty() { return list.empty(); }$/;"	f	class:memtracer_list_t
enqueue	flashmodel.cc	/^bool flashmodel_t::enqueue(reg_t addr, int type){$/;"	f	class:flashmodel_t
enter_debug_mode	processor.cc	/^void processor_t::enter_debug_mode(uint8_t cause)$/;"	f	class:processor_t
erase_delay	flashmodel.h	/^		static const int64_t erase_delay = 0;		\/\/3000 us$/;"	m	struct:flashmodel_t::Flash
error	debug_module.h	/^  unsigned error;$/;"	m	struct:__anon9
evict	flashmodel.cc	/^bool flashmodel_t::Flash_Cache::evict(int idx, int tag){$/;"	f	class:flashmodel_t::Flash_Cache
execute	processor.h	/^  bool execute;$/;"	m	struct:__anon19
execute_commands	remote_bitbang.cc	/^void remote_bitbang_t::execute_commands()$/;"	f	class:remote_bitbang_t
execute_insn	execute.cc	/^static reg_t execute_insn(processor_t* p, reg_t pc, insn_fetch_t fetch)$/;"	f	file:
executions	processor.h	/^  uint64_t last_pc, last_bits, executions;$/;"	m	class:processor_t
ext	processor.h	/^  extension_t* ext;$/;"	m	class:processor_t
extension_t	extension.h	/^class extension_t$/;"	c
extensions	extensions.cc	/^static std::map<std::string, std::function<extension_t*()>>& extensions()$/;"	f	file:
f128	decode.h	/^inline float128_t f128(freg_t r) { return r; }$/;"	f
f128_negate	decode.h	/^inline freg_t f128_negate(freg_t a)$/;"	f
f32	decode.h	/^inline float32_t f32(freg_t r) { return f32(unboxF32(r)); }$/;"	f
f32	decode.h	/^inline float32_t f32(uint32_t v) { return { v }; }$/;"	f
f64	decode.h	/^inline float64_t f64(freg_t r) { return f64(unboxF64(r)); }$/;"	f
f64	decode.h	/^inline float64_t f64(uint64_t v) { return { v }; }$/;"	f
fa_cache_sim_t	cachesim.cc	/^fa_cache_sim_t::fa_cache_sim_t(size_t ways, size_t linesz, const char* name)$/;"	f	class:fa_cache_sim_t
fa_cache_sim_t	cachesim.h	/^class fa_cache_sim_t : public cache_sim_t$/;"	c
false	insns/vaadd_vi.h	/^VI_CHECK_SSS(false);$/;"	v
false	insns/vfmerge_vfm.h	/^VI_CHECK_SSS(false);$/;"	v
false	insns/vmerge_vim.h	/^VI_CHECK_SSS(false);$/;"	v
false	insns/vmerge_vxm.h	/^VI_CHECK_SSS(false);$/;"	v
false	insns/vmulhsu_vx.h	/^VI_CHECK_SSS(false);$/;"	v
false	insns/vsadd_vi.h	/^VI_CHECK_SSS(false);$/;"	v
false	insns/vsadd_vx.h	/^VI_CHECK_SSS(false);$/;"	v
false	insns/vssub_vx.h	/^VI_CHECK_SSS(false);$/;"	v
false	insns/vssubu_vx.h	/^VI_CHECK_SSS(false);$/;"	v
false	insns/vwadd_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwadd_wx.h	/^VI_CHECK_DDS(false);$/;"	v
false	insns/vwaddu_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwaddu_wx.h	/^VI_CHECK_DDS(false);$/;"	v
false	insns/vwmacc_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwmaccsu_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwmaccu_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwmaccus_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwmul_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwmulsu_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwmulu_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwsub_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwsub_wx.h	/^VI_CHECK_DDS(false);$/;"	v
false	insns/vwsubu_vx.h	/^VI_CHECK_DSS(false);$/;"	v
false	insns/vwsubu_wx.h	/^VI_CHECK_DDS(false);$/;"	v
fc	flashmodel.h	/^	}fc;$/;"	m	class:flashmodel_t	typeref:struct:flashmodel_t::Flash_Cache
fence_i	opcodes.h	/^static uint32_t fence_i(void)$/;"	f
fetch_slow_path	mmu.cc	/^tlb_entry_t mmu_t::fetch_slow_path(reg_t vaddr)$/;"	f	class:mmu_t
fetch_temp	mmu.h	/^  uint16_t fetch_temp;$/;"	m	class:mmu_t
fflags	processor.h	/^  uint32_t fflags;$/;"	m	struct:state_t
field_width	debug_module.cc	/^static unsigned field_width(unsigned n)$/;"	f	file:
fill_all_zero	buffer_controller.h	/^	bool fill_all_zero = false;$/;"	m	class:buffer_controller_t
fill_buffer_bv_exp	buffer_controller.cc	/^void buffer_controller_t::fill_buffer_bv_exp()$/;"	f	class:buffer_controller_t
fill_buffer_csr_exp	buffer_controller.cc	/^void buffer_controller_t::fill_buffer_csr_exp()$/;"	f	class:buffer_controller_t
fill_buffer_csr_noexp	buffer_controller.cc	/^void buffer_controller_t::fill_buffer_csr_noexp()$/;"	f	class:buffer_controller_t
fill_buffer_id	buffer_controller.h	/^	int fill_buffer_id;$/;"	m	class:buffer_controller_t
fill_buffer_rl_exp	buffer_controller.cc	/^void buffer_controller_t::fill_buffer_rl_exp()$/;"	f	class:buffer_controller_t
fill_nnz_array	buffer_controller.cc	/^void buffer_controller_t::fill_nnz_array(int8_t &bv_val, int byte_word)$/;"	f	class:buffer_controller_t
fill_zero	buffer_controller.cc	/^void buffer_controller_t::fill_zero(uint8_t *p)$/;"	f	class:buffer_controller_t
find_device	devices.cc	/^std::pair<reg_t, abstract_device_t*> bus_t::find_device(reg_t addr)$/;"	f	class:bus_t
find_extension	extensions.cc	/^std::function<extension_t*()> find_extension(const char* name)$/;"	f
finish_clk	flashmodel.h	/^		int64_t finish_clk;		\/\/clock at which this req. is done$/;"	m	struct:flashmodel_t::LookUpTable_t
first_time	buffer_controller.h	/^	bool first_time = true;$/;"	m	class:buffer_controller_t
flash	flashmodel.h	/^	}flash;$/;"	m	class:flashmodel_t	typeref:struct:flashmodel_t::Flash
flash_cache_dirty_evicts	flashmodel.h	/^	uint64_t flash_cache_dirty_evicts = 0;$/;"	m	class:flashmodel_t
flash_cache_hits	flashmodel.h	/^	uint64_t flash_cache_hits = 0;$/;"	m	class:flashmodel_t
flash_cache_misses	flashmodel.h	/^	uint64_t flash_cache_misses = 0;$/;"	m	class:flashmodel_t
flash_speed	flashmodel.h	/^	int flash_speed;$/;"	m	class:flashmodel_t
flashmodel_t	flashmodel.cc	/^flashmodel_t::flashmodel_t(mmu_t* _mmu)$/;"	f	class:flashmodel_t
flashmodel_t	flashmodel.h	/^class flashmodel_t$/;"	c
fld	opcodes.h	/^static uint32_t fld(unsigned int dest, unsigned int base, uint16_t offset)$/;"	f
flush_icache	mmu.cc	/^void mmu_t::flush_icache()$/;"	f	class:mmu_t
flush_tlb	mmu.cc	/^void mmu_t::flush_tlb()$/;"	f	class:mmu_t
flw	opcodes.h	/^static uint32_t flw(unsigned int dest, unsigned int base, uint16_t offset)$/;"	f
fm	mmu.h	/^  flashmodel_t *fm;$/;"	m	class:mmu_t
format	buffer_controller.h	/^	int format;$/;"	m	class:buffer_controller_t
format_t	buffer_controller.h	/^typedef enum {FMT_CSR=0, FMT_BV=1, FMT_RL=2} format_t;$/;"	t	typeref:enum:__anon3
fpr	interactive.cc	/^union fpr$/;"	u	file:
fpr_name	regnames.cc	/^const char* fpr_name[] = {$/;"	v
freg	decode.h	/^inline freg_t freg(float128_t f) { return f; }$/;"	f
freg	decode.h	/^inline freg_t freg(float32_t f) { return { ((uint64_t)-1 << 32) | f.v, (uint64_t)-1 }; }$/;"	f
freg	decode.h	/^inline freg_t freg(float64_t f) { return { f.v, (uint64_t)-1 }; }$/;"	f
freg_t	decode.h	/^typedef float128_t freg_t;$/;"	t
freq	memdelay.h	/^        double freq = (400\/3)*6, tCK = (3\/0.4)\/6;$/;"	m	struct:memdelay_t::SpeedEntry
frm	processor.h	/^  uint32_t frm;$/;"	m	struct:state_t
from_be	byteorder.h	/^template<typename T> static inline T from_be(T n) { return n; }$/;"	f
from_be	byteorder.h	/^template<typename T> static inline T from_be(T n) { return swap(n); }$/;"	f
from_le	byteorder.h	/^template<typename T> static inline T from_le(T n) { return n; }$/;"	f
from_le	byteorder.h	/^template<typename T> static inline T from_le(T n) { return swap(n); }$/;"	f
fsd	opcodes.h	/^static uint32_t fsd(unsigned int src, unsigned int base, uint16_t offset)$/;"	f
fsgnj128	decode.h	/^inline freg_t fsgnj128(freg_t a, freg_t b, bool n, bool x)$/;"	f
fsgnj32	decode.h	267;"	d
fsgnj64	decode.h	269;"	d
fsw	opcodes.h	/^static uint32_t fsw(unsigned int src, unsigned int base, uint16_t offset)$/;"	f
func	mmu.h	/^  insn_func_t func;$/;"	m	struct:insn_fetch_t
funct	rocc.h	/^  unsigned funct : 7;$/;"	m	struct:rocc_insn_t
future_timing	memdelay.h	/^	vector<pair<int, timing_table>> future_timing;$/;"	m	class:memdelay_t
get_bc	processor.h	/^  buffer_controller_t* get_bc() { return bc; }$/;"	f	class:processor_t
get_core	interactive.cc	/^processor_t *sim_t::get_core(const std::string& i)$/;"	f	class:sim_t
get_core	sim.h	/^  processor_t* get_core(size_t i) { return procs.at(i); }$/;"	f	class:sim_t
get_csr	processor.cc	/^reg_t processor_t::get_csr(int which)$/;"	f	class:processor_t
get_disasms	rocc.cc	/^std::vector<disasm_insn_t*> rocc_t::get_disasms()$/;"	f	class:rocc_t
get_disassembler	processor.h	/^  const disassembler_t* get_disassembler() { return disassembler; }$/;"	f	class:processor_t
get_dts	sim.h	/^  const char* get_dts() { if (dts.empty()) reset(); return dts.c_str(); }$/;"	f	class:sim_t
get_elen	processor.h	/^    reg_t get_elen() { return ELEN; }$/;"	f	class:vectorUnit_t
get_extension	processor.h	/^  extension_t* get_extension() { return ext; }$/;"	f	class:processor_t
get_field	decode.h	198;"	d
get_flen	processor.h	/^  unsigned get_flen() {$/;"	f	class:processor_t
get_freg	interactive.cc	/^freg_t sim_t::get_freg(const std::vector<std::string>& args)$/;"	f	class:sim_t
get_instructions	rocc.cc	/^std::vector<insn_desc_t> rocc_t::get_instructions()$/;"	f	class:rocc_t
get_isa_string	processor.h	/^  std::string get_isa_string() { return isa_string; }$/;"	f	class:processor_t
get_log_commits	processor.h	/^  bool get_log_commits() { return log_commits_enabled; }$/;"	f	class:processor_t
get_mask	disasm.h	/^  uint32_t get_mask() const { return mask; }$/;"	f	class:disasm_insn_t
get_match	disasm.h	/^  uint32_t get_match() const { return match; }$/;"	f	class:disasm_insn_t
get_max_xlen	processor.h	/^  unsigned get_max_xlen() { return max_xlen; }$/;"	f	class:processor_t
get_mem	interactive.cc	/^reg_t sim_t::get_mem(const std::vector<std::string>& args)$/;"	f	class:sim_t
get_mmu	processor.h	/^  mmu_t* get_mmu() { return mmu; }$/;"	f	class:processor_t
get_name	disasm.h	/^  const char* get_name() const$/;"	f	class:disasm_insn_t
get_pc	interactive.cc	/^reg_t sim_t::get_pc(const std::vector<std::string>& args)$/;"	f	class:sim_t
get_reg	interactive.cc	/^reg_t sim_t::get_reg(const std::vector<std::string>& args)$/;"	f	class:sim_t
get_slen	processor.h	/^    reg_t get_slen() { return SLEN; }$/;"	f	class:vectorUnit_t
get_state	processor.h	/^  state_t* get_state() { return &state; }$/;"	f	class:processor_t
get_tval	trap.h	/^  virtual reg_t get_tval() { return 0; }$/;"	f	class:trap_t
get_vlen	processor.h	/^    reg_t get_vlen() { return VLEN; }$/;"	f	class:vectorUnit_t
get_vround_mode	processor.h	/^    VRM get_vround_mode() {$/;"	f	class:vectorUnit_t
get_xlen	processor.h	/^  unsigned get_xlen() { return xlen; }$/;"	f	class:processor_t
greater	insns/fmax_d.h	/^bool greater = f64_lt_quiet(f64(FRS2), f64(FRS1)) ||$/;"	v
greater	insns/fmax_q.h	/^bool greater = f128_lt_quiet(f128(FRS2), f128(FRS1)) ||$/;"	v
greater	insns/fmax_s.h	/^bool greater = f32_lt_quiet(f32(FRS2), f32(FRS1)) ||$/;"	v
h	processor.h	/^  bool h;$/;"	m	struct:__anon19
halt	processor.h	/^  bool halt;$/;"	m	struct:__anon16
halt_on_reset	processor.h	/^  bool halt_on_reset;$/;"	m	class:processor_t
halt_request	processor.h	/^  bool halt_request;$/;"	m	class:processor_t
halted	debug_module.h	/^  bool halted;$/;"	m	struct:__anon10
halted	processor.h	/^  bool halted() { return state.debug_mode; }$/;"	f	class:processor_t
haltgroup	debug_module.h	/^  uint8_t haltgroup;$/;"	m	struct:__anon10
haltreq	debug_module.h	/^  bool haltreq;$/;"	m	struct:__anon5
handle_signal	sim.cc	/^static void handle_signal(int sig)$/;"	f	file:
hart_array_mask	debug_module.h	/^    std::vector<bool> hart_array_mask;$/;"	m	class:debug_module_t
hart_debug_state_t	debug_module.h	/^} hart_debug_state_t;$/;"	t	typeref:struct:__anon10
hart_selected	debug_module.cc	/^bool debug_module_t::hart_selected(unsigned hartid) const$/;"	f	class:debug_module_t
hart_state	debug_module.h	/^    std::vector<hart_debug_state_t> hart_state;$/;"	m	class:debug_module_t
hartreset	debug_module.h	/^  bool hartreset;$/;"	m	struct:__anon5
hartsel	debug_module.h	/^  unsigned hartsel;$/;"	m	struct:__anon5
hartsellen	debug_module.h	/^    unsigned hartsellen = 10;$/;"	m	class:debug_module_t
has_one	insns/vmsbf_m.h	/^bool has_one = false;$/;"	v
has_one	insns/vmsif_m.h	/^bool has_one = false;$/;"	v
has_one	insns/vmsof_m.h	/^bool has_one = false;$/;"	v
has_tval	trap.h	/^  virtual bool has_tval() { return false; }$/;"	f	class:trap_t
hasel	debug_module.h	/^  bool hasel;$/;"	m	struct:__anon5
have_reservation	insns/sc_d.h	/^bool have_reservation = MMU.check_load_reservation(RS1);$/;"	v
have_reservation	insns/sc_w.h	/^bool have_reservation = MMU.check_load_reservation(RS1);$/;"	v
havereset	debug_module.h	/^  bool havereset;$/;"	m	struct:__anon10
hawindowsel	debug_module.h	/^    uint16_t hawindowsel;$/;"	m	class:debug_module_t
help	cachesim.cc	/^static void help()$/;"	f	file:
histogram_enabled	processor.h	/^  bool histogram_enabled;$/;"	m	class:processor_t
histogram_enabled	sim.h	/^  bool histogram_enabled; \/\/ provide a histogram of PCs$/;"	m	class:sim_t
hook	memtracer.h	/^  void hook(memtracer_t* h)$/;"	f	class:memtracer_list_t
host	sim.h	/^  context_t* host;$/;"	m	class:sim_t
host_offset	mmu.h	/^  char* host_offset;$/;"	m	struct:tlb_entry_t
i	rocc.h	/^  insn_t i;$/;"	m	union:rocc_insn_union_t
i_imm	decode.h	/^  int64_t i_imm() { return int64_t(b) >> 20; }$/;"	f	class:insn_t
icache	mmu.h	/^  icache_entry_t icache[ICACHE_ENTRIES];$/;"	m	class:mmu_t
icache_entry_t	mmu.h	/^struct icache_entry_t {$/;"	s
icache_index	mmu.h	/^  inline size_t icache_index(reg_t addr)$/;"	f	class:mmu_t
icache_sim_t	cachesim.h	/^  icache_sim_t(const char* config) : cache_memtracer_t(config, "I$") {}$/;"	f	class:icache_sim_t
icache_sim_t	cachesim.h	/^class icache_sim_t : public cache_memtracer_t$/;"	c
id	flashmodel.h	/^		int64_t id;			\/\/unique 4 digit id of this request derived from its channel, chip, die and plane id$/;"	m	struct:flashmodel_t::LookUpTable_t
id	memdelay.h	/^        int64_t id;$/;"	m	struct:memdelay_t::Bank
id	memdelay.h	/^        int64_t id;$/;"	m	struct:memdelay_t::Channel
id	processor.h	/^  uint32_t id;$/;"	m	class:processor_t
idcode	jtag_dtm.h	/^  static const unsigned idcode = 0xdeadbeef;$/;"	m	class:jtag_dtm_t
idle	sim.cc	/^void sim_t::idle()$/;"	f	class:sim_t
idx	flashmodel.h	/^			uint64_t idx;$/;"	m	struct:flashmodel_t::Flash_Cache::Line
idx_shift	cachesim.h	/^  size_t idx_shift;$/;"	m	class:cache_sim_t
idxbits	mmu.h	/^  int idxbits;$/;"	m	struct:vm_info
illegal_instruction	extension.cc	/^void extension_t::illegal_instruction()$/;"	f	class:extension_t
illegal_instruction	processor.cc	/^reg_t illegal_instruction(processor_t* p, insn_t insn, reg_t pc)$/;"	f
imm_sign	decode.h	/^  uint64_t imm_sign() { return xs(63, 1); }$/;"	f	class:insn_t
impebreak	debug_module.h	/^  bool impebreak;$/;"	m	struct:__anon6
increment	clint.cc	/^void clint_t::increment(reg_t inc)$/;"	f	class:clint_t
index	buffer_controller.h	/^    reg_t index;$/;"	m	class:buffer_controller_t
index	mmu.h	/^    int index;$/;"	m	class:trigger_matched_t
init	cachesim.cc	/^void cache_sim_t::init()$/;"	f	class:cache_sim_t
initialize	prefetcher.cc	/^void prefetcher_t::initialize(reg_t addr, uint8_t * data)$/;"	f	class:prefetcher_t
initialize_delays	delay.cc	/^void processor_t::initialize_delays(const char* timing)$/;"	f	class:processor_t
insn	mmu.h	/^  insn_t insn;$/;"	m	struct:insn_fetch_t
insn_bits_t	decode.h	/^typedef uint64_t insn_bits_t;$/;"	t
insn_desc_t	processor.h	/^struct insn_desc_t$/;"	s
insn_fetch_t	mmu.h	/^struct insn_fetch_t$/;"	s
insn_func_t	processor.h	/^typedef reg_t (*insn_func_t)(processor_t*, insn_t, reg_t);$/;"	t
insn_length	decode.h	60;"	d
insn_t	decode.h	/^  insn_t(insn_bits_t bits) : b(bits) {}$/;"	f	class:insn_t
insn_t	decode.h	/^class insn_t$/;"	c
instructions	processor.h	/^  std::vector<insn_desc_t> instructions;$/;"	m	class:processor_t
int128_t	decode.h	/^typedef __int128 int128_t;$/;"	t
int_max	insns/vnclip_vi.h	/^int64_t int_max = (1 << (P.VU.vsew - 1)) - 1;$/;"	v
int_max	insns/vnclip_vv.h	/^int64_t int_max = (1 << (P.VU.vsew - 1)) - 1;$/;"	v
int_max	insns/vnclip_vx.h	/^int64_t int_max = (1 << (P.VU.vsew - 1)) - 1;$/;"	v
int_max	insns/vnclipu_vi.h	/^uint64_t int_max = ~(-1ll << P.VU.vsew);$/;"	v
int_max	insns/vnclipu_vv.h	/^uint64_t int_max = ~(-1ll << P.VU.vsew);$/;"	v
int_max	insns/vnclipu_vx.h	/^uint64_t int_max = ~(-1ll << P.VU.vsew);$/;"	v
int_max	insns/vsmul_vv.h	/^int64_t int_max = (uint64_t(1) << (P.VU.vsew - 1)) - 1;$/;"	v
int_max	insns/vsmul_vx.h	/^int64_t int_max = (uint64_t(1) << (P.VU.vsew - 1)) - 1;$/;"	v
int_min	insns/vnclip_vi.h	/^int64_t int_min = -(1 << (P.VU.vsew - 1));$/;"	v
int_min	insns/vnclip_vv.h	/^int64_t int_min = -(1 << (P.VU.vsew - 1));$/;"	v
int_min	insns/vnclip_vx.h	/^int64_t int_min = -(1 << (P.VU.vsew - 1));$/;"	v
int_min	insns/vsmul_vv.h	/^int64_t int_min = - (1 << (P.VU.vsew - 1));$/;"	v
int_min	insns/vsmul_vx.h	/^int64_t int_min = - (1 << (P.VU.vsew - 1));$/;"	v
interactive	interactive.cc	/^void sim_t::interactive()$/;"	f	class:sim_t
interactive_freg	interactive.cc	/^void sim_t::interactive_freg(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_fregd	interactive.cc	/^void sim_t::interactive_fregd(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_fregs	interactive.cc	/^void sim_t::interactive_fregs(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_help	interactive.cc	/^void sim_t::interactive_help(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_mem	interactive.cc	/^void sim_t::interactive_mem(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_pc	interactive.cc	/^void sim_t::interactive_pc(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_quit	interactive.cc	/^void sim_t::interactive_quit(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_reg	interactive.cc	/^void sim_t::interactive_reg(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_run	interactive.cc	/^void sim_t::interactive_run(const std::string& cmd, const std::vector<std::string>& args, bool noisy)$/;"	f	class:sim_t
interactive_run_noisy	interactive.cc	/^void sim_t::interactive_run_noisy(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_run_silent	interactive.cc	/^void sim_t::interactive_run_silent(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_str	interactive.cc	/^void sim_t::interactive_str(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_until	interactive.cc	/^void sim_t::interactive_until(const std::string& cmd, const std::vector<std::string>& args, bool noisy)$/;"	f	class:sim_t
interactive_until_noisy	interactive.cc	/^void sim_t::interactive_until_noisy(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_until_silent	interactive.cc	/^void sim_t::interactive_until_silent(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interactive_vreg	interactive.cc	/^void sim_t::interactive_vreg(const std::string& cmd, const std::vector<std::string>& args)$/;"	f	class:sim_t
interested_in_range	cachesim.h	/^  bool interested_in_range(uint64_t begin, uint64_t end, access_type type)$/;"	f	class:dcache_sim_t
interested_in_range	cachesim.h	/^  bool interested_in_range(uint64_t begin, uint64_t end, access_type type)$/;"	f	class:icache_sim_t
interested_in_range	memtracer.h	/^  bool interested_in_range(uint64_t begin, uint64_t end, access_type type)$/;"	f	class:memtracer_list_t
invalid_pc	decode.h	249;"	d
ioqueue	flashmodel.h	/^		list<Request> ioqueue;$/;"	m	struct:flashmodel_t::Controller
ir	jtag_dtm.h	/^    uint32_t ir;$/;"	m	class:jtag_dtm_t
ir_length	jtag_dtm.h	/^    const unsigned ir_length = 5;$/;"	m	class:jtag_dtm_t
isBCRange	processor.cc	/^int processor_t::isBCRange(reg_t addr) { $/;"	f	class:processor_t
isBoxedF32	decode.h	252;"	d
isBoxedF64	decode.h	254;"	d
isNaNF128	decode.h	272;"	d
isPrefetchRange	processor.cc	/^int processor_t::isPrefetchRange(reg_t addr){$/;"	f	class:processor_t
is_dirty_enabled	mmu.h	/^  int is_dirty_enabled()$/;"	f	class:mmu_t
is_fpu_reg	debug_module.cc	/^static bool is_fpu_reg(unsigned regno)$/;"	f	file:
is_misaligned_enabled	mmu.h	/^  int is_misaligned_enabled()$/;"	f	class:mmu_t
is_overlapped	decode.h	/^static inline bool is_overlapped(const int astart, const int asize,$/;"	f
isa_string	processor.h	/^  std::string isa_string;$/;"	m	class:processor_t
jal	opcodes.h	/^static uint32_t jal(unsigned int rd, uint32_t imm) {$/;"	f
jtag_dtm_t	jtag_dtm.cc	/^jtag_dtm_t::jtag_dtm_t(debug_module_t *dm, unsigned required_rti_cycles) :$/;"	f	class:jtag_dtm_t
jtag_dtm_t	jtag_dtm.h	/^class jtag_dtm_t$/;"	c
jtag_state_t	jtag_dtm.h	/^} jtag_state_t;$/;"	t	typeref:enum:__anon13
l2_tick	processor.cc	/^void processor_t::l2_tick()$/;"	f	class:processor_t
last_bits	processor.h	/^  uint64_t last_pc, last_bits, executions;$/;"	m	class:processor_t
last_cmd	memdelay.h	/^        int last_cmd;$/;"	m	struct:memdelay_t::Bank
last_inst_flen	processor.h	/^  int last_inst_flen;$/;"	m	struct:state_t
last_inst_priv	processor.h	/^  reg_t last_inst_priv;$/;"	m	struct:state_t
last_inst_xlen	processor.h	/^  int last_inst_xlen;$/;"	m	struct:state_t
last_pc	processor.h	/^  uint64_t last_pc, last_bits, executions;$/;"	m	class:processor_t
last_prefetch_line	prefetcher.h	/^		reg_t last_prefetch_line;$/;"	m	struct:prefetcher_t::Sbuffer_t
last_type	memdelay.h	/^        int last_type;          \/\/last request type to this bank; (read,1 or write,2)$/;"	m	struct:memdelay_t::Bank
lb	opcodes.h	/^static uint32_t lb(unsigned int rd, unsigned int base, uint16_t offset)$/;"	f
ld	opcodes.h	/^static uint32_t ld(unsigned int rd, unsigned int base, uint16_t offset)$/;"	f
legalize_privilege	processor.cc	/^reg_t processor_t::legalize_privilege(reg_t prv)$/;"	f	class:processor_t
len	devices.h	/^  size_t len;$/;"	m	class:mem_t
length	decode.h	/^  int length() { return insn_length(b); }$/;"	f	class:insn_t
less	insns/fmin_d.h	/^bool less = f64_lt_quiet(f64(FRS1), f64(FRS2)) ||$/;"	v
less	insns/fmin_q.h	/^bool less = f128_lt_quiet(f128(FRS1), f128(FRS2)) ||$/;"	v
less	insns/fmin_s.h	/^bool less = f32_lt_quiet(f32(FRS1), f32(FRS2)) ||$/;"	v
levels	mmu.h	/^  int levels;$/;"	m	struct:vm_info
lfsr	cachesim.h	/^  lfsr_t lfsr;$/;"	m	class:cache_sim_t
lfsr_t	cachesim.h	/^  lfsr_t() : reg(1) {}$/;"	f	class:lfsr_t
lfsr_t	cachesim.h	/^  lfsr_t(const lfsr_t& lfsr) : reg(lfsr.reg) {}$/;"	f	class:lfsr_t
lfsr_t	cachesim.h	/^class lfsr_t$/;"	c
lh	opcodes.h	/^static uint32_t lh(unsigned int rd, unsigned int base, uint16_t offset)$/;"	f
lhs	insns/div.h	/^  WRITE_RD(lhs);$/;"	v
lhs	insns/div.h	/^sreg_t lhs = sext_xlen(RS1);$/;"	v
lhs	insns/divu.h	/^reg_t lhs = zext_xlen(RS1);$/;"	v
lhs	insns/divuw.h	/^reg_t lhs = zext32(RS1);$/;"	v
lhs	insns/divw.h	/^sreg_t lhs = sext32(RS1);$/;"	v
lhs	insns/rem.h	/^  WRITE_RD(lhs);$/;"	v
lhs	insns/rem.h	/^sreg_t lhs = sext_xlen(RS1);$/;"	v
lhs	insns/remu.h	/^reg_t lhs = zext_xlen(RS1);$/;"	v
lhs	insns/remuw.h	/^reg_t lhs = zext32(RS1);$/;"	v
lhs	insns/remw.h	/^  WRITE_RD(lhs);$/;"	v
lhs	insns/remw.h	/^sreg_t lhs = sext32(RS1);$/;"	v
likely	common.h	6;"	d
line_count	flashmodel.h	/^		int64_t line_count;			\/\/flash_cache_size\/line_size;	if size is 2048KB, then line_count is 2048\/32 = 65536 lines$/;"	m	struct:flashmodel_t::Flash_Cache
line_size	flashmodel.h	/^		int64_t line_size; $/;"	m	struct:flashmodel_t::Flash_Cache
line_size	prefetcher.h	/^	int line_size;$/;"	m	class:prefetcher_t
lines	flashmodel.h	/^		vector<Line> lines;$/;"	m	struct:flashmodel_t::Flash_Cache
linesz	cachesim.h	/^  size_t linesz;$/;"	m	class:cache_sim_t
list	memtracer.h	/^  std::vector<memtracer_t*> list;$/;"	m	class:memtracer_list_t
load	clint.cc	/^bool clint_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:clint_t
load	debug_module.cc	/^bool debug_module_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:debug_module_t
load	devices.cc	/^bool bus_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:bus_t
load	devices.cc	/^bool mmio_plugin_device_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:mmio_plugin_device_t
load	devices.h	/^  bool load(reg_t addr, size_t len, uint8_t* bytes) { return false; }$/;"	f	class:mem_t
load	mmio_plugin.h	/^  bool (*load)(void*, reg_t, size_t, uint8_t*);$/;"	m	struct:__anon14
load	mmio_plugin.h	/^  static bool load(void* self, reg_t addr, size_t len, uint8_t* bytes)$/;"	f	struct:mmio_plugin_registration_t
load	processor.cc	/^bool processor_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:processor_t
load	processor.h	/^  bool load;$/;"	m	struct:__anon19
load	rom.cc	/^bool rom_device_t::load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:rom_device_t
load_float128	mmu.h	/^  float128_t load_float128(reg_t addr)$/;"	f	class:mmu_t
load_func	mmu.h	90;"	d
load_insn	mmu.h	/^  inline insn_fetch_t load_insn(reg_t addr)$/;"	f	class:mmu_t
load_reservation_address	mmu.h	/^  reg_t load_reservation_address;$/;"	m	class:mmu_t
load_slow_path	mmu.cc	/^void mmu_t::load_slow_path(processor_t *proc, reg_t addr, reg_t len, uint8_t* bytes, bool req_host)$/;"	f	class:mmu_t
log	cachesim.h	/^  bool log;$/;"	m	class:cache_sim_t
log	sim.h	/^  bool log;$/;"	m	class:sim_t
log2	memdelay.h	/^    int log2(int val)$/;"	f	class:memdelay_t
log_commits_enabled	processor.h	/^  bool log_commits_enabled;$/;"	m	class:processor_t
log_commits_enabled	sim.h	/^  bool log_commits_enabled;$/;"	m	class:sim_t
log_lines	mmu.h	/^  int log_lines = 5;$/;"	m	class:mmu_t
log_lines	prefetcher.h	/^	int log_lines;$/;"	m	class:prefetcher_t
log_mem_write	processor.h	/^  commit_log_mem_t log_mem_write;$/;"	m	struct:state_t
log_reg_write	processor.h	/^  commit_log_reg_t log_reg_write;$/;"	m	struct:state_t
lookup_table	processor.h	/^  std::vector<table_entry> lookup_table;$/;"	m	class:processor_t
lookuptable	flashmodel.h	/^	vector<LookUpTable_t> lookuptable;$/;"	m	class:flashmodel_t
lui	opcodes.h	/^static uint32_t lui(unsigned int dest, uint32_t imm)$/;"	f
lw	opcodes.h	/^static uint32_t lw(unsigned int rd, unsigned int base, uint16_t offset)$/;"	f
m	processor.h	/^  bool m;$/;"	m	struct:__anon19
m_cols_addr	prefetcher.h	/^	reg_t m_cols_addr;$/;"	m	class:prefetcher_t
m_vals_addr	prefetcher.h	/^	reg_t m_vals_addr;$/;"	m	class:prefetcher_t
main	sim.cc	/^void sim_t::main()$/;"	f	class:sim_t
make_dtb	sim.cc	/^void sim_t::make_dtb()$/;"	f	class:sim_t
make_dts	dts.cc	/^std::string make_dts(size_t insns_per_rtc_tick, size_t cpu_hz,$/;"	f
mask	disasm.h	/^  uint32_t mask;$/;"	m	class:disasm_insn_t
mask	processor.h	/^  insn_bits_t mask;$/;"	m	struct:insn_desc_t
maskmax	processor.h	/^  uint8_t maskmax;$/;"	m	struct:__anon19
match	disasm.h	/^  uint32_t match;$/;"	m	class:disasm_insn_t
match	processor.h	/^  insn_bits_t match;$/;"	m	struct:insn_desc_t
match	processor.h	/^  mcontrol_match_t match;$/;"	m	struct:__anon19
match_opcode	processor.h	/^    insn_bits_t match_opcode;$/;"	m	struct:processor_t::table_entry
matched_trigger	mmu.h	/^  trigger_matched_t *matched_trigger;$/;"	m	class:mmu_t
max_bus_master_bits	debug_module.h	/^    unsigned max_bus_master_bits;$/;"	m	struct:__anon4
max_isa	processor.h	/^  reg_t max_isa;$/;"	m	class:processor_t
max_xlen	processor.h	/^  unsigned max_xlen;$/;"	m	class:processor_t
mcause	processor.h	/^  reg_t mcause;$/;"	m	struct:state_t
mcontrol	processor.h	/^  mcontrol_t mcontrol[num_triggers];$/;"	m	struct:state_t
mcontrol_action_t	processor.h	/^} mcontrol_action_t;$/;"	t	typeref:enum:__anon17
mcontrol_match_t	processor.h	/^} mcontrol_match_t;$/;"	t	typeref:enum:__anon18
mcontrol_t	processor.h	/^} mcontrol_t;$/;"	t	typeref:struct:__anon19
mcounteren	processor.h	/^  uint32_t mcounteren;$/;"	m	struct:state_t
md	mmu.h	/^  memdelay_t *md;$/;"	m	class:mmu_t
medeleg	processor.h	/^  reg_t medeleg;$/;"	m	struct:state_t
mem_speed	memdelay.h	/^	float mem_speed;$/;"	m	class:memdelay_t
mem_t	devices.h	/^  mem_t(size_t size) : len(size) {$/;"	f	class:mem_t
mem_t	devices.h	/^class mem_t : public abstract_device_t {$/;"	c
mem_trap_t	trap.h	/^  mem_trap_t(reg_t which, reg_t tval)$/;"	f	class:mem_trap_t
mem_trap_t	trap.h	/^class mem_trap_t : public trap_t$/;"	c
memdelay_t	memdelay.cc	/^memdelay_t::memdelay_t()$/;"	f	class:memdelay_t
memdelay_t	memdelay.h	/^class memdelay_t$/;"	c
memory_wait_cycles	processor.h	/^  uint64_t memory_wait_cycles = 0;		\/\/cycles CPU waited for all memory requests$/;"	m	class:processor_t
mems	sim.h	/^  std::vector<std::pair<reg_t, mem_t*>> mems;$/;"	m	class:sim_t
memtracer_list_t	memtracer.h	/^class memtracer_list_t : public memtracer_t$/;"	c
memtracer_t	memtracer.h	/^  memtracer_t() {}$/;"	f	class:memtracer_t
memtracer_t	memtracer.h	/^class memtracer_t$/;"	c
mepc	processor.h	/^  reg_t mepc;$/;"	m	struct:state_t
mideleg	processor.h	/^  reg_t mideleg;$/;"	m	struct:state_t
midx	insns/vcompress_vm.h	/^  const int midx = (mlen * i) \/ 64;$/;"	v
mie	processor.h	/^  reg_t mie;$/;"	m	struct:state_t
minstret	processor.h	/^  reg_t minstret;$/;"	m	struct:state_t
mip	processor.h	/^  reg_t mip;$/;"	m	struct:state_t
misa	processor.h	/^  reg_t misa;$/;"	m	struct:state_t
misaligned_load	mmu.h	/^  inline reg_t misaligned_load(reg_t addr, size_t size)$/;"	f	class:mmu_t
misaligned_store	mmu.h	/^  inline void misaligned_store(reg_t addr, reg_t data, size_t size)$/;"	f	class:mmu_t
miss_handler	cachesim.h	/^  cache_sim_t* miss_handler;$/;"	m	class:cache_sim_t
mlen	insns/vcompress_vm.h	/^  const int mlen = P.VU.vmlen;$/;"	v
mmio_load	mmu.cc	/^bool mmu_t::mmio_load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:mmu_t
mmio_load	sim.cc	/^bool sim_t::mmio_load(reg_t addr, size_t len, uint8_t* bytes)$/;"	f	class:sim_t
mmio_ok	mmu.cc	/^bool mmu_t::mmio_ok(reg_t addr, access_type type)$/;"	f	class:mmu_t
mmio_plugin_device_t	devices.cc	/^mmio_plugin_device_t::mmio_plugin_device_t(const std::string& name,$/;"	f	class:mmio_plugin_device_t
mmio_plugin_device_t	devices.h	/^class mmio_plugin_device_t : public abstract_device_t {$/;"	c
mmio_plugin_map	devices.cc	/^static mmio_plugin_map_t& mmio_plugin_map()$/;"	f	file:
mmio_plugin_registration_t	mmio_plugin.h	/^  mmio_plugin_registration_t(const std::string& name)$/;"	f	struct:mmio_plugin_registration_t
mmio_plugin_registration_t	mmio_plugin.h	/^struct mmio_plugin_registration_t$/;"	s
mmio_plugin_t	mmio_plugin.h	/^} mmio_plugin_t;$/;"	t	typeref:struct:__anon14
mmio_store	mmu.cc	/^bool mmu_t::mmio_store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:mmu_t
mmio_store	sim.cc	/^bool sim_t::mmio_store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:sim_t
mmu	buffer_controller.h	/^    mmu_t * mmu;$/;"	m	class:buffer_controller_t
mmu	flashmodel.h	/^	mmu_t* mmu;$/;"	m	class:flashmodel_t
mmu	prefetcher.h	/^	mmu_t * mmu;$/;"	m	class:prefetcher_t
mmu	processor.h	/^  mmu_t* mmu; \/\/ main memory is always accessed via the mmu$/;"	m	class:processor_t
mmu_t	mmu.cc	/^mmu_t::mmu_t(simif_t* sim, processor_t* proc)$/;"	f	class:mmu_t
mmu_t	mmu.h	/^class mmu_t$/;"	c
mnemonic	processor.h	/^    std::string mnemonic;$/;"	m	struct:processor_t::table_entry
mpos	insns/vcompress_vm.h	/^  const int mpos = (mlen * i) % 64;$/;"	v
mscratch	processor.h	/^  reg_t mscratch;$/;"	m	struct:state_t
msip_t	devices.h	/^  typedef uint32_t msip_t;$/;"	t	class:clint_t
mstatus	processor.h	/^  reg_t mstatus;$/;"	m	struct:state_t
mtime	devices.h	/^  mtime_t mtime;$/;"	m	class:clint_t
mtime_t	devices.h	/^  typedef uint64_t mtime_t;$/;"	t	class:clint_t
mtimecmp	devices.h	/^  std::vector<mtimecmp_t> mtimecmp;$/;"	m	class:clint_t
mtimecmp_t	devices.h	/^  typedef uint64_t mtimecmp_t;$/;"	t	class:clint_t
mtval	processor.h	/^  reg_t mtval;$/;"	m	struct:state_t
mtvec	processor.h	/^  reg_t mtvec;$/;"	m	struct:state_t
mulh	arith.h	/^inline int64_t mulh(int64_t a, int64_t b)$/;"	f
mulhsu	arith.h	/^inline int64_t mulhsu(int64_t a, uint64_t b)$/;"	f
mulhu	arith.h	/^inline uint64_t mulhu(uint64_t a, uint64_t b)$/;"	f
n	buffer_controller.h	/^    unsigned long n;$/;"	m	class:buffer_controller_t
nBL	memdelay.h	/^        int nBL = 4, nCCDS = 4, nCCDL = 5, nRTRS = 2;$/;"	m	struct:memdelay_t::SpeedEntry
nCCDL	memdelay.h	/^        int nBL = 4, nCCDS = 4, nCCDL = 5, nRTRS = 2;$/;"	m	struct:memdelay_t::SpeedEntry
nCCDS	memdelay.h	/^        int nBL = 4, nCCDS = 4, nCCDL = 5, nRTRS = 2;$/;"	m	struct:memdelay_t::SpeedEntry
nCKESR	memdelay.h	/^        int nCKESR = 5, nXS = 0, nXSDLL = 0; \/\/ nXSDLL TBD (nDLLK), nXS = (tRFC+10ns)\/tCK$/;"	m	struct:memdelay_t::SpeedEntry
nCL	memdelay.h	/^        int nCL = 11, nRCD = 11, nRP = 11, nCWL = 9;$/;"	m	struct:memdelay_t::SpeedEntry
nCWL	memdelay.h	/^        int nCL = 11, nRCD = 11, nRP = 11, nCWL = 9;$/;"	m	struct:memdelay_t::SpeedEntry
nFAW	memdelay.h	/^        int nRRDS = 0, nRRDL = 0, nFAW = 0;$/;"	m	struct:memdelay_t::SpeedEntry
nPD	memdelay.h	/^        int nPD = 4, nXP = 5, nXPDLL = 0; \/\/ XPDLL not found in DDR4??$/;"	m	struct:memdelay_t::SpeedEntry
nRAS	memdelay.h	/^        int nRAS = 28, nRC = 39;$/;"	m	struct:memdelay_t::SpeedEntry
nRC	memdelay.h	/^        int nRAS = 28, nRC = 39;$/;"	m	struct:memdelay_t::SpeedEntry
nRCD	memdelay.h	/^        int nCL = 11, nRCD = 11, nRP = 11, nCWL = 9;$/;"	m	struct:memdelay_t::SpeedEntry
nREFI	memdelay.h	/^        int nRFC = 0, nREFI = 0;$/;"	m	struct:memdelay_t::SpeedEntry
nRFC	memdelay.h	/^        int nRFC = 0, nREFI = 0;$/;"	m	struct:memdelay_t::SpeedEntry
nRP	memdelay.h	/^        int nCL = 11, nRCD = 11, nRP = 11, nCWL = 9;$/;"	m	struct:memdelay_t::SpeedEntry
nRRDL	memdelay.h	/^        int nRRDS = 0, nRRDL = 0, nFAW = 0;$/;"	m	struct:memdelay_t::SpeedEntry
nRRDS	memdelay.h	/^        int nRRDS = 0, nRRDL = 0, nFAW = 0;$/;"	m	struct:memdelay_t::SpeedEntry
nRTP	memdelay.h	/^        int nRTP = 6, nWTRS = 2, nWTRL = 6, nWR = 12;$/;"	m	struct:memdelay_t::SpeedEntry
nRTRS	memdelay.h	/^        int nBL = 4, nCCDS = 4, nCCDL = 5, nRTRS = 2;$/;"	m	struct:memdelay_t::SpeedEntry
nWR	memdelay.h	/^        int nRTP = 6, nWTRS = 2, nWTRL = 6, nWR = 12;$/;"	m	struct:memdelay_t::SpeedEntry
nWTRL	memdelay.h	/^        int nRTP = 6, nWTRS = 2, nWTRL = 6, nWR = 12;$/;"	m	struct:memdelay_t::SpeedEntry
nWTRS	memdelay.h	/^        int nRTP = 6, nWTRS = 2, nWTRL = 6, nWR = 12;$/;"	m	struct:memdelay_t::SpeedEntry
nXP	memdelay.h	/^        int nPD = 4, nXP = 5, nXPDLL = 0; \/\/ XPDLL not found in DDR4??$/;"	m	struct:memdelay_t::SpeedEntry
nXPDLL	memdelay.h	/^        int nPD = 4, nXP = 5, nXPDLL = 0; \/\/ XPDLL not found in DDR4??$/;"	m	struct:memdelay_t::SpeedEntry
nXS	memdelay.h	/^        int nCKESR = 5, nXS = 0, nXSDLL = 0; \/\/ nXSDLL TBD (nDLLK), nXS = (tRFC+10ns)\/tCK$/;"	m	struct:memdelay_t::SpeedEntry
nXSDLL	memdelay.h	/^        int nCKESR = 5, nXS = 0, nXSDLL = 0; \/\/ nXSDLL TBD (nDLLK), nXS = (tRFC+10ns)\/tCK$/;"	m	struct:memdelay_t::SpeedEntry
n_pmp	processor.h	/^  static const int n_pmp = 16;$/;"	m	struct:state_t
name	cachesim.h	/^  std::string name;$/;"	m	class:cache_sim_t
name	disasm.h	/^  const char* name;$/;"	m	class:disasm_insn_t
name	trap.cc	/^const char* trap_t::name()$/;"	f	class:trap_t
ndmreset	debug_module.h	/^  bool ndmreset;$/;"	m	struct:__anon5
next	cachesim.h	/^  uint32_t next() { return reg = (reg>>1)^(-(reg&1) & 0xd0000001); }$/;"	f	class:lfsr_t
next	mmu.h	/^  struct icache_entry_t* next;$/;"	m	struct:icache_entry_t	typeref:struct:icache_entry_t::icache_entry_t
next_free_clock	memdelay.h	/^		uint64_t next_free_clock;$/;"	m	struct:memdelay_t::Bank
next_free_clock	memdelay.h	/^        uint64_t next_free_clock;$/;"	m	struct:memdelay_t::Channel
nf	insns/vleff_v.h	/^const reg_t nf = insn.v_nf() + 1;$/;"	v
nnz	buffer_controller.h	/^    int32_t nnz;$/;"	m	class:buffer_controller_t
nnz_cols	buffer_controller.h	/^    reg_t nnz_cols;$/;"	m	class:buffer_controller_t
nnz_next_row	buffer_controller.h	/^    reg_t nnz_next_row = 0;$/;"	m	class:buffer_controller_t
nnz_present_row	buffer_controller.h	/^    reg_t nnz_present_row = 0;$/;"	m	class:buffer_controller_t
nprocs	debug_module.h	/^    unsigned nprocs;$/;"	m	class:debug_module_t
nprocs	sim.h	/^  unsigned nprocs() const { return procs.size(); }$/;"	f	class:sim_t
num_insn	processor.h	/^  uint64_t num_insn;$/;"	m	class:processor_t
num_triggers	processor.h	/^  static const int num_triggers = 4;$/;"	m	struct:state_t
offset	insns/vslidedown_vi.h	/^reg_t offset = 0;$/;"	v
offset	insns/vslidedown_vx.h	/^reg_t offset = 0;$/;"	v
offset	insns/vslideup_vi.h	/^const reg_t offset = insn.v_zimm5();$/;"	v
offset	insns/vslideup_vx.h	/^const reg_t offset = RS1;$/;"	v
old	insns/csrrc.h	/^reg_t old = p->get_csr(csr);$/;"	v
old	insns/csrrci.h	/^reg_t old = p->get_csr(csr);$/;"	v
old	insns/csrrs.h	/^reg_t old = p->get_csr(csr);$/;"	v
old	insns/csrrsi.h	/^reg_t old = p->get_csr(csr);$/;"	v
old	insns/csrrw.h	/^reg_t old = p->get_csr(csr);$/;"	v
old	insns/csrrwi.h	/^reg_t old = p->get_csr(csr);$/;"	v
op	buffer_controller.h	/^	int op;$/;"	m	class:buffer_controller_t
opcode	rocc.h	/^  unsigned opcode : 7;$/;"	m	struct:rocc_insn_t
opcode_cache	processor.h	/^  insn_desc_t opcode_cache[OPCODE_CACHE_SIZE];$/;"	m	class:processor_t
operation	mmu.h	/^    trigger_operation_t operation;$/;"	m	class:trigger_matched_t
operation_t	buffer_controller.h	/^typedef enum {OP_EXPAND=0, OP_NO_EXPAND=1} operation_t;$/;"	t	typeref:enum:__anon2
operator ==	disasm.h	/^  bool operator == (insn_t insn) const$/;"	f	class:disasm_insn_t
operator []	decode.h	/^  const T& operator [] (size_t i) const$/;"	f	class:regfile_t
opt	disasm.h	/^} opt;$/;"	v	typeref:struct:__anon11
override	devices.h	/^  virtual bool load(reg_t addr, size_t len, uint8_t* bytes) override;$/;"	m	class:mmio_plugin_device_t
override	devices.h	/^  virtual bool store(reg_t addr, size_t len, const uint8_t* bytes) override;$/;"	m	class:mmio_plugin_device_t
override	devices.h	/^  virtual ~mmio_plugin_device_t() override;$/;"	m	class:mmio_plugin_device_t
p	extension.h	/^  processor_t* p;$/;"	m	class:extension_t
p	processor.h	/^    processor_t* p;$/;"	m	class:vectorUnit_t
paddr_bits	processor.cc	/^int processor_t::paddr_bits()$/;"	f	class:processor_t
paddr_ok	sim.cc	/^static bool paddr_ok(reg_t addr)$/;"	f	file:
parse_isa_string	processor.cc	/^void processor_t::parse_isa_string(const char* str)$/;"	f	class:processor_t
parse_priv_string	processor.cc	/^void processor_t::parse_priv_string(const char* str)$/;"	f	class:processor_t
parse_varch	processor.cc	/^static int parse_varch(std::string &str){$/;"	f	file:
parse_varch_string	processor.cc	/^void processor_t::parse_varch_string(const char* s)$/;"	f	class:processor_t
pc	insns/c_ebreak.h	/^throw trap_breakpoint(pc);$/;"	v
pc	insns/ebreak.h	/^throw trap_breakpoint(pc);$/;"	v
pc	processor.h	/^  reg_t pc;$/;"	m	struct:state_t
pc_alignment_mask	processor.h	/^  reg_t pc_alignment_mask() {$/;"	f	class:processor_t
pc_histogram	processor.h	/^  std::map<reg_t,uint64_t> pc_histogram;$/;"	m	class:processor_t
pending_previous_cluster_num	buffer_controller.h	/^    int32_t pending_previous_cluster_num = 0;$/;"	m	class:buffer_controller_t
pending_previous_cluster_start	buffer_controller.h	/^	int32_t pending_previous_cluster_start = 0;$/;"	m	class:buffer_controller_t
perform_abstract_command	debug_module.cc	/^bool debug_module_t::perform_abstract_command()$/;"	f	class:debug_module_t
pf	mmu.h	/^  prefetcher_t *pf;$/;"	m	class:mmu_t
pf_hits	prefetcher.h	/^	uint64_t pf_hits = 0;$/;"	m	class:prefetcher_t
pf_req_wait	mmu.h	/^  reg_t pf_req_wait = 0;$/;"	m	class:mmu_t
pf_window_hits	prefetcher.h	/^	uint64_t pf_window_hits = 0;$/;"	m	class:prefetcher_t
plugin	devices.h	/^  mmio_plugin_t plugin;$/;"	m	class:mmio_plugin_device_t
plugin_devices	sim.h	/^  std::vector<std::pair<reg_t, abstract_device_t*>> plugin_devices;$/;"	m	class:sim_t
pmp_homogeneous	mmu.cc	/^reg_t mmu_t::pmp_homogeneous(reg_t addr, reg_t len)$/;"	f	class:mmu_t
pmp_ok	mmu.cc	/^reg_t mmu_t::pmp_ok(reg_t addr, reg_t len, access_type type, reg_t mode)$/;"	f	class:mmu_t
pmpaddr	processor.h	/^  reg_t pmpaddr[n_pmp];$/;"	m	struct:state_t
pmpcfg	processor.h	/^  uint8_t pmpcfg[n_pmp];$/;"	m	struct:state_t
popcount	insns/vpopc_m.h	/^WRITE_RD(popcount);$/;"	v
popcount	insns/vpopc_m.h	/^reg_t popcount = 0;$/;"	v
pos	insns/vcompress_vm.h	/^reg_t pos = 0;$/;"	v
pos	insns/vfirst_m.h	/^WRITE_RD(pos);$/;"	v
pos	insns/vfirst_m.h	/^reg_t pos = -1;$/;"	v
pp	prefetcher.h	/^	vector<reg_t> *pp;$/;"	m	class:prefetcher_t
pref	flashmodel.h	/^		bool pref;$/;"	m	struct:flashmodel_t::Request
pref	memdelay.h	/^		bool pref;$/;"	m	struct:memdelay_t::Request
prefetch	prefetcher.cc	/^void prefetcher_t::prefetch(reg_t line)$/;"	f	class:prefetcher_t
prefetch_call_count	prefetcher.h	/^	uint64_t prefetch_call_count = 0;$/;"	m	class:prefetcher_t
prefetch_flag	prefetcher.h	/^	bool prefetch_flag;$/;"	m	class:prefetcher_t
prefetch_req	prefetcher.h	/^	uint64_t prefetch_req;$/;"	m	class:prefetcher_t
prefetch_wait	mmu.h	/^  uint64_t prefetch_wait = 0;$/;"	m	class:mmu_t
prefetcher_t	prefetcher.cc	/^prefetcher_t::prefetcher_t(mmu_t* _mmu, processor_t* _proc)$/;"	f	class:prefetcher_t
prefetcher_t	prefetcher.h	/^class prefetcher_t$/;"	c
present_col	buffer_controller.h	/^    int32_t present_col = -1;   \/\/B col or Bt row$/;"	m	class:buffer_controller_t
present_row	buffer_controller.h	/^    int32_t present_row = 0;   \/\/A row$/;"	m	class:buffer_controller_t
prev_clk	buffer_controller.h	/^	long prev_clk = 0;$/;"	m	class:buffer_controller_t
prev_prv	insns/mret.h	/^reg_t prev_prv = get_field(s, MSTATUS_MPP);$/;"	v
prev_prv	insns/sret.h	/^reg_t prev_prv = get_field(s, MSTATUS_SPP);$/;"	v
previous_processed_col	buffer_controller.h	/^	int previous_processed_col;$/;"	m	class:buffer_controller_t
print_stats	cachesim.cc	/^void cache_sim_t::print_stats()$/;"	f	class:cache_sim_t
proc	buffer_controller.h	/^	processor_t *proc;$/;"	m	class:buffer_controller_t
proc	mmu.h	/^  processor_t* proc;$/;"	m	class:mmu_t
proc	prefetcher.h	/^	processor_t *proc;$/;"	m	class:prefetcher_t
proc_reset	debug_module.cc	/^void debug_module_t::proc_reset(unsigned id)$/;"	f	class:debug_module_t
proc_reset	sim.cc	/^void sim_t::proc_reset(unsigned id)$/;"	f	class:sim_t
proc_speed	processor.h	/^  float proc_speed;  $/;"	m	class:processor_t
processed_cols	buffer_controller.h	/^    int32_t processed_cols = 0; \/\/this counts the column entries of possibly multipl clusters for one vector$/;"	m	class:buffer_controller_t
processor	debug_module.cc	/^processor_t *debug_module_t::processor(unsigned hartid) const$/;"	f	class:debug_module_t
processor_t	processor.cc	/^processor_t::processor_t(const char* isa, const char* priv, const char* varch,$/;"	f	class:processor_t
processor_t	processor.h	/^class processor_t : public abstract_device_t$/;"	c
procs	devices.h	/^  std::vector<processor_t*>& procs;$/;"	m	class:clint_t
procs	sim.h	/^  std::vector<processor_t*> procs;$/;"	m	class:sim_t
progbufsize	debug_module.h	/^    unsigned progbufsize;$/;"	m	struct:__anon4
progbufsize	debug_module.h	/^  unsigned progbufsize;$/;"	m	struct:__anon7
program_buffer	debug_module.h	/^    uint8_t *program_buffer;$/;"	m	class:debug_module_t
program_buffer_bytes	debug_module.h	/^    unsigned program_buffer_bytes;$/;"	m	class:debug_module_t
program_delay	flashmodel.h	/^		static const int64_t program_delay = 0;	\/\/820 us                                                                                                                           $/;"	m	struct:flashmodel_t::Flash
prv	processor.h	/^  reg_t prv;    \/\/ TODO: Can this be an enum instead?$/;"	m	struct:state_t
prv	processor.h	/^  uint8_t prv;$/;"	m	struct:__anon16
ptbase	mmu.h	/^  reg_t ptbase;$/;"	m	struct:vm_info
ptesize	mmu.h	/^  int ptesize;$/;"	m	struct:vm_info
qsize	memdelay.h	/^	uint32_t qsize;$/;"	m	class:memdelay_t
r	interactive.cc	/^  freg_t r;$/;"	m	union:fpr	file:
r	rocc.h	/^  rocc_insn_t r;$/;"	m	union:rocc_insn_union_t
raise_interrupt	extension.cc	/^void extension_t::raise_interrupt()$/;"	f	class:extension_t
rate	memdelay.h	/^        int rate = 1600;$/;"	m	struct:memdelay_t::SpeedEntry
rd	decode.h	/^  uint64_t rd() { return x(7, 5); }$/;"	f	class:insn_t
rd	rocc.h	/^  unsigned rd : 5;$/;"	m	struct:rocc_insn_t
rd_num	insns/vfirst_m.h	/^reg_t rd_num = insn.rd();$/;"	v
rd_num	insns/vid_v.h	/^reg_t rd_num = insn.rd();$/;"	v
rd_num	insns/viota_m.h	/^reg_t rd_num = insn.rd();$/;"	v
rd_num	insns/vleff_v.h	/^const reg_t rd_num = insn.rd();$/;"	v
rd_num	insns/vmsbf_m.h	/^reg_t rd_num = insn.rd();$/;"	v
rd_num	insns/vmsif_m.h	/^reg_t rd_num = insn.rd();$/;"	v
rd_num	insns/vmsof_m.h	/^reg_t rd_num = insn.rd();$/;"	v
rd_num	insns/vpopc_m.h	/^reg_t rd_num = insn.rd();$/;"	v
rdcycle	encoding.h	214;"	d
rdinstret	encoding.h	215;"	d
rdtime	encoding.h	213;"	d
read32	debug_module.cc	/^uint32_t debug_module_t::read32(uint8_t *memory, unsigned int index)$/;"	f	class:debug_module_t
read_accesses	cachesim.h	/^  uint64_t read_accesses;$/;"	m	class:cache_sim_t
read_buffer	buffer_controller.cc	/^uint32_t buffer_controller_t::read_buffer()$/;"	f	class:buffer_controller_t
read_buffer_id	buffer_controller.h	/^	int read_buffer_id;$/;"	m	class:buffer_controller_t
read_chunk	sim.cc	/^void sim_t::read_chunk(addr_t taddr, size_t len, void* dst)$/;"	f	class:sim_t
read_csr	encoding.h	194;"	d
read_delay	flashmodel.h	/^        static const int64_t read_delay = 10;		\/\/$/;"	m	struct:flashmodel_t::Flash_Cache
read_delay	flashmodel.h	/^        static const int64_t read_delay = 1200;		\/\/cycles @200MHz or 60 us$/;"	m	struct:flashmodel_t::Flash
read_misses	cachesim.h	/^  uint64_t read_misses;$/;"	m	class:cache_sim_t
readline	interactive.cc	/^static std::string readline(int fd)$/;"	f	file:
readonaddr	debug_module.h	/^  bool readonaddr;$/;"	m	struct:__anon9
readondata	debug_module.h	/^  bool readondata;$/;"	m	struct:__anon9
ready_flag	buffer_controller.h	/^	bool ready_flag = false;$/;"	m	class:buffer_controller_t
record_clk	processor.h	/^  bool record_clk = 0;$/;"	m	class:processor_t
recv_buf	remote_bitbang.h	/^  char recv_buf[buf_size];$/;"	m	class:remote_bitbang_t
recv_end	remote_bitbang.h	/^  ssize_t recv_start, recv_end;$/;"	m	class:remote_bitbang_t
recv_start	remote_bitbang.h	/^  ssize_t recv_start, recv_end;$/;"	m	class:remote_bitbang_t
refill_icache	mmu.h	/^  inline icache_entry_t* refill_icache(reg_t addr, icache_entry_t* entry)$/;"	f	class:mmu_t
refill_tlb	mmu.cc	/^tlb_entry_t mmu_t::refill_tlb(reg_t vaddr, reg_t paddr, char* host_addr, access_type type)$/;"	f	class:mmu_t
reg	cachesim.h	/^  uint32_t reg;$/;"	m	class:lfsr_t
reg_file	processor.h	/^    void *reg_file;$/;"	m	class:vectorUnit_t
reg_from_bytes	mmu.cc	/^reg_t reg_from_bytes(size_t len, const uint8_t* bytes)$/;"	f
reg_mask	processor.h	/^    reg_t reg_mask, vlmax, vmlen;$/;"	m	class:vectorUnit_t
reg_referenced	processor.h	/^    char reg_referenced[NVPR];$/;"	m	class:vectorUnit_t
reg_t	decode.h	/^typedef uint64_t reg_t;$/;"	t
reg_t	mmio_plugin.h	/^typedef uint64_t reg_t;$/;"	t
regfile_t	decode.h	/^class regfile_t$/;"	c
register_base_instructions	processor.cc	/^void processor_t::register_base_instructions()$/;"	f	class:processor_t
register_extension	extensions.cc	/^void register_extension(const char* name, std::function<extension_t*()> f)$/;"	f
register_extension	processor.cc	/^void processor_t::register_extension(extension_t* x)$/;"	f	class:processor_t
register_insn	processor.cc	/^void processor_t::register_insn(insn_desc_t desc)$/;"	f	class:processor_t
register_memtracer	mmu.cc	/^void mmu_t::register_memtracer(memtracer_t* t)$/;"	f	class:mmu_t
register_mmio_plugin	devices.cc	/^void register_mmio_plugin(const char* name_cstr,$/;"	f
remote_bitbang	sim.h	/^  remote_bitbang_t* remote_bitbang;$/;"	m	class:sim_t
remote_bitbang_t	remote_bitbang.cc	/^remote_bitbang_t::remote_bitbang_t(uint16_t port, jtag_dtm_t *tap) :$/;"	f	class:remote_bitbang_t
remote_bitbang_t	remote_bitbang.h	/^class remote_bitbang_t$/;"	c
req	flashmodel.h	/^		Request req;$/;"	m	struct:flashmodel_t::LookUpTable_t
req	memdelay.h	/^        Request req;     $/;"	m	struct:memdelay_t::Bank
req	memdelay.h	/^        Request req;$/;"	m	struct:memdelay_t::Channel
req_satisfied	memdelay.h	/^	bool req_satisfied;$/;"	m	class:memdelay_t
req_satisfied	mmu.h	/^  bool req_satisfied;$/;"	m	class:mmu_t
req_send	memdelay.cc	/^int memdelay_t::req_send(uint64_t addr, int type)$/;"	f	class:memdelay_t
request_count	memdelay.h	/^		uint64_t request_count;$/;"	m	struct:memdelay_t::Bank
require	decode.h	201;"	d
require_accelerator	decode.h	207;"	d
require_authentication	debug_module.h	/^    bool require_authentication;$/;"	m	struct:__anon4
require_extension	decode.h	205;"	d
require_fp	decode.h	206;"	d
require_privilege	decode.h	202;"	d
require_rv32	decode.h	204;"	d
require_rv64	decode.h	203;"	d
require_vector	decode.h	210;"	d
require_vector_for_vsetvl	decode.h	211;"	d
require_vector_vs	decode.h	209;"	d
required_rti_cycles	jtag_dtm.h	/^    unsigned required_rti_cycles;$/;"	m	class:jtag_dtm_t
reset	debug_module.cc	/^void debug_module_t::reset()$/;"	f	class:debug_module_t
reset	extension.h	/^  virtual void reset() {};$/;"	f	class:extension_t
reset	jtag_dtm.cc	/^void jtag_dtm_t::reset() {$/;"	f	class:jtag_dtm_t
reset	processor.cc	/^void processor_t::reset()$/;"	f	class:processor_t
reset	processor.cc	/^void state_t::reset(reg_t max_isa)$/;"	f	class:state_t
reset	processor.cc	/^void vectorUnit_t::reset(){$/;"	f	class:vectorUnit_t
reset	sim.cc	/^void sim_t::reset()$/;"	f	class:sim_t
resume_pos	buffer_controller.h	/^    int32_t resume_pos = 0;$/;"	m	class:buffer_controller_t
resumeack	debug_module.h	/^  bool resumeack;$/;"	m	struct:__anon10
resumereq	debug_module.h	/^  bool resumereq;$/;"	m	struct:__anon5
rhs	insns/div.h	/^sreg_t rhs = sext_xlen(RS2);$/;"	v
rhs	insns/divu.h	/^reg_t rhs = zext_xlen(RS2);$/;"	v
rhs	insns/divuw.h	/^reg_t rhs = zext32(RS2);$/;"	v
rhs	insns/divw.h	/^sreg_t rhs = sext32(RS2);$/;"	v
rhs	insns/rem.h	/^sreg_t rhs = sext_xlen(RS2);$/;"	v
rhs	insns/remu.h	/^reg_t rhs = zext_xlen(RS2);$/;"	v
rhs	insns/remuw.h	/^reg_t rhs = zext32(RS2);$/;"	v
rhs	insns/remw.h	/^sreg_t rhs = sext32(RS2);$/;"	v
rm	decode.h	/^  uint64_t rm() { return x(12, 3); }$/;"	f	class:insn_t
rocc_insn_t	rocc.h	/^struct rocc_insn_t$/;"	s
rocc_insn_union_t	rocc.h	/^union rocc_insn_union_t$/;"	u
rocc_t	rocc.h	/^class rocc_t : public extension_t$/;"	c
roi_flash_cache_hits	flashmodel.h	/^	uint64_t roi_flash_cache_hits = 0;$/;"	m	class:flashmodel_t
roi_flash_cache_misses	flashmodel.h	/^	uint64_t roi_flash_cache_misses = 0;$/;"	m	class:flashmodel_t
rom_device_t	devices.h	/^class rom_device_t : public abstract_device_t {$/;"	c
rom_device_t	rom.cc	/^rom_device_t::rom_device_t(std::vector<char> data)$/;"	f	class:rom_device_t
row_base	buffer_controller.h	/^    reg_t row_base;$/;"	m	class:buffer_controller_t
row_clusters	buffer_controller.h	/^	reg_t row_clusters = 0;$/;"	m	class:buffer_controller_t
row_conflicts	memdelay.h	/^		uint64_t row_conflicts;$/;"	m	struct:memdelay_t::Bank
row_done	buffer_controller.h	/^    bool row_done = true;$/;"	m	class:buffer_controller_t
row_next_pos	buffer_controller.h	/^    reg_t row_next_pos;$/;"	m	class:buffer_controller_t
row_pos	buffer_controller.h	/^    reg_t row_pos;$/;"	m	class:buffer_controller_t
rqueue	memdelay.h	/^			list<Request> rqueue;$/;"	m	struct:memdelay_t::Channel::Controller
rs1	decode.h	/^  uint64_t rs1() { return x(15, 5); }$/;"	f	class:insn_t
rs1	insns/vmv_x_s.h	/^reg_t rs1 = RS1;$/;"	v
rs1	insns/vrgather_vx.h	/^reg_t rs1 = RS1;$/;"	v
rs1	insns/vwsmaccus_vx.h	/^VI_VVX_LOOP_WIDE_US_SSMA(rs1);$/;"	v
rs1	rocc.h	/^  unsigned rs1 : 5;$/;"	m	struct:rocc_insn_t
rs1_num	insns/vid_v.h	/^reg_t rs1_num = insn.rs1();$/;"	v
rs1_num	insns/viota_m.h	/^reg_t rs1_num = insn.rs1();$/;"	v
rs1_num	insns/vmsbf_m.h	/^reg_t rs1_num = insn.rs1();$/;"	v
rs1_num	insns/vmsif_m.h	/^reg_t rs1_num = insn.rs1();$/;"	v
rs1_num	insns/vmsof_m.h	/^reg_t rs1_num = insn.rs1();$/;"	v
rs2	decode.h	/^  uint64_t rs2() { return x(20, 5); }$/;"	f	class:insn_t
rs2	rocc.h	/^  unsigned rs2 : 5;$/;"	m	struct:rocc_insn_t
rs2_num	insns/vfirst_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v
rs2_num	insns/vfmv_f_s.h	/^reg_t rs2_num = insn.rs2();$/;"	v
rs2_num	insns/vid_v.h	/^reg_t rs2_num = insn.rs2();$/;"	v
rs2_num	insns/viota_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v
rs2_num	insns/vmsbf_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v
rs2_num	insns/vmsif_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v
rs2_num	insns/vmsof_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v
rs2_num	insns/vmv_x_s.h	/^reg_t rs2_num = insn.rs2();$/;"	v
rs2_num	insns/vpopc_m.h	/^reg_t rs2_num = insn.rs2();$/;"	v
rs3	decode.h	/^  uint64_t rs3() { return x(27, 5); }$/;"	f	class:insn_t
rti_remaining	debug_module.h	/^    unsigned rti_remaining;$/;"	m	class:debug_module_t
rti_remaining	jtag_dtm.h	/^    unsigned rti_remaining;$/;"	m	class:jtag_dtm_t
run	sim.cc	/^int sim_t::run()$/;"	f	class:sim_t
run_test_idle	debug_module.cc	/^void debug_module_t::run_test_idle()$/;"	f	class:debug_module_t
rv32	processor.h	/^  insn_func_t rv32;$/;"	m	struct:insn_desc_t
rv32_NAME	insn_template.cc	/^reg_t rv32_NAME(processor_t* p, insn_t insn, reg_t pc)$/;"	f
rv64	processor.h	/^  insn_func_t rv64;$/;"	m	struct:insn_desc_t
rv64_NAME	insn_template.cc	/^reg_t rv64_NAME(processor_t* p, insn_t insn, reg_t pc)$/;"	f
rvc_addi16sp_imm	decode.h	/^  int64_t rvc_addi16sp_imm() { return (x(6, 1) << 4) + (x(2, 1) << 5) + (x(5, 1) << 6) + (x(3, 2) << 7) + (xs(12, 1) << 9); }$/;"	f	class:insn_t
rvc_addi4spn_imm	decode.h	/^  int64_t rvc_addi4spn_imm() { return (x(6, 1) << 2) + (x(5, 1) << 3) + (x(11, 2) << 4) + (x(7, 4) << 6); }$/;"	f	class:insn_t
rvc_b_imm	decode.h	/^  int64_t rvc_b_imm() { return (x(3, 2) << 1) + (x(10, 2) << 3) + (x(2, 1) << 5) + (x(5, 2) << 6) + (xs(12, 1) << 8); }$/;"	f	class:insn_t
rvc_imm	decode.h	/^  int64_t rvc_imm() { return x(2, 5) + (xs(12, 1) << 5); }$/;"	f	class:insn_t
rvc_j_imm	decode.h	/^  int64_t rvc_j_imm() { return (x(3, 3) << 1) + (x(11, 1) << 4) + (x(2, 1) << 5) + (x(7, 1) << 6) + (x(6, 1) << 7) + (x(9, 2) << 8) + (x(8, 1) << 10) + (xs(12, 1) << 11); }$/;"	f	class:insn_t
rvc_ld_imm	decode.h	/^  int64_t rvc_ld_imm() { return (x(10, 3) << 3) + (x(5, 2) << 6); }$/;"	f	class:insn_t
rvc_ldsp_imm	decode.h	/^  int64_t rvc_ldsp_imm() { return (x(5, 2) << 3) + (x(12, 1) << 5) + (x(2, 3) << 6); }$/;"	f	class:insn_t
rvc_lw_imm	decode.h	/^  int64_t rvc_lw_imm() { return (x(6, 1) << 2) + (x(10, 3) << 3) + (x(5, 1) << 6); }$/;"	f	class:insn_t
rvc_lwsp_imm	decode.h	/^  int64_t rvc_lwsp_imm() { return (x(4, 3) << 2) + (x(12, 1) << 5) + (x(2, 2) << 6); }$/;"	f	class:insn_t
rvc_rd	decode.h	/^  uint64_t rvc_rd() { return rd(); }$/;"	f	class:insn_t
rvc_rs1	decode.h	/^  uint64_t rvc_rs1() { return rd(); }$/;"	f	class:insn_t
rvc_rs1s	decode.h	/^  uint64_t rvc_rs1s() { return 8 + x(7, 3); }$/;"	f	class:insn_t
rvc_rs2	decode.h	/^  uint64_t rvc_rs2() { return x(2, 5); }$/;"	f	class:insn_t
rvc_rs2s	decode.h	/^  uint64_t rvc_rs2s() { return 8 + x(2, 3); }$/;"	f	class:insn_t
rvc_sdsp_imm	decode.h	/^  int64_t rvc_sdsp_imm() { return (x(10, 3) << 3) + (x(7, 3) << 6); }$/;"	f	class:insn_t
rvc_simm3	decode.h	/^  int64_t rvc_simm3() { return x(10, 3); }$/;"	f	class:insn_t
rvc_swsp_imm	decode.h	/^  int64_t rvc_swsp_imm() { return (x(9, 4) << 2) + (x(7, 2) << 6); }$/;"	f	class:insn_t
rvc_zimm	decode.h	/^  int64_t rvc_zimm() { return x(2, 5) + (x(12, 1) << 5); }$/;"	f	class:insn_t
s	insns/mret.h	/^reg_t s = STATE.mstatus;$/;"	v
s	insns/sret.h	/^reg_t s = STATE.mstatus;$/;"	v
s	interactive.cc	/^  float s;$/;"	m	union:fpr	file:
s	processor.h	/^  bool s;$/;"	m	struct:__anon19
s_imm	decode.h	/^  int64_t s_imm() { return x(7, 5) + (xs(25, 7) << 5); }$/;"	f	class:insn_t
sat	insns/vsadd_vi.h	/^bool sat = false;$/;"	v
sat	insns/vsadd_vv.h	/^bool sat = false;$/;"	v
sat	insns/vsadd_vx.h	/^bool sat = false;$/;"	v
sat	insns/vssub_vv.h	/^bool sat = false;$/;"	v
sat	insns/vssub_vx.h	/^bool sat = false;$/;"	v
sat	insns/vssubu_vv.h	/^bool sat = false;$/;"	v
sat	insns/vssubu_vx.h	/^bool sat = false;$/;"	v
sat_add	arith.h	/^static inline T sat_add(T x, T y, bool &sat)$/;"	f
sat_addu	arith.h	/^T sat_addu(T x, T y, bool &sat)$/;"	f
sat_sub	arith.h	/^static inline T sat_sub(T x, T y, bool &sat)$/;"	f
sat_subu	arith.h	/^T sat_subu(T x, T y, bool &sat)$/;"	f
satp	processor.h	/^  reg_t satp;$/;"	m	struct:state_t
sb	opcodes.h	/^static uint32_t sb(unsigned int src, unsigned int base, uint16_t offset)$/;"	f
sb	prefetcher.h	/^	struct Sbuffer_t *sb;$/;"	m	class:prefetcher_t	typeref:struct:prefetcher_t::Sbuffer_t
sb_access_bits	debug_module.cc	/^unsigned debug_module_t::sb_access_bits()$/;"	f	class:debug_module_t
sb_autoincrement	debug_module.cc	/^void debug_module_t::sb_autoincrement()$/;"	f	class:debug_module_t
sb_available_clk	prefetcher.h	/^		long sb_available_clk;$/;"	m	struct:prefetcher_t::Sbuffer_t
sb_imm	decode.h	/^  int64_t sb_imm() { return (x(8, 4) << 1) + (x(25,6) << 5) + (x(7,1) << 11) + (imm_sign() << 12); }$/;"	f	class:insn_t
sb_read	debug_module.cc	/^void debug_module_t::sb_read()$/;"	f	class:debug_module_t
sb_reset	prefetcher.h	/^	uint64_t sb_reset;$/;"	m	class:prefetcher_t
sb_size	prefetcher.h	/^	int sb_size;$/;"	m	class:prefetcher_t
sb_write	debug_module.cc	/^void debug_module_t::sb_write()$/;"	f	class:debug_module_t
sbaccess	debug_module.h	/^  unsigned sbaccess;$/;"	m	struct:__anon9
sbaddress	debug_module.h	/^    uint32_t sbaddress[4];$/;"	m	class:debug_module_t
sbcs	debug_module.h	/^    sbcs_t sbcs;$/;"	m	class:debug_module_t
sbcs_t	debug_module.h	/^} sbcs_t;$/;"	t	typeref:struct:__anon9
sbdata	debug_module.h	/^    uint32_t sbdata[4];$/;"	m	class:debug_module_t
scause	processor.h	/^  reg_t scause;$/;"	m	struct:state_t
scounteren	processor.h	/^  uint32_t scounteren;$/;"	m	struct:state_t
sd	opcodes.h	/^static uint32_t sd(unsigned int src, unsigned int base, uint16_t offset)$/;"	f
search_line_queue	memdelay.cc	/^bool memdelay_t::search_line_queue(reg_t line){		\/\/this function search queue to find line if final delays are completed.$/;"	f	class:memdelay_t
secret	debug_module.h	/^    const uint32_t secret = 1;$/;"	m	class:debug_module_t
select	processor.h	/^  bool select;$/;"	m	struct:__anon19
sepc	processor.h	/^  reg_t sepc;$/;"	m	struct:state_t
serialize	decode.h	243;"	d
serialized	processor.h	/^  bool serialized; \/\/ whether timer CSRs are in a well-defined state$/;"	m	struct:state_t
set_csr	encoding.h	205;"	d
set_csr	processor.cc	/^void processor_t::set_csr(int which, reg_t val)$/;"	f	class:processor_t
set_debug	extension.h	/^  virtual void set_debug(bool value) {};$/;"	f	class:extension_t
set_debug	processor.cc	/^void processor_t::set_debug(bool value)$/;"	f	class:processor_t
set_debug	sim.cc	/^void sim_t::set_debug(bool value)$/;"	f	class:sim_t
set_dtb_enabled	sim.h	/^  void set_dtb_enabled(bool value) {$/;"	f	class:sim_t
set_field	decode.h	199;"	d
set_fp_exceptions	decode.h	213;"	d
set_histogram	processor.cc	/^void processor_t::set_histogram(bool value)$/;"	f	class:processor_t
set_histogram	sim.cc	/^void sim_t::set_histogram(bool value)$/;"	f	class:sim_t
set_log	cachesim.h	/^  void set_log(bool _log) { log = _log; }$/;"	f	class:cache_sim_t
set_log	cachesim.h	/^  void set_log(bool log)$/;"	f	class:cache_memtracer_t
set_log	sim.cc	/^void sim_t::set_log(bool value)$/;"	f	class:sim_t
set_log_commits	processor.cc	/^void processor_t::set_log_commits(bool value)$/;"	f	class:processor_t
set_log_commits	sim.cc	/^void sim_t::set_log_commits(bool value)$/;"	f	class:sim_t
set_metadata	buffer_controller.cc	/^uint8_t *buffer_controller_t::set_metadata(reg_t addr)$/;"	f	class:buffer_controller_t
set_miss_handler	cachesim.h	/^  void set_miss_handler(cache_sim_t* mh) { miss_handler = mh; }$/;"	f	class:cache_sim_t
set_miss_handler	cachesim.h	/^  void set_miss_handler(cache_sim_t* mh)$/;"	f	class:cache_memtracer_t
set_pc	decode.h	224;"	d
set_pc_and_serialize	decode.h	229;"	d
set_pins	jtag_dtm.cc	/^void jtag_dtm_t::set_pins(bool tck, bool tms, bool tdi) {$/;"	f	class:jtag_dtm_t
set_privilege	processor.cc	/^void processor_t::set_privilege(reg_t prv)$/;"	f	class:processor_t
set_processor	extension.h	/^  void set_processor(processor_t* _p) { p = _p; }$/;"	f	class:extension_t
set_procs_debug	sim.cc	/^void sim_t::set_procs_debug(bool value)$/;"	f	class:sim_t
set_remote_bitbang	sim.h	/^  void set_remote_bitbang(remote_bitbang_t* remote_bitbang) {$/;"	f	class:sim_t
set_rowcount	memdelay.h	/^    int set_rowcount(MemSize memsize)$/;"	f	class:memdelay_t
set_vl	processor.cc	/^reg_t vectorUnit_t::set_vl(int regId, reg_t reqVL, reg_t newType){$/;"	f	class:vectorUnit_t
sets	cachesim.h	/^  size_t sets;$/;"	m	class:cache_sim_t
setvl_count	processor.h	/^    int setvl_count;$/;"	m	class:vectorUnit_t
sew	insns/vfirst_m.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vfmerge_vfm.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vfmv_f_s.h	/^const reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vfmv_v_f.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vid_v.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/viota_m.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vle_v.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vleff_v.h	/^const reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vlse_v.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vlxe_v.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vmsbf_m.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vmsif_m.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vmsof_m.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vmv_x_s.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vpopc_m.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vse_v.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vsse_v.h	/^reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vsuxe_v.h	/^const reg_t sew = P.VU.vsew;$/;"	v
sew	insns/vsxe_v.h	/^reg_t sew = P.VU.vsew;$/;"	v
sext32	decode.h	219;"	d
sext_xlen	decode.h	221;"	d
sh	insns/vslidedown_vi.h	/^const reg_t sh = insn.v_zimm5();$/;"	v
sh	insns/vslidedown_vx.h	/^const reg_t sh = RS1;$/;"	v
sh	opcodes.h	/^static uint32_t sh(unsigned int src, unsigned int base, uint16_t offset)$/;"	f
shamt	decode.h	/^  int64_t shamt() { return x(20, 6); }$/;"	f	class:insn_t
sign_mask	insns/vsmul_vv.h	/^int64_t sign_mask = uint64_t(1) << (P.VU.vsew - 1);$/;"	v
sign_mask	insns/vsmul_vx.h	/^int64_t sign_mask = uint64_t(1) << (P.VU.vsew - 1);$/;"	v
sim	debug_module.h	/^    sim_t *sim;$/;"	m	class:debug_module_t
sim	mmu.h	/^  simif_t* sim;$/;"	m	class:mmu_t
sim	processor.h	/^  simif_t* sim;$/;"	m	class:processor_t
sim_t	sim.cc	/^sim_t::sim_t(const char* isa, const char* priv, const char* varch,$/;"	f	class:sim_t
sim_t	sim.h	/^class sim_t : public htif_t, public simif_t$/;"	c
sim_thread_main	sim.cc	/^void sim_thread_main(void* arg)$/;"	f
simif_t	simif.h	/^class simif_t$/;"	c
single_step	processor.h	/^  } single_step;$/;"	m	struct:state_t	typeref:enum:state_t::__anon20
size	devices.h	/^  size_t size() { return CLINT_SIZE; }$/;"	f	class:clint_t
size	devices.h	/^  size_t size() { return len; }$/;"	f	class:mem_t
size	flashmodel.h	/^		int size = 16;			\/\/max size$/;"	m	struct:flashmodel_t::Controller
size	processor.h	/^  uint8_t size; \/\/ bytes: 1, 2, 4, or 8$/;"	m	struct:commit_log_mem_t
slow_path	execute.cc	/^bool processor_t::slow_path()$/;"	f	class:processor_t
socket_fd	remote_bitbang.h	/^  int socket_fd;$/;"	m	class:remote_bitbang_t
sreg_t	decode.h	/^typedef int64_t sreg_t;$/;"	t
srli	opcodes.h	/^static uint32_t srli(unsigned int dest, unsigned int src, uint8_t shamt)$/;"	f
sscratch	processor.h	/^  reg_t sscratch;$/;"	m	struct:state_t
start	buffer_controller.h	/^    unsigned long start;$/;"	m	class:buffer_controller_t
start_pc	sim.h	/^  reg_t start_pc;$/;"	m	class:sim_t
state	jtag_dtm.h	/^    jtag_state_t state() const { return _state; }$/;"	f	class:jtag_dtm_t
state	processor.h	/^  state_t state;$/;"	m	class:processor_t
state_t	processor.h	/^struct state_t$/;"	s
step	execute.cc	/^void processor_t::step(size_t n)$/;"	f	class:processor_t
step	processor.h	/^  bool step;$/;"	m	struct:__anon16
step	sim.cc	/^void sim_t::step(size_t n)$/;"	f	class:sim_t
store	clint.cc	/^bool clint_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:clint_t
store	debug_module.cc	/^bool debug_module_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:debug_module_t
store	devices.cc	/^bool bus_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:bus_t
store	devices.cc	/^bool mmio_plugin_device_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:mmio_plugin_device_t
store	devices.h	/^  bool store(reg_t addr, size_t len, const uint8_t* bytes) { return false; }$/;"	f	class:mem_t
store	mmio_plugin.h	/^  bool (*store)(void*, reg_t, size_t, const uint8_t*);$/;"	m	struct:__anon14
store	mmio_plugin.h	/^  static bool store(void* self, reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	struct:mmio_plugin_registration_t
store	processor.cc	/^bool processor_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:processor_t
store	processor.h	/^  bool store;$/;"	m	struct:__anon19
store	rom.cc	/^bool rom_device_t::store(reg_t addr, size_t len, const uint8_t* bytes)$/;"	f	class:rom_device_t
store_float128	mmu.h	/^  void store_float128(reg_t addr, float128_t val)$/;"	f	class:mmu_t
store_func	mmu.h	160;"	d
store_slow_path	mmu.cc	/^void mmu_t::store_slow_path(reg_t addr, reg_t len, const uint8_t* bytes)$/;"	f	class:mmu_t
stride	insns/vsuxb_v.h	/^reg_t stride = insn.rs2();$/;"	v
stride	insns/vsuxe_v.h	/^reg_t stride = insn.rs2();$/;"	v
stride	insns/vsuxh_v.h	/^reg_t stride = insn.rs2();$/;"	v
stride	insns/vsuxw_v.h	/^reg_t stride = insn.rs2();$/;"	v
strtolower	processor.cc	/^static std::string strtolower(const char* str)$/;"	f	file:
stval	processor.h	/^  reg_t stval;$/;"	m	struct:state_t
stvec	processor.h	/^  reg_t stvec;$/;"	m	struct:state_t
support_abstract_csr_access	debug_module.h	/^    bool support_abstract_csr_access;$/;"	m	struct:__anon4
support_haltgroups	debug_module.h	/^    bool support_haltgroups;$/;"	m	struct:__anon4
support_hasel	debug_module.h	/^    bool support_hasel;$/;"	m	struct:__anon4
supports_extension	processor.h	/^  bool supports_extension(unsigned char ext) {$/;"	f	class:processor_t
sw	opcodes.h	/^static uint32_t sw(unsigned int src, unsigned int base, uint16_t offset)$/;"	f
swap	byteorder.h	/^static inline int16_t swap(int16_t n) { return __builtin_bswap16(n); }$/;"	f
swap	byteorder.h	/^static inline int32_t swap(int32_t n) { return __builtin_bswap32(n); }$/;"	f
swap	byteorder.h	/^static inline int64_t swap(int64_t n) { return __builtin_bswap64(n); }$/;"	f
swap	byteorder.h	/^static inline int8_t swap(int8_t n) { return n; }$/;"	f
swap	byteorder.h	/^static inline uint16_t swap(uint16_t n) { return __builtin_bswap16(n); }$/;"	f
swap	byteorder.h	/^static inline uint32_t swap(uint32_t n) { return __builtin_bswap32(n); }$/;"	f
swap	byteorder.h	/^static inline uint64_t swap(uint64_t n) { return __builtin_bswap64(n); }$/;"	f
swap	byteorder.h	/^static inline uint8_t swap(uint8_t n) { return n; }$/;"	f
swap_csr	encoding.h	201;"	d
tCK	memdelay.h	/^        double freq = (400\/3)*6, tCK = (3\/0.4)\/6;$/;"	m	struct:memdelay_t::SpeedEntry
table_entry	processor.h	/^  struct table_entry$/;"	s	class:processor_t
tag	flashmodel.h	/^			uint64_t tag;$/;"	m	struct:flashmodel_t::Flash_Cache::Line
tag	mmu.h	/^  reg_t tag;$/;"	m	struct:icache_entry_t
tags	cachesim.h	/^  std::map<uint64_t, uint64_t> tags;$/;"	m	class:fa_cache_sim_t
tags	cachesim.h	/^  uint64_t* tags;$/;"	m	class:cache_sim_t
take_interrupt	processor.cc	/^void processor_t::take_interrupt(reg_t pending_interrupts)$/;"	f	class:processor_t
take_pending_interrupt	processor.h	/^  void take_pending_interrupt() { take_interrupt(state.mip & state.mie); }$/;"	f	class:processor_t
take_trap	processor.cc	/^void processor_t::take_trap(trap_t& t, reg_t epc)$/;"	f	class:processor_t
tap	remote_bitbang.h	/^  jtag_dtm_t *tap;$/;"	m	class:remote_bitbang_t
target	sim.h	/^  context_t target;$/;"	m	class:sim_t
target_offset	mmu.h	/^  reg_t target_offset;$/;"	m	struct:tlb_entry_t
tdata2	processor.h	/^  reg_t tdata2[num_triggers];$/;"	m	struct:state_t
tdo	jtag_dtm.h	/^    bool tdo() const { return _tdo; }$/;"	f	class:jtag_dtm_t
temp_clk	mmu.h	/^  uint64_t temp_clk = 0;	\/\/copy clock to check vector instruction loads$/;"	m	class:mmu_t
that	devices.h	/^  mem_t(const mem_t& that) = delete;$/;"	m	class:mem_t
throw_access_exception	mmu.cc	/^static void throw_access_exception(reg_t addr, access_type type)$/;"	f	file:
tick	flashmodel.cc	/^void flashmodel_t::tick(){$/;"	f	class:flashmodel_t
tick	memdelay.cc	/^bool memdelay_t::tick()$/;"	f	class:memdelay_t
tick	mmu.cc	/^void mmu_t::tick()$/;"	f	class:mmu_t
tick	processor.cc	/^void processor_t::tick()$/;"	f	class:processor_t
tick	remote_bitbang.cc	/^void remote_bitbang_t::tick()$/;"	f	class:remote_bitbang_t
timing	processor.h	/^  bool timing;$/;"	m	struct:__anon19
timing_delays	memdelay.cc	/^void memdelay_t::timing_delays()$/;"	f	class:memdelay_t
timing_table	memdelay.h	/^	struct timing_table{$/;"	s	class:memdelay_t
tlb_data	mmu.h	/^  tlb_entry_t tlb_data[TLB_ENTRIES];$/;"	m	class:mmu_t
tlb_entry_t	mmu.h	/^struct tlb_entry_t {$/;"	s
tlb_insn_tag	mmu.h	/^  reg_t tlb_insn_tag[TLB_ENTRIES];$/;"	m	class:mmu_t
tlb_load_tag	mmu.h	/^  reg_t tlb_load_tag[TLB_ENTRIES];$/;"	m	class:mmu_t
tlb_store_tag	mmu.h	/^  reg_t tlb_store_tag[TLB_ENTRIES];$/;"	m	class:mmu_t
tmp	insns/c_jalr.h	/^reg_t tmp = npc;$/;"	v
tmp	insns/jal.h	/^WRITE_RD(tmp);$/;"	v
tmp	insns/jal.h	/^reg_t tmp = npc;$/;"	v
tmp	insns/jalr.h	/^WRITE_RD(tmp);$/;"	v
tmp	insns/jalr.h	/^reg_t tmp = npc;$/;"	v
to_be	byteorder.h	/^template<typename T> static inline T to_be(T n) { return n; }$/;"	f
to_be	byteorder.h	/^template<typename T> static inline T to_be(T n) { return swap(n); }$/;"	f
to_f	decode.h	/^inline double to_f(float64_t f){double r; memcpy(&r, &f, sizeof(r)); return r;}$/;"	f
to_f	decode.h	/^inline float to_f(float32_t f){float r; memcpy(&r, &f, sizeof(r)); return r;}$/;"	f
to_f	decode.h	/^inline long double to_f(float128_t f){long double r; memcpy(&r, &f, sizeof(r)); return r;}$/;"	f
to_le	byteorder.h	/^template<typename T> static inline T to_le(T n) { return n; }$/;"	f
to_le	byteorder.h	/^template<typename T> static inline T to_le(T n) { return swap(n); }$/;"	f
to_string	disasm.h	/^  std::string to_string(insn_t insn) const { return ""; }$/;"	f	struct:__anon11
to_string	disasm.h	/^  std::string to_string(insn_t insn) const$/;"	f	class:disasm_insn_t
total_request_count	memdelay.h	/^		uint64_t total_request_count;$/;"	m	struct:memdelay_t::Bank
trace	cachesim.h	/^  int trace(uint64_t addr, size_t bytes, access_type type)$/;"	f	class:dcache_sim_t
trace	cachesim.h	/^  int trace(uint64_t addr, size_t bytes, access_type type)$/;"	f	class:icache_sim_t
trace	memtracer.h	/^  int trace(uint64_t addr, size_t bytes, access_type type)$/;"	f	class:memtracer_list_t
trace_opcode	tracer.h	/^static inline void trace_opcode(processor_t* p, insn_bits_t opc, insn_t insn) {$/;"	f
tracer	mmu.h	/^  memtracer_list_t tracer;$/;"	m	class:mmu_t
translate	mmu.cc	/^reg_t mmu_t::translate(reg_t addr, reg_t len, access_type type)$/;"	f	class:mmu_t
translate_insn_addr	mmu.h	/^  inline tlb_entry_t translate_insn_addr(reg_t addr) {$/;"	f	class:mmu_t
translate_insn_addr_to_host	mmu.h	/^  inline const uint16_t* translate_insn_addr_to_host(reg_t addr) {$/;"	f	class:mmu_t
trap_t	trap.h	/^  trap_t(reg_t which) : which(which) {}$/;"	f	class:trap_t
trap_t	trap.h	/^class trap_t$/;"	c
trigger_exception	mmu.h	/^  inline trigger_matched_t *trigger_exception(trigger_operation_t operation,$/;"	f	class:mmu_t
trigger_match	processor.h	/^  inline int trigger_match(trigger_operation_t operation, reg_t address, reg_t data)$/;"	f	class:processor_t
trigger_matched_t	mmu.h	/^    trigger_matched_t(int index,$/;"	f	class:trigger_matched_t
trigger_matched_t	mmu.h	/^class trigger_matched_t$/;"	c
trigger_operation_t	processor.h	/^} trigger_operation_t;$/;"	t	typeref:enum:__anon21
trigger_updated	processor.cc	/^void processor_t::trigger_updated()$/;"	f	class:processor_t
true	insns/vmerge_vvm.h	/^VI_CHECK_SSS(true);$/;"	v
true	insns/vmulhsu_vv.h	/^VI_CHECK_SSS(true);$/;"	v
true	insns/vsadd_vv.h	/^VI_CHECK_SSS(true);$/;"	v
true	insns/vssub_vv.h	/^VI_CHECK_SSS(true);$/;"	v
true	insns/vssubu_vv.h	/^VI_CHECK_SSS(true);$/;"	v
true	insns/vwadd_vv.h	/^VI_CHECK_DSS(true);$/;"	v
true	insns/vwadd_wv.h	/^VI_CHECK_DDS(true);$/;"	v
true	insns/vwaddu_vv.h	/^VI_CHECK_DSS(true);$/;"	v
true	insns/vwaddu_wv.h	/^VI_CHECK_DDS(true);$/;"	v
true	insns/vwmacc_vv.h	/^VI_CHECK_DSS(true);$/;"	v
true	insns/vwmaccsu_vv.h	/^VI_CHECK_DSS(true);$/;"	v
true	insns/vwmaccu_vv.h	/^VI_CHECK_DSS(true);$/;"	v
true	insns/vwmul_vv.h	/^VI_CHECK_DSS(true);$/;"	v
true	insns/vwmulsu_vv.h	/^VI_CHECK_DSS(true);$/;"	v
true	insns/vwmulu_vv.h	/^VI_CHECK_DSS(true);$/;"	v
true	insns/vwsub_vv.h	/^VI_CHECK_DSS(true);$/;"	v
true	insns/vwsub_wv.h	/^VI_CHECK_DDS(true);$/;"	v
true	insns/vwsubu_vv.h	/^VI_CHECK_DSS(true);$/;"	v
true	insns/vwsubu_wv.h	/^VI_CHECK_DDS(true);$/;"	v
tselect	processor.h	/^  reg_t tselect;$/;"	m	struct:state_t
tval	trap.h	/^  reg_t tval;$/;"	m	class:mem_trap_t
two	memdelay.h	/^        two, four$/;"	m	class:memdelay_t::MemSize
type	flashmodel.h	/^			Type type;$/;"	m	struct:flashmodel_t::Flash_Cache::Line
type	flashmodel.h	/^		Type type;$/;"	m	struct:flashmodel_t::Request
type	memdelay.h	/^        Type type;$/;"	m	struct:memdelay_t::Request
type	processor.h	/^  uint8_t type;$/;"	m	struct:__anon19
type_sew_t	processor.h	/^struct type_sew_t<16>$/;"	s
type_sew_t	processor.h	/^struct type_sew_t<32>$/;"	s
type_sew_t	processor.h	/^struct type_sew_t<64>$/;"	s
type_sew_t	processor.h	/^struct type_sew_t<8>$/;"	s
type_usew_t	processor.h	/^struct type_usew_t<16>$/;"	s
type_usew_t	processor.h	/^struct type_usew_t<32>$/;"	s
type_usew_t	processor.h	/^struct type_usew_t<64>$/;"	s
type_usew_t	processor.h	/^struct type_usew_t<8>$/;"	s
u	processor.h	/^  bool u;$/;"	m	struct:__anon19
u_imm	decode.h	/^  int64_t u_imm() { return int64_t(b) >> 12 << 12; }$/;"	f	class:insn_t
uint128_t	decode.h	/^typedef unsigned __int128 uint128_t;$/;"	t
uj_imm	decode.h	/^  int64_t uj_imm() { return (x(21, 10) << 1) + (x(20, 1) << 11) + (x(12, 8) << 12) + (imm_sign() << 20); }$/;"	f	class:insn_t
unboxF32	decode.h	253;"	d
unboxF64	decode.h	255;"	d
under_process	buffer_controller.h	/^	bool under_process = false;$/;"	m	class:buffer_controller_t
unlikely	common.h	7;"	d
update_dr	jtag_dtm.cc	/^void jtag_dtm_t::update_dr()$/;"	f	class:jtag_dtm_t
update_histogram	execute.cc	/^inline void processor_t::update_histogram(reg_t pc)$/;"	f	class:processor_t
user_data	devices.h	/^  void* user_data;$/;"	m	class:mmio_plugin_device_t
v_base	buffer_controller.h	/^    reg_t v_base;$/;"	m	class:buffer_controller_t
v_lmul	decode.h	/^  uint64_t v_lmul() { return 1 << x(20, 2); }$/;"	f	class:insn_t
v_nf	decode.h	/^  uint64_t v_nf() { return x(29, 3); }$/;"	f	class:insn_t
v_sew	decode.h	/^  uint64_t v_sew() { return 1 << (x(22, 3) + 3); }$/;"	f	class:insn_t
v_simm5	decode.h	/^  uint64_t v_simm5() { return xs(15, 5); }$/;"	f	class:insn_t
v_vals_addr	prefetcher.h	/^	reg_t v_vals_addr;$/;"	m	class:prefetcher_t
v_vm	decode.h	/^  uint64_t v_vm() { return x(25, 1); }$/;"	f	class:insn_t
v_zimm11	decode.h	/^  uint64_t v_zimm11() { return x(20, 11); }$/;"	f	class:insn_t
v_zimm5	decode.h	/^  uint64_t v_zimm5() { return x(15, 5); }$/;"	f	class:insn_t
val_idx	buffer_controller.h	/^    int32_t val_idx = 0;$/;"	m	class:buffer_controller_t
validate_csr	decode.h	291;"	d
value	processor.h	/^  uint64_t value;$/;"	m	struct:commit_log_mem_t
value_base	buffer_controller.h	/^	reg_t value_base;$/;"	m	class:buffer_controller_t
vectorUnit_t	processor.h	/^    vectorUnit_t(){$/;"	f	class:vectorUnit_t
vectorUnit_t	processor.h	/^class vectorUnit_t {$/;"	c
vediv	processor.h	/^    reg_t vediv, vsew, vlmul;$/;"	m	class:vectorUnit_t
version	debug_module.h	/^  unsigned version;$/;"	m	struct:__anon6
version	debug_module.h	/^  unsigned version;$/;"	m	struct:__anon9
victimize	cachesim.cc	/^uint64_t cache_sim_t::victimize(uint64_t addr)$/;"	f	class:cache_sim_t
victimize	cachesim.cc	/^uint64_t fa_cache_sim_t::victimize(uint64_t addr)$/;"	f	class:fa_cache_sim_t
vill	processor.h	/^    bool vill;$/;"	m	class:vectorUnit_t
vl	insns/vfirst_m.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/vfmv_s_f.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/vid_v.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/viota_m.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/vleff_v.h	/^const reg_t vl = P.VU.vl;$/;"	v
vl	insns/vmsbf_m.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/vmsif_m.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/vmsof_m.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/vmv_s_x.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/vpopc_m.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/vsuxb_v.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/vsuxe_v.h	/^const reg_t vl = P.VU.vl;$/;"	v
vl	insns/vsuxh_v.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	insns/vsuxw_v.h	/^reg_t vl = P.VU.vl;$/;"	v
vl	processor.h	/^    reg_t vstart, vxrm, vxsat, vl, vtype;$/;"	m	class:vectorUnit_t
vlmax	insns/vsuxb_v.h	/^reg_t vlmax = P.VU.vlmax;$/;"	v
vlmax	insns/vsuxe_v.h	/^reg_t vlmax = P.VU.vlmax;$/;"	v
vlmax	insns/vsuxh_v.h	/^reg_t vlmax = P.VU.vlmax;$/;"	v
vlmax	insns/vsuxw_v.h	/^reg_t vlmax = P.VU.vlmax;$/;"	v
vlmax	processor.h	/^    reg_t reg_mask, vlmax, vmlen;$/;"	m	class:vectorUnit_t
vlmul	insns/vleff_v.h	/^const reg_t vlmul = P.VU.vlmul;$/;"	v
vlmul	processor.h	/^    reg_t vediv, vsew, vlmul;$/;"	m	class:vectorUnit_t
vm_info	mmu.h	/^struct vm_info {$/;"	s
vmlen	processor.h	/^    reg_t reg_mask, vlmax, vmlen;$/;"	m	class:vectorUnit_t
vr_name	regnames.cc	/^const char* vr_name[] = {$/;"	v
vs1	insns/vmand_mm.h	/^VI_LOOP_MASK(vs2 & vs1);$/;"	v
vs2	insns/vfncvt_f_f_v.h	/^  auto vs2 = P.VU.elt<float64_t>(rs2_num, i);$/;"	v
vs2	insns/vfncvt_f_x_v.h	/^  auto vs2 = P.VU.elt<int64_t>(rs2_num, i);$/;"	v
vs2	insns/vfncvt_f_xu_v.h	/^  auto vs2 = P.VU.elt<uint64_t>(rs2_num, i);$/;"	v
vs2	insns/vfncvt_x_f_v.h	/^  auto vs2 = P.VU.elt<float64_t>(rs2_num, i);$/;"	v
vs2	insns/vfncvt_xu_f_v.h	/^  auto vs2 = P.VU.elt<float64_t>(rs2_num, i);$/;"	v
vs2	insns/vfwcvt_f_f_v.h	/^  auto vs2 = P.VU.elt<float32_t>(rs2_num, i);$/;"	v
vs2	insns/vfwcvt_f_x_v.h	/^  auto vs2 = P.VU.elt<int32_t>(rs2_num, i);$/;"	v
vs2	insns/vfwcvt_f_xu_v.h	/^  auto vs2 = P.VU.elt<uint32_t>(rs2_num, i);$/;"	v
vs2	insns/vfwcvt_x_f_v.h	/^  auto vs2 = P.VU.elt<float32_t>(rs2_num, i);$/;"	v
vs2	insns/vfwcvt_xu_f_v.h	/^  auto vs2 = P.VU.elt<float32_t>(rs2_num, i);$/;"	v
vs2_0	insns/vfmv_f_s.h	/^uint64_t vs2_0 = 0;$/;"	v
vs3	insns/vsuxb_v.h	/^reg_t vs3 = insn.rd();$/;"	v
vs3	insns/vsuxe_v.h	/^reg_t vs3 = insn.rd();$/;"	v
vs3	insns/vsuxh_v.h	/^reg_t vs3 = insn.rd();$/;"	v
vs3	insns/vsuxw_v.h	/^reg_t vs3 = insn.rd();$/;"	v
vsew	processor.h	/^    reg_t vediv, vsew, vlmul;$/;"	m	class:vectorUnit_t
vsext	decode.h	313;"	d
vstart	processor.h	/^    reg_t vstart, vxrm, vxsat, vl, vtype;$/;"	m	class:vectorUnit_t
vtype	processor.h	/^    reg_t vstart, vxrm, vxsat, vl, vtype;$/;"	m	class:vectorUnit_t
vxrm	processor.h	/^    reg_t vstart, vxrm, vxsat, vl, vtype;$/;"	m	class:vectorUnit_t
vxsat	processor.h	/^    reg_t vstart, vxrm, vxsat, vl, vtype;$/;"	m	class:vectorUnit_t
vzext	decode.h	314;"	d
wait_for_interrupt_t	decode.h	/^class wait_for_interrupt_t {};$/;"	c
walk	mmu.cc	/^reg_t mmu_t::walk(reg_t addr, access_type type, reg_t mode)$/;"	f	class:mmu_t
ways	cachesim.h	/^  size_t ways;$/;"	m	class:cache_sim_t
wfi	decode.h	237;"	d
which	trap.h	/^  reg_t which;$/;"	m	class:trap_t
wqueue	memdelay.h	/^			list<Request> wqueue;$/;"	m	struct:memdelay_t::Channel::Controller
write	decode.h	/^  void write(size_t i, T value)$/;"	f	class:regfile_t
write	insns/csrrc.h	/^bool write = insn.rs1() != 0;$/;"	v
write	insns/csrrci.h	/^bool write = insn.rs1() != 0;$/;"	v
write	insns/csrrs.h	/^bool write = insn.rs1() != 0;$/;"	v
write	insns/csrrsi.h	/^bool write = insn.rs1() != 0;$/;"	v
write32	buffer_controller.cc	/^void buffer_controller_t::write32(reg_t addr, uint8_t * data)$/;"	f	class:buffer_controller_t
write32	debug_module.cc	/^void debug_module_t::write32(uint8_t *memory, unsigned int index, uint32_t value)$/;"	f	class:debug_module_t
write_accesses	cachesim.h	/^  uint64_t write_accesses;$/;"	m	class:cache_sim_t
write_chunk	sim.cc	/^void sim_t::write_chunk(addr_t taddr, size_t len, const void* src)$/;"	f	class:sim_t
write_csr	encoding.h	198;"	d
write_delay	flashmodel.h	/^        static const int64_t write_delay = 0;		\/\/60 us$/;"	m	struct:flashmodel_t::Flash
write_misses	cachesim.h	/^  uint64_t write_misses;$/;"	m	class:cache_sim_t
writebacks	cachesim.h	/^  uint64_t writebacks;$/;"	m	class:cache_sim_t
x	decode.h	/^  uint64_t x(int lo, int len) { return (b >> lo) & ((insn_bits_t(1) << len)-1); }$/;"	f	class:insn_t
xd	rocc.h	/^  unsigned xd : 1;$/;"	m	struct:rocc_insn_t
xlen	processor.h	/^  unsigned xlen;$/;"	m	class:processor_t
xlen_to_uxl	processor.cc	/^static int xlen_to_uxl(int xlen)$/;"	f	file:
xmask	insns/vmv_x_s.h	/^uint64_t xmask = UINT64_MAX >> (64 - P.get_max_xlen());$/;"	v
xori	opcodes.h	/^static uint32_t xori(unsigned int dest, unsigned int src, uint16_t imm)$/;"	f
xpr_name	regnames.cc	/^const char* xpr_name[] = {$/;"	v
xrm	insns/vaadd_vi.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vnclip_vi.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vnclip_vv.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vnclip_vx.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vnclipu_vi.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vnclipu_vv.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vnclipu_vx.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vsmul_vv.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vsmul_vx.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vssra_vi.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vssra_vv.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vssra_vx.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vssrl_vi.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vssrl_vv.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xrm	insns/vssrl_vx.h	/^VRM xrm = P.VU.get_vround_mode();$/;"	v
xs	decode.h	/^  uint64_t xs(int lo, int len) { return int64_t(b) << (64-lo-len) >> (64-len); }$/;"	f	class:insn_t
xs1	rocc.h	/^  unsigned xs1 : 1;$/;"	m	struct:rocc_insn_t
xs2	rocc.h	/^  unsigned xs2 : 1;$/;"	m	struct:rocc_insn_t
yield_load_reservation	mmu.h	/^  inline void yield_load_reservation()$/;"	f	class:mmu_t
zext32	decode.h	220;"	d
zext_xlen	decode.h	222;"	d
zimm5	insns/vrgather_vi.h	/^reg_t zimm5 = insn.v_zimm5();$/;"	v
~abstract_device_t	devices.h	/^  virtual ~abstract_device_t() {}$/;"	f	class:abstract_device_t
~arg_t	disasm.h	/^  virtual ~arg_t() {}$/;"	f	class:arg_t
~buffer_controller_t	buffer_controller.cc	/^buffer_controller_t::~buffer_controller_t()$/;"	f	class:buffer_controller_t
~cache_memtracer_t	cachesim.h	/^  ~cache_memtracer_t()$/;"	f	class:cache_memtracer_t
~cache_sim_t	cachesim.cc	/^cache_sim_t::~cache_sim_t()$/;"	f	class:cache_sim_t
~debug_module_t	debug_module.cc	/^debug_module_t::~debug_module_t()$/;"	f	class:debug_module_t
~disasm_insn_t	disasm.h	/^  ~disasm_insn_t() { free(const_cast<char *>(name)); }$/;"	f	class:disasm_insn_t
~extension_t	extension.cc	/^extension_t::~extension_t()$/;"	f	class:extension_t
~flashmodel_t	flashmodel.cc	/^flashmodel_t::~flashmodel_t()$/;"	f	class:flashmodel_t
~mem_t	devices.h	/^  ~mem_t() { free(data); }$/;"	f	class:mem_t
~memdelay_t	memdelay.cc	/^memdelay_t::~memdelay_t()$/;"	f	class:memdelay_t
~memtracer_t	memtracer.h	/^  virtual ~memtracer_t() {}$/;"	f	class:memtracer_t
~mmio_plugin_device_t	devices.cc	/^mmio_plugin_device_t::~mmio_plugin_device_t()$/;"	f	class:mmio_plugin_device_t
~mmu_t	mmu.cc	/^mmu_t::~mmu_t()$/;"	f	class:mmu_t
~prefetcher_t	prefetcher.cc	/^prefetcher_t::~prefetcher_t()$/;"	f	class:prefetcher_t
~processor_t	processor.cc	/^processor_t::~processor_t()$/;"	f	class:processor_t
~sim_t	sim.cc	/^sim_t::~sim_t()$/;"	f	class:sim_t
~vectorUnit_t	processor.h	/^    ~vectorUnit_t(){$/;"	f	class:vectorUnit_t
~vs1	insns/vmandnot_mm.h	/^VI_LOOP_MASK(vs2 & ~vs1);$/;"	v
